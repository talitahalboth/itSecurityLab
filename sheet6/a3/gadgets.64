Gadgets information
============================================================
0x000000000040e0f3 : adc ah, 3 ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004468e9 : adc ah, bh ; jmp qword ptr [rdx]
0x0000000000446761 : adc ah, bh ; jmp qword ptr [rsi]
0x0000000000446a29 : adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x00000000004468c1 : adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000042b8b5 : adc al, 0 ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000042b955 : adc al, 0 ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x0000000000446c95 : adc al, 0 ; add byte ptr [rax + 0x12], bl ; cld ; jmp qword ptr [rdx]
0x00000000004263c9 : adc al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042b9b3 : adc al, 0 ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041d71f : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7dd ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d71e : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7de ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000445890 : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x4458fa ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458d5 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445921 ; jmp rcx
0x0000000000445878 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rax ; jrcxz 0x4458e1 ; ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445912 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458ed ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445939 ; jmp rcx
0x0000000000446d35 : adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x0000000000446d75 : adc al, 0 ; add byte ptr [rdx + 0x12], dl ; cld ; jmp qword ptr [rbx]
0x000000000042b98e : adc al, 0 ; add cl, cl ; ret
0x0000000000444154 : adc al, 0x18 ; std ; jmp qword ptr [rax]
0x00000000004483a4 : adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483ae ; call qword ptr [rdx]
0x000000000041d70d : adc al, 0x3d ; add dword ptr [eax], eax ; add byte ptr [rsi + 0xf], bh ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d702 : adc al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d748 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d75e : adc al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d79e ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000043165f : adc al, 0x48 ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d49f : adc al, 0x48 ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d57f : adc al, 0x48 ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6a6 : adc al, 0x48 ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d611 : adc al, 0x48 ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6e6 : adc al, 0x66 ; pxor mm0, mm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d764 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d742 : adc al, 0x66 ; pxor mm0, mm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7ba ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d769 : adc al, 0x85 ; sar byte ptr [rcx + 0xf], 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d6ad : adc al, 0x95 ; mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d544 : adc al, 0x95 ; mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d618 : adc al, 0x95 ; mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d461 : adc al, 0x95 ; mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4a6 : adc al, 0x95 ; xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5d6 : adc al, 0x95 ; xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d586 : adc al, 0x95 ; xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d668 : adc al, 0x95 ; xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000404522 : adc al, 0xba ; push 0x29000001 ; ret 0xd089
0x0000000000415812 : adc al, 0xc5 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000437deb : adc al, 0xdc ; add rbx, 1 ; cmp rbx, rbp ; jne 0x437df9 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000427214 : adc al, 0xde ; std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000447209 : adc al, 0xfc ; jmp qword ptr [rdi]
0x0000000000447269 : adc al, 0xfc ; jmp qword ptr [rsi]
0x00000000004321fe : adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000004221da : adc al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004121fd : adc al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000407669 : adc al, 1 ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082d2 : adc al, 1 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000400af0 : adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000042bbd5 : adc al, byte ptr [rax] ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x00000000004266ea : adc al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042bc33 : adc al, byte ptr [rax] ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042bcbc : adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042bccb : adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000400adc : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400974 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009bc : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400af4 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000044a354 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x000000000044826c : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x000000000044ef34 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef70 ; call qword ptr [rbx]
0x000000000042bc0e : adc al, byte ptr [rax] ; add cl, cl ; ret
0x0000000000450114 : adc al, byte ptr [rax] ; inc dword ptr [rbx] ; xor eax, 0xc80011f0 ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000450166 : adc al, byte ptr [rax] ; ret
0x000000000042dcea : adc al, byte ptr [rdi] ; add byte ptr [rax], al ; leave ; ret
0x000000000040874b : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; leave ; ret
0x0000000000446d39 : adc bh, ah ; jmp qword ptr [rbx]
0x0000000000446c99 : adc bh, ah ; jmp qword ptr [rdx]
0x00000000004470b9 : adc bh, ah ; push qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x00000000004123e6 : adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000447958 : adc bh, byte ptr [rsi] ; cld ; jmp qword ptr [rip]
0x00000000004323ce : adc bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x00000000004338dd : adc bh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000004223ff : adc bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000042a212 : adc bl, byte ptr [rdi] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000414501 : adc bl, dh ; movups xmm0, xmmword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314a1 : adc bl, dh ; movups xmm0, xmmword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314b6 : adc bl, dh ; movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414516 : adc bl, dh ; movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043148d : adc bl, dh ; movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041203b : adc bl, dh ; movups xmm1, xmmword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e392
0x000000000040e137 : adc bl, dh ; movups xmmword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e920 : adc bl, dh ; subps xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x00000000004314a0 : adc bl, sil ; movups xmm0, xmmword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314b5 : adc bl, sil ; movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414515 : adc bl, sil ; movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043148c : adc bl, sil ; movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041203a : adc bl, sil ; movups xmm1, xmmword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e393
0x000000000041da5b : adc byte ptr [rax + 0x38], al ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x0000000000405acd : adc byte ptr [rax + 0x39], cl ; ret 0x3174
0x0000000000405fac : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000040e0de : adc byte ptr [rax + 0x3c8], al ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0f2 : adc byte ptr [rax + 0x3d4], al ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e076 : adc byte ptr [rax + 0x3d4], cl ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e106 : adc byte ptr [rax + 0x3e0], al ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040c979 : adc byte ptr [rax + 0x3e0], cl ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40396d
0x000000000040e04e : adc byte ptr [rax + 0x3e8], al ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e11a : adc byte ptr [rax + 0x3e8], al ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040c95f : adc byte ptr [rax + 0x3e8], cl ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403987
0x000000000040e082 : adc byte ptr [rax + 0x3f0], al ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e12e : adc byte ptr [rax + 0x3f0], al ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040c945 : adc byte ptr [rax + 0x3f0], cl ; movss xmm0, dword ptr [rip + 0x2d01d] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4039a1
0x0000000000436ff6 : adc byte ptr [rax + 0x44], cl ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b0
0x0000000000410242 : adc byte ptr [rax + 0x4855c35d], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000436fd5 : adc byte ptr [rax + 0x48], bl ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d1
0x00000000004374ee : adc byte ptr [rax + 0x48], cl ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d0
0x000000000043747e : adc byte ptr [rax + 0x48], cl ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d0
0x0000000000437516 : adc byte ptr [rax + 0x4c], al ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a8
0x00000000004374a6 : adc byte ptr [rax + 0x4c], al ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a8
0x00000000004374e1 : adc byte ptr [rax + 0x50], cl ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037dd
0x0000000000437471 : adc byte ptr [rax + 0x50], cl ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037dd
0x000000000040f9c7 : adc byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042c641 : adc byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x00000000004082db : adc byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000415159 : adc byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000432068 : adc byte ptr [rax + 0x60], dl ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e364
0x000000000043162f : adc byte ptr [rax + 0x63], cl ; sal bl, cl ; movups xmm1, xmmword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043203f : adc byte ptr [rax + 0x64], dl ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e38d
0x0000000000414504 : adc byte ptr [rax + 4], al ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431466 : adc byte ptr [rax + 4], al ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314a4 : adc byte ptr [rax + 4], al ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414542 : adc byte ptr [rax + 4], al ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000432028 : adc byte ptr [rax + 4], cl ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3a4
0x000000000041203e : adc byte ptr [rax + 4], cl ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e38f
0x000000000043201b : adc byte ptr [rax + 8], ah ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3b1
0x0000000000414557 : adc byte ptr [rax + 8], al ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043147b : adc byte ptr [rax + 8], al ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414519 : adc byte ptr [rax + 8], al ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041d99e : adc byte ptr [rax + 8], al ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000040b5be : adc byte ptr [rax + 8], al ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b744 : adc byte ptr [rax + rax + 0x50000], 0 ; add byte ptr [rax - 0x75], cl ; clc ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b728 : adc byte ptr [rax + rax - 0x3f7b0000], 0x75 ; xor eax, 0xf8458b48 ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7a6 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040f4de : adc byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x000000000040fae2 : adc byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410658 : adc byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x00000000004082af : adc byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000410af6 : adc byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000410ae8 : adc byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000406f1e : adc byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041d7f9 : adc byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x18] ; add eax, 0x168 ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x00000000004082a8 : adc byte ptr [rax - 0x75], cl ; clc ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x00000000004097a2 : adc byte ptr [rax - 0x75], cl ; clc ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000409118 : adc byte ptr [rax - 0x75], cl ; clc ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040f5a9 : adc byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x000000000041e51f : adc byte ptr [rax - 0x75], cl ; cwde ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7fd ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041de63 : adc byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x75] ; push rbp ; mov eax, 0x42100ff3 ; xor bl, dh ; cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041111b : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; push rdx ; sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411004 : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000411117 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; push rdx ; sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411000 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000437b99 : adc byte ptr [rax - 0x77], cl ; fucompi st(0) ; sub bh, byte ptr [rbx - 2] ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; xchg byte ptr [rdx + 0x28bffffc], bh ; add al, byte ptr [rax] ; add al, ch ; or al, 0xbb ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000405dd0 : adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000040b6da : adc byte ptr [rax - 0x7b000000], 0xc0 ; jne 0x40b704 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x0000000000437afc : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 8], 0x48 ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x00000000004249f2 : adc byte ptr [rax*4 + 0x43dc20], al ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a08
0x0000000000424a4c : adc byte ptr [rax*4 + 0x43dc30], al ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a62
0x0000000000424aa6 : adc byte ptr [rax*4 + 0x43dc40], al ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424abc
0x0000000000424998 : adc byte ptr [rax*4 + 0x43dc50], al ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249ae
0x00000000004468e5 : adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000042c023 : adc byte ptr [rax], al ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000426827 : adc byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042bf3c : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042bf4b : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004101f7 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410974 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435907 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000431490 : adc byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041452e : adc byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b41a : adc byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b42f : adc byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b444 : adc byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b45c : adc byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040e8fb : adc byte ptr [rax], al ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x00000000004500ec : adc byte ptr [rax], al ; xchg byte ptr [rdx], al ; add eax, 0xad00118e ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000040e8ef : adc byte ptr [rax], cl ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000432057 : adc byte ptr [rax], cl ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e375
0x000000000040e91f : adc byte ptr [rax], dl ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x00000000004376c0 : adc byte ptr [rbp + 0xff30000], bh ; pop rsi ; ret
0x000000000040b4db : adc byte ptr [rbp - 0x10], al ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b51f : adc byte ptr [rbp - 0x10], al ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e378 : adc byte ptr [rbp - 0x10], al ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4e9 : adc byte ptr [rbp - 0x14], al ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b52d : adc byte ptr [rbp - 0x14], al ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e386 : adc byte ptr [rbp - 0x14], al ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000412074 : adc byte ptr [rbp - 0x1a4], al ; mov rdi, rbx ; call 0x40e359
0x000000000040b4cd : adc byte ptr [rbp - 0xc], al ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b511 : adc byte ptr [rbp - 0xc], al ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e36b : adc byte ptr [rbp - 0xc], al ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000411299 : adc byte ptr [rbp - 8], al ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112c9 : adc byte ptr [rbp - 8], cl ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041128b : adc byte ptr [rbp - 8], cl ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112bb : adc byte ptr [rbp - 8], cl ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112a3 : adc byte ptr [rbp - 8], cl ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x0000000000404b62 : adc byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x0000000000409b37 : adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000409b9b : adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000409bff : adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000409c62 : adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000409cc6 : adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4805
0x0000000000409d2a : adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000000000409d8d : adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4807
0x0000000000409df1 : adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000044448c : adc byte ptr [rbx + 0x69b0fffd], bl ; add byte ptr [rax], al ; wait ; std ; call rax
0x0000000000412066 : adc byte ptr [rbx - 0x37d7f100], cl ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e367
0x0000000000412065 : adc byte ptr [rbx - 0x37d7f100], cl ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e368
0x0000000000427c78 : adc byte ptr [rcx], 0 ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x000000000041f673 : adc byte ptr [rcx], al ; nop ; leave ; ret
0x000000000044a16a : adc byte ptr [rcx], al ; or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x000000000044589e : adc byte ptr [rcx], al ; sbb ecx, dword ptr [rdi + rax] ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458c7 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445913 ; jmp rcx
0x0000000000409b0a : adc byte ptr [rcx], bl ; add byte ptr [rbx + 0x48984800], cl ; mov edx, dword ptr [rbp - 0x38] ; add rdx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d72
0x00000000004042af : adc byte ptr [rdi - 0x25], dh ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x00000000004094a5 : adc byte ptr [rdi], cl ; ret 0xd76
0x00000000004095a9 : adc byte ptr [rdi], cl ; ret 0xe76
0x000000000041de6d : adc byte ptr [rdx + 0x30], al ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041d4b2 : adc byte ptr [rdx + 0x44], al ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5e2 : adc byte ptr [rdx + 0x44], al ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d550 : adc byte ptr [rdx + 0x44], al ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d592 : adc byte ptr [rdx + 0x44], al ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d674 : adc byte ptr [rdx + 0x44], al ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d46d : adc byte ptr [rdx + 0x44], al ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6f5 : adc byte ptr [rdx + 0x48], cl ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d755 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d751 : adc byte ptr [rdx + 0x48], cl ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7ab ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db33 : adc byte ptr [rdx + 0x50], dl ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d492 : adc byte ptr [rdx + 0xc], cl ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d572 : adc byte ptr [rdx + 0xc], cl ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d699 : adc byte ptr [rdx + 0xc], cl ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d604 : adc byte ptr [rdx + 0xc], cl ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db2a : adc byte ptr [rdx + 8], cl ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4a5 : adc byte ptr [rdx*4 + 0x43b480], dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d585 : adc byte ptr [rdx*4 + 0x43b480], dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6ac : adc byte ptr [rdx*4 + 0x43ba40], dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d617 : adc byte ptr [rdx*4 + 0x43ba40], dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000431635 : adc byte ptr [rdx*4 + 0x440b80], cl ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431665 : adc byte ptr [rdx*4 + 0x440b80], cl ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043166e : adc byte ptr [rip + 0x10074], al ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431642 : adc byte ptr [rip + 0x100a0], cl ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431620 : adc byte ptr [rip + 0x100ca], al ; xorps xmm0, xmm1 ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000432098 : adc byte ptr [rip + 0x1030e], cl ; pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e35d
0x000000000041dc4b : adc byte ptr [rip + 0x1e3e3], al ; movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000041d39c : adc byte ptr [rip + 0x1eca6], al ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d38b : adc byte ptr [rip + 0x1ecaf], al ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x00000000004120a4 : adc byte ptr [rip + 0x285de], al ; mov rdi, rbx ; call 0x40e359
0x000000000041209c : adc byte ptr [rip + 0x285e6], cl ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e361
0x00000000004112ce : adc byte ptr [rip + 0x28738], al ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112ac : adc byte ptr [rip + 0x28756], cl ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041127c : adc byte ptr [rip + 0x28786], cl ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040e927 : adc byte ptr [rip + 0x2b05b], dl ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e08e : adc byte ptr [rip + 0x2b8f8], cl ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e05a : adc byte ptr [rip + 0x2b92c], cl ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040c981 : adc byte ptr [rip + 0x2cfe9], al ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403965
0x000000000040c967 : adc byte ptr [rip + 0x2d003], al ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40397f
0x000000000040c94d : adc byte ptr [rip + 0x2d01d], al ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403999
0x000000000043751b : adc byte ptr [rip + 0xbeb3], dl ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a3
0x00000000004374ab : adc byte ptr [rip + 0xbf23], dl ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a3
0x0000000000436ffb : adc byte ptr [rip + 0xc3d3], dl ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ab
0x0000000000430892 : adc byte ptr [rip + 0xf54c], al ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x0000000000430881 : adc byte ptr [rip + 0xf559], al ; movss dword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x00000000004321ac : adc byte ptr [rip - 0x76b70003], dl ; ret
0x000000000044a33b : adc byte ptr [rsi + 0x60d4302], al ; add ah, ah ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x3a00004a ; std ; call qword ptr [rdx]
0x000000000044a063 : adc byte ptr [rsi + 0x60d4302], al ; add bl, dl ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x000000000044a123 : adc byte ptr [rsi + 0x60d4302], al ; add cl, byte ptr [rbx + 0x8070c] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x00000000004475ab : adc byte ptr [rsi + 0x60d4302], al ; add dl, byte ptr [rbx + 0x8070c] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x0000000000447dfb : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 0x72 ; or al, 7 ; or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; jl 0x447e6b ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000446c7b : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b7b : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x000000000044649b : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000446653 : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf53 : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c663 : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044c233 : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x000000000044c0c3 : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044c3a3 : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004462a3 : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044a77f : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004498e7 : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x000000000044a203 : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 3 ; movabs al, byte ptr [0x8070c07] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000044e747 : adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 3 ; ret 0xc02
0x0000000000445adb : adc byte ptr [rsi + 0x60d4302], al ; add ebx, dword ptr [rsi + 0x8070c01] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x00000000004475cb : adc byte ptr [rsi + 0x60d4302], al ; add ecx, dword ptr [rsi + 0x8070c01] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x0000000000445923 : adc byte ptr [rsi + 0x60d4302], al ; add edi, dword ptr [rcx + 0x8070c02] ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x000000000044a163 : adc byte ptr [rsi + 0x60d4302], al ; add edx, dword ptr [rax] ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x0000000000447b03 : adc byte ptr [rsi + 0x60d4302], al ; add esi, ebx ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x0000000000445a33 : adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; movsd dword ptr [rdi], dword ptr [rsi] ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a52f : adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x00000000004481eb : adc byte ptr [rsi + 0x60d4302], al ; imul ecx, dword ptr [rdi + rax], 8 ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x448217 ; call rdx
0x000000000044c8a3 : adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x000000000044637b : adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x00000000004492e3 : adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x000000000044c473 : adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x00000000004485eb : adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5c3 : adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x000000000044c733 : adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x000000000044c023 : adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044c303 : adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044beb3 : adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000044ce6b : adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44cea7 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493e3 : adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3e3 : adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d41f ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a33 : adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf33 : adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468cb : adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044cda3 : adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044cffb : adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x00000000004470c3 : adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x0000000000448e0f : adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x0000000000449757 : adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000044647b : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000448393 : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483bf ; call qword ptr [rdx]
0x00000000004493a3 : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044a35b : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x0000000000448273 : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000446d63 : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000044d46b : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4b7 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000449df3 : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x449e63 ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x0000000000447e3b : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e87 ; jmp qword ptr [rip]
0x000000000044ef3b : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef69 ; call qword ptr [rbx]
0x0000000000446d23 : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x000000000044948b : adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x44947a ; cld ; jmp qword ptr [rbx]
0x000000000044a883 : adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a882 ; std ; jmp qword ptr [rsi]
0x000000000044a7c3 : adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000447e1b : adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044a803 : adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044d48b : adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044d4ab : adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044cd83 : adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdd6 ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493c3 : adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3c3 : adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; jnp 0x44d417 ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d43f ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004468ab : adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000446a13 : adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf13 : adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf67 ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000447d3b : adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d67 ; jmp qword ptr [rdx]
0x000000000044760b : adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004458ba : adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458f7 ; jmp rcx
0x0000000000430754 : adc byte ptr [rsi], 0x65 ; add al, ch ; ret
0x00000000004287e6 : adc byte ptr [rsi], ah ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004325ce : adc ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000041da54 : adc cl, byte ptr [rax - 0x75] ; clc ; movss xmm0, dword ptr [rax + 0x38] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x0000000000415156 : adc cl, byte ptr [rax - 0x77] ; adc byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406a4f : adc cl, ch ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000428bc7 : adc cl, ch ; sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000422624 : adc dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000041e515 : adc dh, cl ; add byte ptr [r8 - 0x75], cl ; cwde ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e807 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x0000000000446ed8 : adc dil, spl ; jmp qword ptr [rbx]
0x000000000043089a : adc dword ptr [rax + 0x28], eax ; nop ; pop rbp ; ret
0x0000000000430889 : adc dword ptr [rax + 0x2c], eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000041da64 : adc dword ptr [rax + 0x30], eax ; nop ; pop rbp ; ret
0x000000000041dc53 : adc dword ptr [rax + 0x34], eax ; nop ; pop rbp ; ret
0x000000000040e06a : adc dword ptr [rax + 0x3cc], eax ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e09e : adc dword ptr [rax + 0x3d8], eax ; nop ; pop rbp ; ret
0x000000000041d382 : adc dword ptr [rax + 0x48], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1ecaf] ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d393 : adc dword ptr [rax + 0x4c], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d3a4 : adc dword ptr [rax + 0x50], eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040b4d2 : adc dword ptr [rax + 0x5c], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4e0 : adc dword ptr [rax + 0x60], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4ee : adc dword ptr [rax + 0x64], eax ; nop ; pop rbp ; ret
0x000000000040b516 : adc dword ptr [rax + 0x68], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040b524 : adc dword ptr [rax + 0x6c], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040b532 : adc dword ptr [rax + 0x70], eax ; nop ; pop rbp ; ret
0x000000000040b422 : adc dword ptr [rax + 0x78], eax ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b437 : adc dword ptr [rax + 0x7c], eax ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b44c : adc dword ptr [rax + 0x80], eax ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b464 : adc dword ptr [rax + 0x84], eax ; nop ; pop rbp ; ret
0x000000000041d4bf : adc dword ptr [rax + 0xc], eax ; nop ; pop rbp ; ret
0x000000000041d3cb : adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d9a7 : adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000043164e : adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d684 : adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5ef : adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000040e37d : adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d47d : adc dword ptr [rax + 8], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d55d : adc dword ptr [rax + 8], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000040e38b : adc dword ptr [rax + 8], eax ; nop ; pop rbp ; ret
0x00000000004249b5 : adc dword ptr [rax + rdx*4 + 8], eax ; add dword ptr [rbp - 0x84], 1 ; jmp 0x424991
0x0000000000424a0f : adc dword ptr [rax + rdx*4 + 8], eax ; add dword ptr [rbp - 0x88], 1 ; jmp 0x4249eb
0x0000000000424a69 : adc dword ptr [rax + rdx*4 + 8], eax ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a45
0x0000000000424ac3 : adc dword ptr [rax + rdx*4 + 8], eax ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424a9f
0x000000000041dc44 : adc dword ptr [rax - 0x75], ecx ; clc ; movss xmm0, dword ptr [rip + 0x1e3e3] ; movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000042bdb5 : adc dword ptr [rax], eax ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000042be55 : adc dword ptr [rax], eax ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x000000000041b41d : adc dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042beb3 : adc dword ptr [rax], eax ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000427c79 : adc dword ptr [rax], eax ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000447e34 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e8e ; jmp qword ptr [rip]
0x0000000000446a4d : adc dword ptr [rax], eax ; add byte ptr [rdx], al ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000042be8e : adc dword ptr [rax], eax ; add cl, cl ; ret
0x0000000000446a25 : adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x00000000004500fd : adc dword ptr [rax], eax ; add dword ptr [rbx], 0x11ab05 ; nop ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000045011a : adc dword ptr [rax], eax ; enter 0x504, -0x24 ; adc dword ptr [rax], eax ; xlatb ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004500f2 : adc dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000040b5b6 : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000431498 : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314ad : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041450d : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431484 : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414536 : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041454b : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414522 : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043146f : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0ea : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0fe : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e112 : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e126 : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e370 : adc dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b5e3 : adc dword ptr [rax], eax ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000450103 : adc dword ptr [rax], eax ; nop ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004315a6 : adc dword ptr [rax], eax ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e13a : adc dword ptr [rax], eax ; nop ; pop rbp ; ret
0x0000000000450126 : adc dword ptr [rax], eax ; ret 0x505
0x0000000000450109 : adc dword ptr [rax], eax ; rol byte ptr [rbx], cl ; add eax, 0x3e10000 ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004500e6 : adc dword ptr [rax], eax ; test dword ptr [rcx], 0x10fa05 ; xchg byte ptr [rdx], al ; add eax, 0xad00118e ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000450120 : adc dword ptr [rax], eax ; xlatb ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000042d5cb : adc dword ptr [rax], ecx ; add byte ptr [rax], al ; leave ; ret
0x000000000040b4bf : adc dword ptr [rbp - 0x10], ecx ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b503 : adc dword ptr [rbp - 0x10], ecx ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e35d : adc dword ptr [rbp - 0x10], ecx ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4c4 : adc dword ptr [rbp - 0x14], edx ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b508 : adc dword ptr [rbp - 0x14], edx ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e362 : adc dword ptr [rbp - 0x14], edx ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4ba : adc dword ptr [rbp - 0xc], eax ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4fe : adc dword ptr [rbp - 0xc], eax ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e358 : adc dword ptr [rbp - 0xc], eax ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000411294 : adc dword ptr [rbp - 8], eax ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112c4 : adc dword ptr [rbp - 8], eax ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040e937 : adc dword ptr [rcx], eax ; nop ; pop rbp ; ret
0x00000000004073f1 : adc dword ptr [rcx], ecx ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000042beb2 : adc dword ptr ds:[rax], eax ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000448e1c : adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x000000000041ffc9 : adc eax, 0x251c3a ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fff1 ; jmp rsp
0x000000000041ffc3 : adc eax, 0x251c44 ; mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fff7 ; jmp rsp
0x000000000040e928 : adc eax, 0x2b05b ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x00000000004135d9 : adc eax, 0x39480000 ; ret
0x0000000000403c02 : adc eax, 0x48550065 ; sub eax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c53 ; mov eax, 0 ; test rax, rax ; je 0x403c53 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c01 : adc eax, 0x48550065 ; sub eax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c54 ; mov eax, 0 ; test rax, rax ; je 0x403c54 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c42 : adc eax, 0x48550065 ; sub esi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403ca9 ; mov eax, 0 ; test rax, rax ; je 0x403ca9 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000428c67 : adc eax, 0x48fffdae ; add esp, 0x60 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000042b6d5 : adc eax, 0x5eb0000 ; mov eax, 0 ; leave ; ret
0x0000000000448e05 : adc eax, 0x63040000 ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x000000000042b7bc : adc eax, 0x89480000 ; ret
0x000000000042b7cb : adc eax, 0x89480000 ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x000000000043210b : adc eax, 0x8948fffd ; ret
0x000000000042215d : adc eax, 0x8948fffe ; ret
0x00000000004120c0 : adc eax, 0x8948ffff ; ret
0x000000000043751c : adc eax, 0xbeb3 ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a2
0x00000000004374ac : adc eax, 0xbf23 ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a2
0x0000000000403c4a : adc eax, 0xc1480065 ; inc byte ptr [rbx] ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403ca1 ; mov eax, 0 ; test rax, rax ; je 0x403ca1 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000436ffc : adc eax, 0xc3d3 ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037aa
0x000000000040d10e : adc eax, 0xc9900000 ; ret
0x0000000000403c70 : adc eax, 0xe0ff0065 ; nop dword ptr [rax] ; pop rbp ; ret
0x0000000000403c22 : adc eax, 0xe0ff0065 ; nop word ptr [rax + rax] ; pop rbp ; ret
0x0000000000425177 : adc eax, 0xebfffde8 ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041ea77 : adc eax, 0xebfffe4f ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000419b37 : adc eax, 0xf000218 ; push rdi ; ret 0x8b48
0x000000000042bb35 : adc eax, dword ptr [rax] ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000042ba3c : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042ba4b : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041f469 : adc eax, dword ptr [rsi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000407ce6 : adc eax, dword ptr [rsi] ; add byte ptr [rax], al ; leave ; ret
0x000000000042bb34 : adc eax, dword ptr ds:[rax] ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004159d7 : adc ebp, dword ptr [rbx] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004324be : adc ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000409a19 : adc ebx, dword ptr [rsi - 0x76b70001] ; ret 0x8b48
0x00000000004322c7 : adc edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x000000000044573d : adc edi, edi ; call qword ptr [rax]
0x0000000000412326 : adc edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004222c7 : adc edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004470e1 : adc edi, esp ; jmp qword ptr [rsi]
0x00000000004380b1 : adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000438381 : adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x00000000004224ec : adc esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000434799 : adc esi, esp ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000446a51 : adc esp, edi ; jmp qword ptr [rdx]
0x00000000004380b0 : adc r10, r14 ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000438380 : adc r10, r14 ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x000000000040e136 : adc r11b, r14b ; movups xmmword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000042bcbb : adc r8b, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446d73 : add ah, ah ; adc al, 0 ; add byte ptr [rdx + 0x12], dl ; cld ; jmp qword ptr [rbx]
0x000000000044a873 : add ah, ah ; add byte ptr [r8], r8b ; jle 0x44a852 ; std ; jmp qword ptr [rax]
0x000000000044a073 : add ah, ah ; add byte ptr [r8], r8b ; xor al, 0xfd ; jmp rdx
0x000000000044a173 : add ah, ah ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x000000000044bd73 : add ah, ah ; add byte ptr fs:[rax], al ; ret 0xfdf4
0x000000000044a341 : add ah, ah ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x3a00004a ; std ; call qword ptr [rdx]
0x0000000000443a43 : add ah, ah ; push rbx ; cld ; call qword ptr [rax]
0x00000000004439f3 : add ah, ah ; push rcx ; cld ; call rax
0x000000000044a457 : add ah, ah ; push rcx ; std ; call qword ptr [rdx]
0x000000000044a453 : add ah, al ; add byte ptr [r8], al ; in al, 0x51 ; std ; call qword ptr [rdx]
0x000000000044a853 : add ah, al ; add byte ptr [r8], r8b ; js 0x44a832 ; std ; jmp qword ptr [rsi]
0x0000000000444e4b : add ah, al ; mov dr1, esi ; call rax
0x0000000000448553 : add ah, al ; sub al, 0 ; add byte ptr [rdx + rax*4], bh ; cld ; call qword ptr [rcx]
0x000000000044638b : add ah, bh ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x000000000044648b : add ah, bh ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004468e7 : add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044bf6b : add ah, bl ; add byte ptr [rax], al ; cli ; cmc ; std ; call qword ptr [rcx]
0x000000000044a36b : add ah, bl ; add byte ptr [rax], al ; sub al, 0x49 ; std ; call qword ptr [rbx]
0x0000000000445a6b : add ah, bl ; add dword ptr [rax], eax ; add dl, ah ; cmc ; sti ; jmp qword ptr [rax]
0x0000000000447e6b : add ah, bl ; and eax, 0x77780000 ; cld ; jmp qword ptr [rdx]
0x0000000000445a4f : add ah, bl ; cmc ; sti ; jmp qword ptr [rsi]
0x00000000004456bb : add ah, bl ; fsin ; jmp rax
0x000000000044666b : add ah, bl ; or eax, 0xd8c0000 ; cld ; call qword ptr [rcx]
0x000000000044463b : add ah, bl ; ret 0xfffd
0x00000000004500dc : add ah, byte ptr [rbx + 0x1b01] ; jrcxz 0x450131 ; add eax, 0xf700118e ; add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000042837d : add ah, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000044a27b : add ah, ch ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044c67b : add ah, ch ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044d47b : add ah, ch ; jnp 0x44d4a7 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044e77b : add ah, ch ; mov es, word ptr [rax] ; add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x0000000000449c5b : add ah, cl ; add byte ptr [r8], al ; cmp dword ptr [rcx], esi ; std ; jmp qword ptr [rsi]
0x000000000044a25b : add ah, cl ; add byte ptr [r8], al ; std ; jmp qword ptr [rsi]
0x000000000044a543 : add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000449743 : add ah, cl ; cmp eax, 0xc2d20000 ; cld ; call rax
0x000000000044d45b : add ah, cl ; jnp 0x44d4a7 ; add byte ptr [rsi + rdi*8 + 0xffffd], dl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4c7 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000444b7b : add ah, cl ; jns 0x444b89 ; inc dword ptr [rax] ; xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444b91 ; jmp qword ptr [rax]
0x0000000000444603 : add ah, cl ; mov edx, 0x6ff8fffd ; add byte ptr [rax], al ; or cl, al ; std ; jmp qword ptr [rax]
0x000000000044976b : add ah, dh ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000044c483 : add ah, dh ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x000000000044ce83 : add ah, dh ; jne 0x44ce8f ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x0000000000448283 : add ah, dh ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x00000000004444cb : add ah, dh ; wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x0000000000445d63 : add ah, dl ; add al, 0 ; add byte ptr [rdx - 1], ah ; sti ; jmp qword ptr [rax]
0x0000000000449d63 : add ah, dl ; add byte ptr [rax], r8b ; xor rbp, r15 ; jmp qword ptr [rdx]
0x000000000044379b : add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004437cb : add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000044b663 : add ah, dl ; pop rbp ; add byte ptr [rax], al ; mov ah, 0xeb ; std ; call qword ptr [rcx]
0x0000000000448263 : add ah, dl ; sub dword ptr [rax], eax ; add byte ptr [rbx + 0x7e], ch ; cld ; call qword ptr [rdx]
0x000000000042a56a : add al, 0 ; add al, ch ; xchg rax, rbx ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000405a87 : add al, 0 ; add bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x00000000004107d3 : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000405812 : add al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040f57c : add al, 0 ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040f62c : add al, 0 ; add byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x0000000000408252 : add al, 0 ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x00000000004107c4 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004059dc : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000041f324 : add al, 0 ; add byte ptr [rax], al ; add cl, ch ; rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004135e7 : add al, 0 ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041afe0 : add al, 0 ; add byte ptr [rbx - 0x74b717bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000445d45 : add al, 0 ; add byte ptr [rdi + rdi*8 - 5], bl ; jmp qword ptr [rsi]
0x0000000000445d65 : add al, 0 ; add byte ptr [rdx - 1], ah ; sti ; jmp qword ptr [rax]
0x000000000040806a : add al, 0 ; add cl, cl ; ret
0x000000000044a528 : add al, 0 ; clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000446c94 : add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x00000000004272d7 : add al, 0x29 ; ret
0x000000000044a778 : add al, 0x39 ; std ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000449b94 : add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x0000000000449750 : add al, 0x47 ; hlt ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x0000000000406df9 : add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000414506 : add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431468 : add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314a6 : add al, 0x48 ; mov eax, dword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414544 : add al, 0x48 ; mov eax, dword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041f66c : add al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x000000000041d3cd : add al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d9a9 : add al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000431650 : add al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d686 : add al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5f1 : add al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000040e37f : add al, 0x48 ; mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000407a0a : add al, 0x48 ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041de7f : add al, 0x48 ; mov edi, eax ; call rcx
0x000000000042ecc8 : add al, 0x4d ; std ; dec dword ptr [rax - 0x75] ; clc ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000044a794 : add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a894 : add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a871 ; std ; jmp qword ptr [rsi]
0x0000000000450123 : add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000448e08 : add al, 0x63 ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x00000000004498e0 : add al, 0x72 ; cmc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x000000000044cd94 : add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdc5 ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000427265 : add al, 0x77 ; mov rax, r8 ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x0000000000443b74 : add al, 0x81 ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x00000000004308b7 : add al, 0x83 ; lock add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x0000000000424aa7 : add al, 0x85 ; fadd qword ptr [rbx] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424abb
0x0000000000424999 : add al, 0x85 ; push rax ; fadd qword ptr [rbx] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249ad
0x0000000000412040 : add al, 0x8b ; push rbp ; fmul qword ptr [rcx + 0x2e0c1d0] ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e38d
0x000000000041203f : add al, 0x8b ; push rbp ; fmul qword ptr [rcx + 0x2e0c1d0] ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e38e
0x00000000004308c3 : add al, 0x90 ; pop rbp ; ret
0x00000000004443ac : add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444514 : add al, 0x9e ; std ; jmp rax
0x00000000004042b6 : add al, 0xc5 ; call 0xffffffffff40864d
0x000000000041dead : add al, 0xc5 ; call 0xffffffffff422279
0x000000000041ef3b : add al, 0xc5 ; push rax ; fild dword ptr [rbx] ; jmp rax
0x0000000000436a78 : add al, 0xd0 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000041ef30 : add al, 0xf ; xchg dword ptr [rdx + rax], ecx ; add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000040b42c : add al, 0xf3 ; movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x0000000000423206 : add al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004136ec : add al, 0xff ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000040e8e9 : add al, 1 ; add byte ptr [rax], al ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e919 : add al, 1 ; add byte ptr [rax], al ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000044ce75 : add al, 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ce9d ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493ed : add al, 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3ed : add al, 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d415 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a3d : add al, 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf3d : add al, 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468d5 : add al, 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x00000000004470cd : add al, 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000044cdad : add al, 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d005 : add al, 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x0000000000448219 : add al, 3 ; ret
0x000000000045011d : add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004458af : add al, ah ; fdivr st(3) ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445902 ; jmp rcx
0x00000000004464b7 : add al, al ; or edi, esp ; call qword ptr [rcx]
0x0000000000443d03 : add al, al ; sar esp, -1 ; cmp byte ptr [rdx], cl ; add dl, dl ; sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d86 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x000000000044a529 : add al, bh ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x00000000004439fb : add al, bh ; push rcx ; cld ; push rax ; cmp eax, 0x52250000 ; cld ; call qword ptr [rax]
0x0000000000443d13 : add al, bh ; sar esp, -1 ; js 0x443d76 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000448dff : add al, bh ; xchg ah, bh ; call rbx
0x000000000044a137 : add al, bl ; std ; call qword ptr [rax]
0x0000000000437d77 : add al, bpl ; add bh, byte ptr [rax - 0x366f0004] ; ret
0x000000000041f6ac : add al, bpl ; int 0x3e
0x0000000000430a5c : add al, bpl ; sbb eax, 0x90fffd2b ; leave ; ret
0x0000000000437bac : add al, byte ptr [rax] ; add al, ch ; or al, 0xbb ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000004109e7 : add al, byte ptr [rax] ; add byte ptr [rax + 0x28c48348], dl ; pop rbx ; pop rbp ; ret
0x000000000040b216 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000410a77 : add al, byte ptr [rax] ; add byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410cd1 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410a3d : add al, byte ptr [rax] ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x000000000041e1d1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x75] ; push rbp ; mov eax, 0x42100ff3 ; xor bl, dh ; cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000410cb3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x0000000000410b9f : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000410ca1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000410aa1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000415199 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000445aed : add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x0000000000408bbb : add al, byte ptr [rax] ; add byte ptr [rax], al ; leave ; ret
0x0000000000420075 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000041dea5 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x74b71bbb], cl ; add al, 0xc5 ; call 0xffffffffff422281
0x0000000000445aad : add al, byte ptr [rax] ; add byte ptr [rdi - 0xb], ah ; sti ; call qword ptr [rip]
0x0000000000408610 : add al, byte ptr [rax] ; add cl, cl ; ret
0x000000000040e05e : add al, byte ptr [rax] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e092 : add al, byte ptr [rax] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x00000000004112d2 : add al, byte ptr [rax] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004120a8 : add al, byte ptr [rax] ; mov rdi, rbx ; call 0x40e355
0x000000000040c951 : add al, byte ptr [rax] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403995
0x000000000040c96b : add al, byte ptr [rax] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40397b
0x00000000004120a0 : add al, byte ptr [rax] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e35d
0x000000000040e92b : add al, byte ptr [rax] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000411280 : add al, byte ptr [rax] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112b0 : add al, byte ptr [rax] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040c985 : add al, byte ptr [rax] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403961
0x000000000041201d : add al, byte ptr [rcx] ; rol byte ptr [rcx], 1 ; shl byte ptr [rsi + 0xf], 0xef ; sal bl, 0xf ; sub al, al ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3b0
0x0000000000412048 : add al, byte ptr [rcx] ; rol byte ptr [rcx], 1 ; shl byte ptr [rsi + 0xf], 0xef ; sal bl, 0xf ; sub al, al ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e385
0x00000000004500ef : add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004500fa : add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000432279 : add al, ch ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000004321aa : add al, ch ; adc byte ptr [rip - 0x76b70003], dl ; ret
0x0000000000437d78 : add al, ch ; add bh, byte ptr [rax - 0x366f0004] ; ret
0x00000000004239b8 : add al, ch ; add bh, ch ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004188b9 : add al, ch ; add dword ptr [rsi - 0x76b70002], ebp ; ret
0x0000000000421453 : add al, ch ; and bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417c9a : add al, ch ; and byte ptr [rdx - 0x76b70002], bh ; ret
0x0000000000411578 : add al, ch ; and edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421556 : add al, ch ; and esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431573 : add al, ch ; and r13d, r15d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411473 : add al, ch ; and r15b, r15b ; dec dword ptr [rax - 0x77] ; ret
0x00000000004324bb : add al, ch ; call qword ptr [rcx]
0x0000000000422621 : add al, ch ; cdq ; adc dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000415dbe : add al, ch ; cld ; fdivr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423a7a : add al, ch ; cld ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004232c5 : add al, ch ; cmc ; add edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x000000000042947e : add al, ch ; cmp al, 0xa4 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437c80 : add al, ch ; cmp bh, byte ptr [rdx - 0x76b70004] ; ret
0x000000000041847f : add al, ch ; cmp esi, dword ptr [rdx - 0x76b70002] ; ret
0x0000000000412514 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; adc edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000412914 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, 0x8948ffff ; ret
0x000000000040729c : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431e14 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421d22 : add al, ch ; cwde ; sbb esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417edb : add al, ch ; fbstp dword ptr [rdi - 0x76b70002] ; ret
0x0000000000437572 : add al, ch ; fdivr dword ptr [rdi + 0x50bffffc] ; or eax, dword ptr [rax] ; add al, ch ; sahf ; sar ah, 0xff ; mov edi, 0x1701 ; call 0x403877
0x00000000004187dc : add al, ch ; fisubr word ptr [rsi - 0x76b70002] ; ret
0x0000000000415d6e : add al, ch ; fsin ; dec dword ptr [rax - 0x77] ; ret
0x00000000004180c6 : add al, ch ; hlt ; mov ch, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421b51 : add al, ch ; imul ebx, dword ptr [rbx], 0x8948fffe ; ret
0x0000000000411b51 : add al, ch ; imul ebx, dword ptr [rbx], 0x8948ffff ; ret
0x000000000041e84f : add al, ch ; imul ecx, dword ptr [rdi - 2], -1 ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41ea0d ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cdb0] ; jmp rax
0x0000000000416e51 : add al, ch ; imul ecx, eax, 0x8948fffe ; ret
0x0000000000432651 : add al, ch ; imul edx, dword ptr [rax], 0x8948fffd ; ret
0x00000000004184ce : add al, ch ; in al, dx ; mov cl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421bce : add al, ch ; in al, dx ; sbb bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004375fe : add al, ch ; insb byte ptr [rdi], dx ; mov esp, 0x17e8fffc ; ret 0xfffc
0x00000000004212ed : add al, ch ; int 0x23
0x00000000004203ed : add al, ch ; int 0x33
0x000000000041f6ad : add al, ch ; int 0x3e
0x00000000004166ed : add al, ch ; int 0xcf
0x00000000004162ed : add al, ch ; int 0xd3
0x0000000000404ebd : add al, ch ; int 0xe6
0x00000000004228c9 : add al, ch ; int1 ; or eax, 0x8948fffe ; ret
0x00000000004244c7 : add al, ch ; int1 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423c48 : add al, ch ; jb 0x423c4e ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042afcc : add al, ch ; jbe 0x42af81 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000435b64 : add al, ch ; jbe 0x435b55 ; cld ; inc dword ptr [rbx - 0x6bf00008] ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x0000000000435b64 : add al, ch ; jbe 0x435b5b ; cld ; inc dword ptr [rbx - 0x6bf00008] ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x000000000042393b : add al, ch ; jg 0x423944 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423a3b : add al, ch ; jg 0x423a43 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000404ace : add al, ch ; jmp 0x404aee
0x0000000000404ace : add al, ch ; jmp 0x404b0a
0x0000000000416ccf : add al, ch ; jmp 0x416ca4
0x0000000000416ccf : add al, ch ; jmp 0x416cf4
0x0000000000420ebb : add al, ch ; jmp qword ptr [rdi]
0x0000000000432345 : add al, ch ; jne 0x432364 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000429e4a : add al, ch ; jo 0x429df0 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424f2b : add al, ch ; lahf ; out 0xfd, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000041782d : add al, ch ; lea edi, dword ptr [rsi - 0x76b70002] ; ret
0x000000000041790e : add al, ch ; lodsb al, byte ptr [rsi] ; mov ebp, 0x8948fffe ; ret
0x000000000042340d : add al, ch ; lodsd eax, dword ptr [rsi] ; add bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000042350d : add al, ch ; lodsd eax, dword ptr [rsi] ; add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000042e461 : add al, ch ; loope 0x42e4e1 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000429b06 : add al, ch ; mov ah, 0x9d ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417b30 : add al, ch ; mov bh, byte ptr [rbx - 0x76b70002] ; ret
0x000000000044433b : add al, ch ; mov bh, ch ; jmp qword ptr [rax - 0x4effff9c]
0x0000000000444dd3 : add al, ch ; mov bh, dh ; call rax
0x000000000041817a : add al, ch ; mov bpl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424f05 : add al, ch ; mov ch, 0xe7 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432508 : add al, ch ; mov dl, 0x11 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432108 : add al, ch ; mov dl, 0x15 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432008 : add al, ch ; mov dl, 0x16 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000418456 : add al, ch ; mov dl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000043242f : add al, ch ; mov edx, dword ptr [rdx] ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000418673 : add al, ch ; mov r8b, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000418070 : add al, ch ; mov sil, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000041b9a9 : add al, ch ; movabs eax, dword ptr [0xfffe813ce8fffe7b] ; nop ; leave ; ret
0x0000000000416316 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; sar esi, cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431916 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, 0x8948fffd ; ret
0x000000000041c315 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; jae 0x41c320 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004322c4 : add al, ch ; not byte ptr [rbx] ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437bae : add al, ch ; or al, 0xbb ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422a6b : add al, ch ; or al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004129c7 : add al, ch ; or al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000004320b2 : add al, ch ; or byte ptr [rsi], dl ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422d75 : add al, ch ; or r14d, r15d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422c75 : add al, ch ; or r15b, r14b ; dec dword ptr [rax - 0x77] ; ret
0x00000000004323cb : add al, ch ; out dx, eax ; adc bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x00000000004325cb : add al, ch ; out dx, eax ; adc ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423bcb : add al, ch ; out dx, eax ; cli ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423ccb : add al, ch ; out dx, eax ; stc ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043224c : add al, ch ; outsb dx, byte ptr [rsi] ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x000000000042354c : add al, ch ; outsb dx, byte ptr [rsi] ; add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000430d4b : add al, ch ; outsd dx, dword ptr [rsi] ; sub ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411c5f : add al, ch ; pop rbx ; sbb bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421e61 : add al, ch ; pop rcx ; sbb dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000041825b : add al, ch ; pop rdi ; mov ah, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437b5e : add al, ch ; pop rsp ; mov ebx, 0x8948fffc ; ret
0x000000000042136a : add al, ch ; push rax ; and edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411d6a : add al, ch ; push rax ; sbb edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000430c6a : add al, ch ; push rax ; sub bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000415a65 : add al, ch ; push rbp ; fdiv st(6), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000412167 : add al, ch ; push rbx ; adc eax, 0x8948ffff ; ret
0x0000000000432567 : add al, ch ; push rbx ; adc ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000420e67 : add al, ch ; push rbx ; sub dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000420d67 : add al, ch ; push rbx ; sub esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437073 : add al, ch ; push rdi ; ret
0x0000000000417968 : add al, ch ; push rdx ; mov ebp, 0x8948fffe ; ret
0x0000000000421a68 : add al, ch ; push rdx ; sbb al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000416366 : add al, ch ; push rsp ; sar esi, cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000041741e : add al, ch ; pushfq ; ret 0xfffe
0x0000000000411ffa : add al, ch ; rcl byte ptr [rsi], 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431de7 : add al, ch ; rcr dword ptr [rax], cl ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000430757 : add al, ch ; ret
0x0000000000435b78 : add al, ch ; ret 0xfcdd
0x00000000004160f8 : add al, ch ; ret 0xfed5
0x0000000000417484 : add al, ch ; ret 0xfffe
0x000000000043757c : add al, ch ; sahf ; sar ah, 0xff ; mov edi, 0x1701 ; call 0x40386d
0x000000000042742c : add al, ch ; sahf ; sar ebp, -1 ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x180] ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x0000000000417fe9 : add al, ch ; sal dword ptr [rsi - 0x76b70002], 1 ; ret
0x0000000000421de4 : add al, ch ; salc ; sbb dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000420de4 : add al, ch ; salc ; sub dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000416674 : add al, ch ; sar sil, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004319c7 : add al, ch ; sbb al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421c54 : add al, ch ; sbb bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004183a2 : add al, ch ; sbb byte ptr [rbx - 0x76b70002], dh ; ret
0x0000000000430a5d : add al, ch ; sbb eax, 0x90fffd2b ; leave ; ret
0x00000000004245a1 : add al, ch ; sbb ecx, esi ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431d6b : add al, ch ; sbb r13, r15 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431c6e : add al, ch ; sbb r15b, bpl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437c0c : add al, ch ; scasb al, byte ptr [rdi] ; mov edx, 0x8948fffc ; ret
0x0000000000436f71 : add al, ch ; stc ; ret 0xfffc
0x00000000004120bd : add al, ch ; std ; adc eax, 0x8948ffff ; ret
0x00000000004185bf : add al, ch ; sti ; mov al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437020 : add al, ch ; stosb byte ptr [rdi], al ; ret
0x000000000043248e : add al, ch ; sub al, 0x12 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042a18e : add al, ch ; sub al, 0x97 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000418890 : add al, ch ; sub ch, byte ptr [rsi - 0x76b70002] ; ret
0x0000000000412290 : add al, ch ; sub dl, byte ptr [rdi + rdi*8] ; dec dword ptr [rax - 0x77] ; ret
0x000000000041208d : add al, ch ; sub eax, 0x48ffff16 ; mov ebx, eax ; pxor xmm2, xmm2 ; movss xmm1, dword ptr [rip + 0x285e6] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e370
0x0000000000430d74 : add al, ch ; sub ebp, r15d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417f8f : add al, ch ; sub esi, dword ptr [rdi - 0x76b70002] ; ret
0x0000000000418836 : add al, ch ; test byte ptr [rsi - 0x76b70002], ch ; ret
0x0000000000417f35 : add al, ch ; test dword ptr [rdi - 0x76b70002], esi ; ret
0x00000000004175c3 : add al, ch ; test eax, 0x8948fffe ; ret
0x000000000041eb91 : add al, ch ; test eax, 0x90fffe4c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000444d23 : add al, ch ; test edi, esi ; push rax ; lea eax, dword ptr [rax] ; add byte ptr [rax], ah ; xchg dh, bh ; call qword ptr [rax]
0x000000000041cb7d : add al, ch ; vpaddd ymm7, ymm14, ymm7 ; test rax, rax ; je 0x41cba9 ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000430c1f : add al, ch ; wait ; sub bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424534 : add al, ch ; xchg cl, dh ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422933 : add al, ch ; xchg dword ptr [rip - 0x76b70002], ecx ; ret
0x0000000000412625 : add al, ch ; xchg eax, ebp ; adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000412323 : add al, ch ; xchg eax, edi ; adc edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417723 : add al, ch ; xchg eax, edi ; mov edi, 0x8948fffe ; ret
0x0000000000421124 : add al, ch ; xchg eax, esi ; and eax, 0x8948fffe ; ret
0x0000000000415e24 : add al, ch ; xchg eax, esi ; fdivr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x000000000042a56c : add al, ch ; xchg rax, rbx ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004123e3 : add al, ch ; xlatb ; adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421988 : add al, ch ; xor bl, byte ptr [rip - 0x76b70002] ; ret
0x000000000042128a : add al, ch ; xor byte ptr [rsi + rdi*8], ah ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411a89 : add al, ch ; xor dword ptr [rdi + rdi*8], ebx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432089 : add al, ch ; xor dword ptr [rsi], edx ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431f87 : add al, ch ; xor edx, dword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421187 : add al, ch ; xor esp, dword ptr [rip - 0x76b70002] ; ret
0x000000000044573b : add al, cl ; adc edi, edi ; call qword ptr [rax]
0x000000000045011b : add al, cl ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044ef4f : add al, cl ; jge 0x44ef55 ; call qword ptr [rbx]
0x0000000000443813 : add al, dh ; cld ; call qword ptr [rax]
0x00000000004437a3 : add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000044d69f : add al, dh ; std ; std ; jmp qword ptr [rbx]
0x0000000000443beb : add al, dl ; xchg eax, ebp ; cld ; inc eax ; add byte ptr [rax], r8b ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000435b77 : add al, r13b ; ret 0xfcdd
0x000000000041085e : add ax, word ptr [rax] ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000042497a : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8343], al ; inc dword ptr [rbx] ; jg 0x424a09 ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249cc
0x0000000000424a2e : add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424abd ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a80
0x0000000000450115 : add bh, bh ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004138fc : add bh, bh ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000403c24 : add bh, bh ; loopne 0x403c9b ; nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000403c23 : add bh, bh ; loopne 0x403c9c ; nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000437d7a : add bh, byte ptr [rax - 0x366f0004] ; ret
0x0000000000400aa7 : add bh, ch ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004239ba : add bh, ch ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044f8ea : add bh, cl ; or edx, dword ptr [rsi - 0x4e] ; stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; mov ah, 0xc ; add eax, 0x1a0be ; ret
0x00000000004500e7 : add bh, dh ; add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000423410 : add bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000450121 : add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000443d4c : add bl, 0xfc ; lcall ptr [rax + 0x4b] ; add byte ptr [rax], al ; pushfq ; ret
0x00000000004500e1 : add bl, ah ; add dword ptr [rip - 0x8ffee72], eax ; add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044c317 : add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x00000000004437ab : add bl, bh ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000444b2b : add bl, bh ; ja 0x444b39 ; inc eax ; test dword ptr [rax], eax ; add byte ptr [rdx], ah ; js 0x444b41 ; jmp rax
0x000000000044c037 : add bl, bl ; idiv ch ; jmp qword ptr [rsi]
0x00000000004444d4 : add bl, byte ptr [rbp + rdi*8 + 0x6ad0ff] ; add byte ptr [rsp + rbx*4 - 3], al ; push rax ; push 0 ; add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x00000000004500f5 : add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000040b620 : add bl, byte ptr [rcx + rax] ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x000000000040b5f0 : add bl, byte ptr [rcx + rax] ; add byte ptr [rcx], al ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000406df7 : add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000040977a : add bl, ch ; add eax, 0xb8 ; add byte ptr [rbp - 0x3d], bl ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000406ea9 : add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x00000000004052b1 : add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000429e0f : add bl, ch ; and cl, byte ptr [rax - 0x75] ; mov r8d, 0xe8c78948 ; in eax, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000044c1a7 : add bl, ch ; idiv ebp ; jmp qword ptr [rsi]
0x000000000044b897 : add bl, ch ; int1 ; std ; jmp qword ptr [rsi]
0x000000000041daf6 : add bl, ch ; pop rcx ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax] ; xor eax, 1 ; test al, al ; je 0x41dbb0 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000405a07 : add bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000420043 : add bl, ch ; sub ecx, dword ptr [rax - 0x77] ; ret
0x0000000000431845 : add bl, ch ; xor ecx, dword ptr [rax - 0x77] ; ret
0x000000000044bec7 : add bl, cl ; cmc ; std ; jmp qword ptr [rsi]
0x000000000040e087 : add bl, dh ; addps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e053 : add bl, dh ; addps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e05f : add bl, dh ; divps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e093 : add bl, dh ; divps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000043163b : add bl, dh ; divps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004112d3 : add bl, dh ; divps xmm0, xmm1 ; pop rbp ; ret
0x00000000004374b0 : add bl, dh ; divps xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40379e
0x0000000000437000 : add bl, dh ; divps xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a6
0x000000000043166b : add bl, dh ; movups xmm0, xmmword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043161d : add bl, dh ; movups xmm0, xmmword ptr [rip + 0x100ca] ; xorps xmm0, xmm1 ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004120a1 : add bl, dh ; movups xmm0, xmmword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e35c
0x000000000040c97e : add bl, dh ; movups xmm0, xmmword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403968
0x000000000040c964 : add bl, dh ; movups xmm0, xmmword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403982
0x000000000040c94a : add bl, dh ; movups xmm0, xmmword ptr [rip + 0x2d01d] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40399c
0x000000000040e8ec : add bl, dh ; movups xmm1, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e91c : add bl, dh ; movups xmm2, xmmword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000430897 : add bl, dh ; movups xmmword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x0000000000430886 : add bl, dh ; movups xmmword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000041dc50 : add bl, dh ; movups xmmword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000041d390 : add bl, dh ; movups xmmword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d3a1 : add bl, dh ; movups xmmword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040b5b3 : add bl, dh ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5e0 : add bl, dh ; movups xmmword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000431647 : add bl, dh ; mulps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431673 : add bl, dh ; mulps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e92c : add bl, dh ; mulps xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000437e0f : add bl, dh ; ret
0x0000000000411281 : add bl, dh ; subps xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112b1 : add bl, dh ; subps xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000044b837 : add bl, dl ; int1 ; std ; jmp qword ptr [rsi]
0x000000000044a069 : add bl, dl ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x000000000044450b : add bl, dl ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x000000000043163a : add bl, r14b ; divps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043166a : add bl, r14b ; movups xmm0, xmmword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043161c : add bl, r14b ; movups xmm0, xmmword ptr [rip + 0x100ca] ; xorps xmm0, xmm1 ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000044c035 : add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x0000000000435f88 : add byte ptr [r8 - 0x75], cl ; clc ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x000000000040e39d : add byte ptr [r8 - 0x75], cl ; clc ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041e517 : add byte ptr [r8 - 0x75], cl ; cwde ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e805 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041d4aa : add byte ptr [r8 - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5da : add byte ptr [r8 - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d548 : add byte ptr [r8 - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d58a : add byte ptr [r8 - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d66c : add byte ptr [r8 - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d465 : add byte ptr [r8 - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000443d49 : add byte ptr [r8], al ; add bl, 0xfc ; lcall ptr [rax + 0x4b] ; add byte ptr [rax], al ; pushfq ; ret
0x000000000044a21d : add byte ptr [r8], al ; cmp byte ptr [rdx - 3], al ; jmp qword ptr [rsi]
0x0000000000449c5d : add byte ptr [r8], al ; cmp dword ptr [rcx], esi ; std ; jmp qword ptr [rsi]
0x000000000044a455 : add byte ptr [r8], al ; in al, 0x51 ; std ; call qword ptr [rdx]
0x0000000000443cf9 : add byte ptr [r8], al ; movabs al, byte ptr [0xc000004a18fffcc1] ; sar esp, -1 ; cmp byte ptr [rdx], cl ; add dl, dl ; sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d90 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000449b95 : add byte ptr [r8], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x0000000000443d51 : add byte ptr [r8], al ; pushfq ; ret
0x0000000000443b59 : add byte ptr [r8], al ; sbb byte ptr [rax + 0x4420fffc], al ; add byte ptr [rax], al ; jle 0x443b2c ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x000000000044a23d : add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044a25d : add byte ptr [r8], al ; std ; jmp qword ptr [rsi]
0x000000000044a545 : add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000443e69 : add byte ptr [r8], r8b ; add ecx, edi ; cld ; push rax ; add byte ptr [r8], r8b ; xor bh, cl ; cld ; call qword ptr [rax]
0x0000000000443db9 : add byte ptr [r8], r8b ; fadd st(5), st(0) ; cld ; jmp qword ptr [rax]
0x000000000044a7b5 : add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a7d5 : add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a7f5 : add byte ptr [r8], r8b ; jb 0x44a7d0 ; std ; jmp qword ptr [rax]
0x000000000044a815 : add byte ptr [r8], r8b ; jb 0x44a7f0 ; std ; jmp qword ptr [rsi]
0x0000000000443e61 : add byte ptr [r8], r8b ; jbe 0x443e3a ; cld ; call rax
0x000000000044a875 : add byte ptr [r8], r8b ; jle 0x44a850 ; std ; jmp qword ptr [rax]
0x000000000044a835 : add byte ptr [r8], r8b ; js 0x44a810 ; std ; jmp qword ptr [rax]
0x000000000044a855 : add byte ptr [r8], r8b ; js 0x44a830 ; std ; jmp qword ptr [rsi]
0x0000000000443b99 : add byte ptr [r8], r8b ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443c59 : add byte ptr [r8], r8b ; pop rsp ; mov cl, 0xfc ; inc eax ; add byte ptr [r8], r8b ; sub al, 0xb2 ; cld ; jmp rax
0x0000000000443c01 : add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x000000000044a795 : add byte ptr [r8], r8b ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000443c61 : add byte ptr [r8], r8b ; sub al, 0xb2 ; cld ; jmp rax
0x000000000044a075 : add byte ptr [r8], r8b ; xor al, 0xfd ; jmp rdx
0x0000000000443e71 : add byte ptr [r8], r8b ; xor bh, cl ; cld ; call qword ptr [rax]
0x0000000000449e05 : add byte ptr [r8], r8b ; xor ebp, r15d ; jmp qword ptr [rbx]
0x0000000000450104 : add byte ptr [rax + 0x11bf0503], dl ; add dl, dl ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000446c97 : add byte ptr [rax + 0x12], bl ; cld ; jmp qword ptr [rdx]
0x0000000000446ed7 : add byte ptr [rax + 0x12], cl ; cld ; jmp qword ptr [rbx]
0x000000000044343b : add byte ptr [rax + 0x17], bh ; cld ; call rax
0x00000000004315a7 : add byte ptr [rax + 0x18c48348], dl ; pop rbx ; pop rbp ; ret
0x000000000044761f : add byte ptr [rax + 0x19], dl ; cld ; call qword ptr [rcx]
0x0000000000430b3e : add byte ptr [rax + 0x20c48348], dl ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004109e9 : add byte ptr [rax + 0x28c48348], dl ; pop rbx ; pop rbp ; ret
0x0000000000406e5c : add byte ptr [rax + 0x29], cl ; ret
0x0000000000405045 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000449b97 : add byte ptr [rax + 0x30], bl ; std ; call qword ptr [rcx]
0x000000000044a157 : add byte ptr [rax + 0x37], cl ; std ; call qword ptr [rip + 1]
0x0000000000404661 : add byte ptr [rax + 0x386e9], dl ; add byte ptr [rax - 0x75], cl ; add eax, 0x24d169 ; mov rdi, rax ; call 0x426f91
0x0000000000405814 : add byte ptr [rax + 0x39], cl ; ret
0x00000000004079ff : add byte ptr [rax + 0x39], cl ; ret 0x673
0x000000000040f601 : add byte ptr [rax + 0x39], cl ; ret 0x940f
0x000000000040f4b1 : add byte ptr [rax + 0x39], cl ; ret 0x950f
0x000000000044377b : add byte ptr [rax + 0x44], dh ; cld ; ljmp ptr [rax - 0x73ffffcd] ; cld ; dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000042743b : add byte ptr [rax + 0x48000001], 0x29 ; ret 0x8948
0x00000000004078b1 : add byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000040b6a0 : add byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b73e ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b73e ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x00000000004100c4 : add byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x000000000041e3fb : add byte ptr [rax + 0x48c48348], dl ; pop rbx ; pop rbp ; ret
0x000000000044419b : add byte ptr [rax + 0x50fffd1c], al ; pop rbp ; add byte ptr [rax], al ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x44421f ; std ; call qword ptr [rax]
0x000000000040b469 : add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x0000000000410227 : add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041d723 : add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7d9 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000040b765 : add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000040b4ab : add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x0000000000406f07 : add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000410cd3 : add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410955 : add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004101e3 : add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000414bb9 : add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405c9f : add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410d11 : add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407877 : add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x0000000000443d4b : add byte ptr [rax + 0x58fffcc3], al ; add byte ptr [r8], al ; pushfq ; ret
0x0000000000403bff : add byte ptr [rax + 0x651567], bh ; push rbp ; sub rax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c56 ; mov eax, 0 ; test rax, rax ; je 0x403c56 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000447e6f : add byte ptr [rax + 0x77], bh ; cld ; jmp qword ptr [rdx]
0x0000000000447d4f : add byte ptr [rax + 0x77], cl ; cld ; jmp qword ptr [rdx]
0x00000000004009b7 : add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040b465 : add byte ptr [rax + rax + 0x5d900000], 0xc3 ; nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x0000000000445933 : add byte ptr [rax + rax - 0x16b40000], ah ; sti ; call rdi
0x0000000000444cb0 : add byte ptr [rax + rax - 0x17d0f00], cl ; jmp qword ptr [rax]
0x0000000000444ae0 : add byte ptr [rax + rax - 0x1896d00], 0xff ; movabs al, byte ptr [0xc0fffe76ba000084] ; test byte ptr [rax], al ; add dh, dl ; jbe 0x444b0c ; jmp rax
0x0000000000444ac0 : add byte ptr [rax + rax - 0x18a1a00], al ; jmp qword ptr [rax]
0x000000000044993b : add byte ptr [rax + rax*2 + 0x2cb60000], ch ; std ; jmp qword ptr [rsi]
0x00000000004498fb : add byte ptr [rax + rax*2], ch ; add byte ptr [rsp + rbp - 3], dl ; jmp qword ptr [rip]
0x000000000040b71e : add byte ptr [rax + rax*8 - 0x74b7bc8c], al ; clc ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7b0 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7b0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b6d0 : add byte ptr [rax + rax*8 - 0x74b7e68c], al ; clc ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b70e ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x00000000004493ff : add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x00000000004493d7 : add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x0000000000443b78 : add byte ptr [rax + rax], 0x48 ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x000000000044cd8f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdca ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000446487 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004493cf : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044e777 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; in al, dx ; mov es, word ptr [rax] ; add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x000000000044d3cf : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; jnp 0x44d40b ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d433 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044592f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x00000000004458a7 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; loopne 0x4458be ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44590a ; jmp rcx
0x00000000004468b7 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000448df7 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x00000000004481f7 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x44820b ; call rdx
0x0000000000446a1f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf1f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf5b ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004458d3 : add byte ptr [rax + rax], al ; add dh, ch ; jrcxz 0x4458de ; jmp rcx
0x000000000044a527 : add byte ptr [rax + rax], al ; clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x00000000004448d8 : add byte ptr [rax + rax], bh ; add dl, byte ptr [rdx - 2] ; jmp qword ptr [rax]
0x0000000000444150 : add byte ptr [rax + rax], bl ; adc al, 0x18 ; std ; jmp qword ptr [rax]
0x000000000044839f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483b3 ; call qword ptr [rdx]
0x0000000000446c8f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b8f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x000000000044a78f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a88f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a876 ; std ; jmp qword ptr [rsi]
0x000000000044a7cf : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004458cf : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458e2 ; jmp rcx
0x000000000044a7ef : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; jb 0x44a7d6 ; std ; jmp qword ptr [rax]
0x00000000004493af : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044a7af : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a8af : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0x50 ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x000000000044b9af : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0x61 ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x000000000044c8af : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x00000000004464af : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004461af : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x0000000000446387 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x0000000000447ec7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cmp al, 0x26 ; add byte ptr [rax], al ; mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x00000000004492ef : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x0000000000445a67 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fadd qword ptr [rcx] ; add byte ptr [rax], al ; loop 0x445a73 ; sti ; jmp qword ptr [rax]
0x000000000044a367 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x0000000000446667 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x0000000000447e67 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fsub qword ptr [rip + 0x77780000] ; cld ; jmp qword ptr [rdx]
0x000000000044bf67 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c47f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x000000000044ce7f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; jne 0x44ce93 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x000000000044827f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000446d6f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000044a06f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x000000000044a16f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x000000000044a86f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x4f ; add byte ptr [rax], al ; jle 0x44a856 ; std ; jmp qword ptr [rax]
0x000000000044ba6f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x61 ; add byte ptr [rax], al ; movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x000000000044bd6f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x64 ; add byte ptr [rax], al ; ret 0xfdf4
0x000000000044a277 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044c677 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044d477 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4ab ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x00000000004498f7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x00000000004493f7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3f7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d40b ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004475f7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb eax, 0x19540000 ; cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004485f7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5cf : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x0000000000449dff : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; je 0x449e57 ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x000000000044aaff : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; je 0x44ab84 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044aaff : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; je 0x44aba4 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044a237 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x0000000000449937 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; mov dh, 0x2c ; std ; jmp qword ptr [rsi]
0x00000000004458ab : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458ba ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445906 ; jmp rcx
0x000000000044ab3f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov ah, 0x52 ; add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044c73f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x000000000044c247 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x0000000000446a47 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf47 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044a347 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x3a00004a ; std ; call qword ptr [rdx]
0x0000000000447d47 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d5b ; jmp qword ptr [rdx]
0x0000000000447e47 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e7b ; jmp qword ptr [rip]
0x000000000044ef47 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef5d ; call qword ptr [rbx]
0x0000000000445a47 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a217 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x0000000000447617 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000446d2f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x000000000044c02f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044a82f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; js 0x44a816 ; std ; jmp qword ptr [rax]
0x000000000044a12f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x000000000044622f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x000000000044b82f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x0000000000448d2f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x0000000000449497 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x44946e ; cld ; jmp qword ptr [rbx]
0x000000000044d497 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044b7ef : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; ret 0xfdf1
0x0000000000445ae7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x000000000044c0d7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044587b : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rax ; jrcxz 0x4458de ; ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x44590f ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458ea ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445936 ; jmp rcx
0x00000000004468df : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044aadf : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; push rdx ; add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x0000000000447e27 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044ef27 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef3d ; call qword ptr [rdx]
0x0000000000447fa7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb al, 0x27 ; add byte ptr [rax], al ; pop rsi ; js 0x447fbb ; call qword ptr [rdx]
0x0000000000445aa7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb al, 2 ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x00000000004470d7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x00000000004475d7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x00000000004475b7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x000000000044c3b7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x000000000044cdb7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d4b7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044eeb7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x96 ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x00000000004462b7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044ba0f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rcx], ah ; add byte ptr [rbx - 0xe], cl ; std ; jmp qword ptr [rsi]
0x000000000044a80f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044d00f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x0000000000447b0f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x000000000044c30f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044e70f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rsi - 0x72740000], cl ; std ; call qword ptr [rip]
0x000000000044c41f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000044ab1f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000044bebf : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000044a53f : add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x000000000044588f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x4458fb ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458d6 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445922 ; jmp rcx
0x00000000004481fb : add byte ptr [rax + rbp + 0x7a940000], al ; cld ; call rdx
0x000000000044c0db : add byte ptr [rax + rbp*2], cl ; add byte ptr [rdx], cl ; idiv ebp ; call qword ptr [rcx]
0x00000000004470db : add byte ptr [rax + rbx], cl ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x0000000000444153 : add byte ptr [rax + rbx], dl ; std ; jmp qword ptr [rax]
0x000000000044a133 : add byte ptr [rax + rcx*2 + 0x36d80000], ah ; std ; call qword ptr [rax]
0x000000000044a8b3 : add byte ptr [rax + rdx*2], ah ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x000000000044a893 : add byte ptr [rax + rdx*2], al ; add byte ptr [rax], al ; jle 0x44a872 ; std ; jmp qword ptr [rsi]
0x000000000044a7b7 : add byte ptr [rax + rdx*8 - 3], ch ; jmp qword ptr [rax]
0x000000000044a7d7 : add byte ptr [rax + rdx*8 - 3], ch ; jmp qword ptr [rsi]
0x00000000004468bb : add byte ptr [rax + rdx], ch ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x00000000004468e3 : add byte ptr [rax + rdx], dl ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044c8b3 : add byte ptr [rax + rsi*2], ah ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x000000000044500b : add byte ptr [rax - 0x1700016a], bl ; cdq ; add byte ptr [rax], al ; ret 0xfe96
0x000000000044587f : add byte ptr [rax - 0x1d], dl ; sti ; ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x44590b ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458e6 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445932 ; jmp rcx
0x0000000000443dab : add byte ptr [rax - 0x1f00033b], ah ; add byte ptr [rax], r8b ; mov esi, 0xfffcc5 ; add byte ptr [r8], r8b ; fadd st(5), st(0) ; cld ; jmp qword ptr [rax]
0x0000000000444063 : add byte ptr [rax - 0x24], cl ; cld ; inc dword ptr [rax] ; pop rax ; add byte ptr [rax], al ; pop rsp ; fdiv st(4), st(0) ; jmp qword ptr [rax]
0x000000000044ab27 : add byte ptr [rax - 0x2f], bl ; std ; jmp qword ptr [rsi]
0x000000000044a837 : add byte ptr [rax - 0x30], bh ; std ; jmp qword ptr [rax]
0x000000000044a857 : add byte ptr [rax - 0x30], bh ; std ; jmp qword ptr [rsi]
0x0000000000403c4c : add byte ptr [rax - 0x3f], cl ; inc byte ptr [rbx] ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c9f ; mov eax, 0 ; test rax, rax ; je 0x403c9f ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x00000000004437fb : add byte ptr [rax - 0x4f0003ba], ch ; xor eax, 0x46b30000 ; cld ; call rax
0x000000000044fb3b : add byte ptr [rax - 0x5575f0ab], ch ; add dword ptr [rax], eax ; ret 0x555
0x000000000044462b : add byte ptr [rax - 0x5f00023e], cl ; jo 0x44463d ; add dh, al ; ret 0xfffd
0x0000000000444533 : add byte ptr [rax - 0x5f00025f], bh ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; movabs byte ptr [0xa2dc00006cc0fffd], al ; std ; jmp rax
0x0000000000443613 : add byte ptr [rax - 0x5f0003c9], dl ; sub eax, 0x37c50000 ; cld ; inc eax ; sub eax, 0x37ec0000 ; cld ; jmp rax
0x000000000041ffcd : add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41ffed ; jmp rsp
0x0000000000409b0f : add byte ptr [rax - 0x68], cl ; mov rdx, qword ptr [rbp - 0x38] ; add rdx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d6d
0x0000000000444393 : add byte ptr [rax - 0x6e], ch ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000040f59e : add byte ptr [rax - 0x73], cl ; push rax ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041de60 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x75] ; push rbp ; mov eax, 0x42100ff3 ; xor bl, dh ; cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000437af8 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 8], 0x48 ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000040e133 : add byte ptr [rax - 0x75], cl ; adc r11b, r14b ; movups xmmword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040f57e : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041de5d : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x75] ; push rbp ; mov eax, 0x42100ff3 ; xor bl, dh ; cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x00000000004089c4 : add byte ptr [rax - 0x75], cl ; add cl, cl ; ret
0x0000000000404667 : add byte ptr [rax - 0x75], cl ; add eax, 0x24d169 ; mov rdi, rax ; call 0x426f8b
0x0000000000427701 : add byte ptr [rax - 0x75], cl ; call 0xffffffffe90a0063
0x0000000000427701 : add byte ptr [rax - 0x75], cl ; call 0xffffffffe90a0078
0x0000000000427701 : add byte ptr [rax - 0x75], cl ; call 0xffffffffe90a0081
0x0000000000427701 : add byte ptr [rax - 0x75], cl ; call 0xffffffffe90a009e
0x00000000004101fb : add byte ptr [rax - 0x75], cl ; clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410978 : add byte ptr [rax - 0x75], cl ; clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004067d4 : add byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x0000000000435e3f : add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435f81 : add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000435f89 : add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x000000000040b75a : add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041d3b8 : add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040b74c : add byte ptr [rax - 0x75], cl ; clc ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041d3ad : add byte ptr [rax - 0x75], cl ; clc ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041096c : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004358ff : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b54 : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000041d3d5 : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000043590b : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000435917 : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000435923 : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000043592f : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000043593b : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x00000000004358f3 : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b48 : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x00000000004358e8 : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b3d : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000040e39e : add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000431499 : add byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314ae : add byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041450e : add byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431485 : add byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414537 : add byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041454c : add byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414523 : add byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431470 : add byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b41b : add byte ptr [rax - 0x75], cl ; clc ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b430 : add byte ptr [rax - 0x75], cl ; clc ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b445 : add byte ptr [rax - 0x75], cl ; clc ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b45d : add byte ptr [rax - 0x75], cl ; clc ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0eb : add byte ptr [rax - 0x75], cl ; clc ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0ff : add byte ptr [rax - 0x75], cl ; clc ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e113 : add byte ptr [rax - 0x75], cl ; clc ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e127 : add byte ptr [rax - 0x75], cl ; clc ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e371 : add byte ptr [rax - 0x75], cl ; clc ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b6c5 : add byte ptr [rax - 0x75], cl ; clc ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b719 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b719 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b713 : add byte ptr [rax - 0x75], cl ; clc ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7bb ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7bb ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7bb ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b48f : add byte ptr [rax - 0x75], cl ; clc ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b49d : add byte ptr [rax - 0x75], cl ; clc ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000041d3c0 : add byte ptr [rax - 0x75], cl ; clc ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041e518 : add byte ptr [rax - 0x75], cl ; cwde ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e804 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000040e047 : add byte ptr [rax - 0x75], cl ; cwde ; movss xmm0, dword ptr [rax + 0x3e8] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e07b : add byte ptr [rax - 0x75], cl ; cwde ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e06f : add byte ptr [rax - 0x75], cl ; cwde ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040764e : add byte ptr [rax - 0x75], cl ; enter -0x74b8, 8 ; mov rdx, qword ptr [rbp - 0x28] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000431491 : add byte ptr [rax - 0x75], cl ; fdiv st(3) ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041452f : add byte ptr [rax - 0x75], cl ; fdiv st(3) ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e10b : add byte ptr [rax - 0x75], cl ; fdiv st(3) ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000415817 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 + 1] ; ror cl, 1 ; ret
0x000000000040e8fc : add byte ptr [rax - 0x75], cl ; jne 0x40e938 ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0f7 : add byte ptr [rax - 0x75], cl ; loopne 0x40e137 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000429cd0 : add byte ptr [rax - 0x75], cl ; mov r8d, 0xe8c78948 ; outsd dx, dword ptr [rsi] ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000040b5b7 : add byte ptr [rax - 0x75], cl ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5e4 : add byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000041d4ab : add byte ptr [rax - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5db : add byte ptr [rax - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d549 : add byte ptr [rax - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d58b : add byte ptr [rax - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d66d : add byte ptr [rax - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d466 : add byte ptr [rax - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000428bb8 : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 + 1], 1 ; ret 0x8b48
0x000000000040fbda : add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x75], 1 ; push rbp ; fmul st(1) ; ret
0x000000000040e11f : add byte ptr [rax - 0x75], cl ; sal r11b, 1 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040ff17 : add byte ptr [rax - 0x77], cl ; call 0x78c68a7e
0x000000000040ff17 : add byte ptr [rax - 0x77], cl ; call 0x78c68aac
0x000000000040ff17 : add byte ptr [rax - 0x77], cl ; call 0x78c68ab9
0x000000000040ff17 : add byte ptr [rax - 0x77], cl ; call 0x78c68ac3
0x00000000004120a9 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; pushfq ; ret 0xffff
0x00000000004324aa : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; wait ; mov esi, 0x8948fffd ; pop rbp ; mov eax, 0x38bf ; add al, ch ; call qword ptr [rcx]
0x0000000000406a54 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000424f6c : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000425b08 : add byte ptr [rax - 0x77], cl ; ret 0x3be
0x00000000004041ec : add byte ptr [rax - 0x77], cl ; ret 0x458b
0x00000000004059de : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000406896 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000406d0d : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000403cb4 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x0000000000437ae8 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rbx + 0x48], 0x8b ; clc ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b2e ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000443b83 : add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000445aef : add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x000000000044c7ef : add byte ptr [rax - 4], ch ; std ; call qword ptr [rcx]
0x000000000044c67f : add byte ptr [rax - 5], bl ; std ; call qword ptr [rcx]
0x00000000004449f9 : add byte ptr [rax], 0 ; or byte ptr [rcx - 2], ah ; call rax
0x00000000004458c3 : add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458ee ; jmp rcx
0x000000000044b8f3 : add byte ptr [rax], ah ; add byte ptr [rbx], al ; std ; jmp qword ptr [rsi]
0x0000000000444ddb : add byte ptr [rax], ah ; mov edi, esi ; push rax ; nop ; add byte ptr [rax], al ; mov edi, esi ; call qword ptr [rax]
0x0000000000444d2b : add byte ptr [rax], ah ; xchg dh, bh ; call qword ptr [rax]
0x000000000044588e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x4458fc ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458d7 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445923 ; jmp rcx
0x0000000000444152 : add byte ptr [rax], al ; adc al, 0x18 ; std ; jmp qword ptr [rax]
0x00000000004483a2 : add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483b0 ; call qword ptr [rdx]
0x0000000000400aee : add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ada : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400972 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009ba : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400af2 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000044448a : add byte ptr [rax], al ; adc byte ptr [rbx + 0x69b0fffd], bl ; add byte ptr [rax], al ; wait ; std ; call rax
0x0000000000446ed6 : add byte ptr [rax], al ; adc dil, spl ; jmp qword ptr [rbx]
0x0000000000446d71 : add byte ptr [rax], al ; add ah, ah ; adc al, 0 ; add byte ptr [rdx + 0x12], dl ; cld ; jmp qword ptr [rbx]
0x000000000044a871 : add byte ptr [rax], al ; add ah, ah ; add byte ptr [r8], r8b ; jle 0x44a854 ; std ; jmp qword ptr [rax]
0x000000000044a071 : add byte ptr [rax], al ; add ah, ah ; add byte ptr [r8], r8b ; xor al, 0xfd ; jmp rdx
0x000000000044a171 : add byte ptr [rax], al ; add ah, ah ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x000000000044bd71 : add byte ptr [rax], al ; add ah, ah ; add byte ptr fs:[rax], al ; ret 0xfdf4
0x000000000044a451 : add byte ptr [rax], al ; add ah, al ; add byte ptr [r8], al ; in al, 0x51 ; std ; call qword ptr [rdx]
0x000000000044a851 : add byte ptr [rax], al ; add ah, al ; add byte ptr [r8], r8b ; js 0x44a834 ; std ; jmp qword ptr [rsi]
0x0000000000448551 : add byte ptr [rax], al ; add ah, al ; sub al, 0 ; add byte ptr [rdx + rax*4], bh ; cld ; call qword ptr [rcx]
0x0000000000446389 : add byte ptr [rax], al ; add ah, bh ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x0000000000446489 : add byte ptr [rax], al ; add ah, bh ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x000000000044bf69 : add byte ptr [rax], al ; add ah, bl ; add byte ptr [rax], al ; cli ; cmc ; std ; call qword ptr [rcx]
0x000000000044a369 : add byte ptr [rax], al ; add ah, bl ; add byte ptr [rax], al ; sub al, 0x49 ; std ; call qword ptr [rbx]
0x0000000000445a69 : add byte ptr [rax], al ; add ah, bl ; add dword ptr [rax], eax ; add dl, ah ; cmc ; sti ; jmp qword ptr [rax]
0x0000000000447e69 : add byte ptr [rax], al ; add ah, bl ; and eax, 0x77780000 ; cld ; jmp qword ptr [rdx]
0x0000000000446669 : add byte ptr [rax], al ; add ah, bl ; or eax, 0xd8c0000 ; cld ; call qword ptr [rcx]
0x000000000044a279 : add byte ptr [rax], al ; add ah, ch ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044c679 : add byte ptr [rax], al ; add ah, ch ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044d479 : add byte ptr [rax], al ; add ah, ch ; jnp 0x44d4a9 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044e779 : add byte ptr [rax], al ; add ah, ch ; mov es, word ptr [rax] ; add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x0000000000449c59 : add byte ptr [rax], al ; add ah, cl ; add byte ptr [r8], al ; cmp dword ptr [rcx], esi ; std ; jmp qword ptr [rsi]
0x000000000044a259 : add byte ptr [rax], al ; add ah, cl ; add byte ptr [r8], al ; std ; jmp qword ptr [rsi]
0x000000000044a541 : add byte ptr [rax], al ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000449741 : add byte ptr [rax], al ; add ah, cl ; cmp eax, 0xc2d20000 ; cld ; call rax
0x000000000044d459 : add byte ptr [rax], al ; add ah, cl ; jnp 0x44d4a9 ; add byte ptr [rsi + rdi*8 + 0xffffd], dl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4c9 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000449769 : add byte ptr [rax], al ; add ah, dh ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000044c481 : add byte ptr [rax], al ; add ah, dh ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x000000000044ce81 : add byte ptr [rax], al ; add ah, dh ; jne 0x44ce91 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x0000000000448281 : add byte ptr [rax], al ; add ah, dh ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000445d61 : add byte ptr [rax], al ; add ah, dl ; add al, 0 ; add byte ptr [rdx - 1], ah ; sti ; jmp qword ptr [rax]
0x0000000000449d61 : add byte ptr [rax], al ; add ah, dl ; add byte ptr [rax], r8b ; xor rbp, r15 ; jmp qword ptr [rdx]
0x000000000044b661 : add byte ptr [rax], al ; add ah, dl ; pop rbp ; add byte ptr [rax], al ; mov ah, 0xeb ; std ; call qword ptr [rcx]
0x0000000000448261 : add byte ptr [rax], al ; add ah, dl ; sub dword ptr [rax], eax ; add byte ptr [rbx + 0x7e], ch ; cld ; call qword ptr [rdx]
0x000000000044a526 : add byte ptr [rax], al ; add al, 0 ; clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000446c92 : add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x000000000044a776 : add byte ptr [rax], al ; add al, 0x39 ; std ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000449b92 : add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x000000000044974e : add byte ptr [rax], al ; add al, 0x47 ; hlt ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000044a792 : add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a892 : add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a873 ; std ; jmp qword ptr [rsi]
0x0000000000448e06 : add byte ptr [rax], al ; add al, 0x63 ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x000000000044cd92 : add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdc7 ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000443b72 : add byte ptr [rax], al ; add al, 0x81 ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x00000000004443aa : add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444512 : add byte ptr [rax], al ; add al, 0x9e ; std ; jmp rax
0x00000000004458ad : add byte ptr [rax], al ; add al, ah ; fdivr st(3) ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445904 ; jmp rcx
0x0000000000432277 : add byte ptr [rax], al ; add al, ch ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000004321a8 : add byte ptr [rax], al ; add al, ch ; adc byte ptr [rip - 0x76b70003], dl ; ret
0x00000000004239b6 : add byte ptr [rax], al ; add al, ch ; add bh, ch ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004188b7 : add byte ptr [rax], al ; add al, ch ; add dword ptr [rsi - 0x76b70002], ebp ; ret
0x0000000000421451 : add byte ptr [rax], al ; add al, ch ; and bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417c98 : add byte ptr [rax], al ; add al, ch ; and byte ptr [rdx - 0x76b70002], bh ; ret
0x0000000000411576 : add byte ptr [rax], al ; add al, ch ; and edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421554 : add byte ptr [rax], al ; add al, ch ; and esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431571 : add byte ptr [rax], al ; add al, ch ; and r13d, r15d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411471 : add byte ptr [rax], al ; add al, ch ; and r15b, r15b ; dec dword ptr [rax - 0x77] ; ret
0x00000000004324b9 : add byte ptr [rax], al ; add al, ch ; call qword ptr [rcx]
0x000000000042261f : add byte ptr [rax], al ; add al, ch ; cdq ; adc dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000415dbc : add byte ptr [rax], al ; add al, ch ; cld ; fdivr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437c7e : add byte ptr [rax], al ; add al, ch ; cmp bh, byte ptr [rdx - 0x76b70004] ; ret
0x000000000041847d : add byte ptr [rax], al ; add al, ch ; cmp esi, dword ptr [rdx - 0x76b70002] ; ret
0x0000000000412512 : add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; adc edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000412912 : add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, 0x8948ffff ; ret
0x000000000040729a : add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431e12 : add byte ptr [rax], al ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421d20 : add byte ptr [rax], al ; add al, ch ; cwde ; sbb esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417ed9 : add byte ptr [rax], al ; add al, ch ; fbstp dword ptr [rdi - 0x76b70002] ; ret
0x00000000004187da : add byte ptr [rax], al ; add al, ch ; fisubr word ptr [rsi - 0x76b70002] ; ret
0x0000000000415d6c : add byte ptr [rax], al ; add al, ch ; fsin ; dec dword ptr [rax - 0x77] ; ret
0x00000000004180c4 : add byte ptr [rax], al ; add al, ch ; hlt ; mov ch, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421b4f : add byte ptr [rax], al ; add al, ch ; imul ebx, dword ptr [rbx], 0x8948fffe ; ret
0x0000000000411b4f : add byte ptr [rax], al ; add al, ch ; imul ebx, dword ptr [rbx], 0x8948ffff ; ret
0x0000000000416e4f : add byte ptr [rax], al ; add al, ch ; imul ecx, eax, 0x8948fffe ; ret
0x000000000043264f : add byte ptr [rax], al ; add al, ch ; imul edx, dword ptr [rax], 0x8948fffd ; ret
0x00000000004184cc : add byte ptr [rax], al ; add al, ch ; in al, dx ; mov cl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421bcc : add byte ptr [rax], al ; add al, ch ; in al, dx ; sbb bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004375fc : add byte ptr [rax], al ; add al, ch ; insb byte ptr [rdi], dx ; mov esp, 0x17e8fffc ; ret 0xfffc
0x00000000004212eb : add byte ptr [rax], al ; add al, ch ; int 0x23
0x00000000004166eb : add byte ptr [rax], al ; add al, ch ; int 0xcf
0x00000000004162eb : add byte ptr [rax], al ; add al, ch ; int 0xd3
0x0000000000404ebb : add byte ptr [rax], al ; add al, ch ; int 0xe6
0x00000000004228c7 : add byte ptr [rax], al ; add al, ch ; int1 ; or eax, 0x8948fffe ; ret
0x00000000004244c5 : add byte ptr [rax], al ; add al, ch ; int1 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423c46 : add byte ptr [rax], al ; add al, ch ; jb 0x423c50 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042afca : add byte ptr [rax], al ; add al, ch ; jbe 0x42af83 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000435b62 : add byte ptr [rax], al ; add al, ch ; jbe 0x435b57 ; cld ; inc dword ptr [rbx - 0x6bf00008] ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x0000000000435b62 : add byte ptr [rax], al ; add al, ch ; jbe 0x435b5d ; cld ; inc dword ptr [rbx - 0x6bf00008] ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x0000000000423939 : add byte ptr [rax], al ; add al, ch ; jg 0x423946 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423a39 : add byte ptr [rax], al ; add al, ch ; jg 0x423a45 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000416ccd : add byte ptr [rax], al ; add al, ch ; jmp 0x416ca6
0x0000000000416ccd : add byte ptr [rax], al ; add al, ch ; jmp 0x416cf6
0x0000000000420eb9 : add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rdi]
0x0000000000432343 : add byte ptr [rax], al ; add al, ch ; jne 0x432366 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424f29 : add byte ptr [rax], al ; add al, ch ; lahf ; out 0xfd, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000041782b : add byte ptr [rax], al ; add al, ch ; lea edi, dword ptr [rsi - 0x76b70002] ; ret
0x000000000041790c : add byte ptr [rax], al ; add al, ch ; lodsb al, byte ptr [rsi] ; mov ebp, 0x8948fffe ; ret
0x000000000042340b : add byte ptr [rax], al ; add al, ch ; lodsd eax, dword ptr [rsi] ; add bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000042350b : add byte ptr [rax], al ; add al, ch ; lodsd eax, dword ptr [rsi] ; add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000042e45f : add byte ptr [rax], al ; add al, ch ; loope 0x42e4e3 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417b2e : add byte ptr [rax], al ; add al, ch ; mov bh, byte ptr [rbx - 0x76b70002] ; ret
0x0000000000418178 : add byte ptr [rax], al ; add al, ch ; mov bpl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424f03 : add byte ptr [rax], al ; add al, ch ; mov ch, 0xe7 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432506 : add byte ptr [rax], al ; add al, ch ; mov dl, 0x11 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432106 : add byte ptr [rax], al ; add al, ch ; mov dl, 0x15 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432006 : add byte ptr [rax], al ; add al, ch ; mov dl, 0x16 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000418454 : add byte ptr [rax], al ; add al, ch ; mov dl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000043242d : add byte ptr [rax], al ; add al, ch ; mov edx, dword ptr [rdx] ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000418671 : add byte ptr [rax], al ; add al, ch ; mov r8b, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000041806e : add byte ptr [rax], al ; add al, ch ; mov sil, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000416314 : add byte ptr [rax], al ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; sar esi, cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431914 : add byte ptr [rax], al ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, 0x8948fffd ; ret
0x000000000041c313 : add byte ptr [rax], al ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; jae 0x41c322 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004322c2 : add byte ptr [rax], al ; add al, ch ; not byte ptr [rbx] ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422a69 : add byte ptr [rax], al ; add al, ch ; or al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004129c5 : add byte ptr [rax], al ; add al, ch ; or al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000004320b0 : add byte ptr [rax], al ; add al, ch ; or byte ptr [rsi], dl ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422d73 : add byte ptr [rax], al ; add al, ch ; or r14d, r15d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422c73 : add byte ptr [rax], al ; add al, ch ; or r15b, r14b ; dec dword ptr [rax - 0x77] ; ret
0x00000000004323c9 : add byte ptr [rax], al ; add al, ch ; out dx, eax ; adc bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x00000000004325c9 : add byte ptr [rax], al ; add al, ch ; out dx, eax ; adc ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423bc9 : add byte ptr [rax], al ; add al, ch ; out dx, eax ; cli ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423cc9 : add byte ptr [rax], al ; add al, ch ; out dx, eax ; stc ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043224a : add byte ptr [rax], al ; add al, ch ; outsb dx, byte ptr [rsi] ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000430d49 : add byte ptr [rax], al ; add al, ch ; outsd dx, dword ptr [rsi] ; sub ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411c5d : add byte ptr [rax], al ; add al, ch ; pop rbx ; sbb bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421e5f : add byte ptr [rax], al ; add al, ch ; pop rcx ; sbb dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000418259 : add byte ptr [rax], al ; add al, ch ; pop rdi ; mov ah, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437b5c : add byte ptr [rax], al ; add al, ch ; pop rsp ; mov ebx, 0x8948fffc ; ret
0x0000000000421368 : add byte ptr [rax], al ; add al, ch ; push rax ; and edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411d68 : add byte ptr [rax], al ; add al, ch ; push rax ; sbb edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000430c68 : add byte ptr [rax], al ; add al, ch ; push rax ; sub bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000415a63 : add byte ptr [rax], al ; add al, ch ; push rbp ; fdiv st(6), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000412165 : add byte ptr [rax], al ; add al, ch ; push rbx ; adc eax, 0x8948ffff ; ret
0x0000000000432565 : add byte ptr [rax], al ; add al, ch ; push rbx ; adc ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000420e65 : add byte ptr [rax], al ; add al, ch ; push rbx ; sub dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000420d65 : add byte ptr [rax], al ; add al, ch ; push rbx ; sub esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417966 : add byte ptr [rax], al ; add al, ch ; push rdx ; mov ebp, 0x8948fffe ; ret
0x0000000000421a66 : add byte ptr [rax], al ; add al, ch ; push rdx ; sbb al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000416364 : add byte ptr [rax], al ; add al, ch ; push rsp ; sar esi, cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000041741c : add byte ptr [rax], al ; add al, ch ; pushfq ; ret 0xfffe
0x0000000000411ff8 : add byte ptr [rax], al ; add al, ch ; rcl byte ptr [rsi], 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431de5 : add byte ptr [rax], al ; add al, ch ; rcr dword ptr [rax], cl ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004160f6 : add byte ptr [rax], al ; add al, ch ; ret 0xfed5
0x0000000000417482 : add byte ptr [rax], al ; add al, ch ; ret 0xfffe
0x000000000042742a : add byte ptr [rax], al ; add al, ch ; sahf ; sar ebp, -1 ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x180] ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x0000000000417fe7 : add byte ptr [rax], al ; add al, ch ; sal dword ptr [rsi - 0x76b70002], 1 ; ret
0x0000000000421de2 : add byte ptr [rax], al ; add al, ch ; salc ; sbb dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000420de2 : add byte ptr [rax], al ; add al, ch ; salc ; sub dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000416672 : add byte ptr [rax], al ; add al, ch ; sar sil, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004319c5 : add byte ptr [rax], al ; add al, ch ; sbb al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421c52 : add byte ptr [rax], al ; add al, ch ; sbb bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004183a0 : add byte ptr [rax], al ; add al, ch ; sbb byte ptr [rbx - 0x76b70002], dh ; ret
0x000000000042459f : add byte ptr [rax], al ; add al, ch ; sbb ecx, esi ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431d69 : add byte ptr [rax], al ; add al, ch ; sbb r13, r15 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431c6c : add byte ptr [rax], al ; add al, ch ; sbb r15b, bpl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437c0a : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; mov edx, 0x8948fffc ; ret
0x0000000000436f6f : add byte ptr [rax], al ; add al, ch ; stc ; ret 0xfffc
0x00000000004120bb : add byte ptr [rax], al ; add al, ch ; std ; adc eax, 0x8948ffff ; ret
0x00000000004185bd : add byte ptr [rax], al ; add al, ch ; sti ; mov al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000043248c : add byte ptr [rax], al ; add al, ch ; sub al, 0x12 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000041888e : add byte ptr [rax], al ; add al, ch ; sub ch, byte ptr [rsi - 0x76b70002] ; ret
0x000000000041228e : add byte ptr [rax], al ; add al, ch ; sub dl, byte ptr [rdi + rdi*8] ; dec dword ptr [rax - 0x77] ; ret
0x000000000041208b : add byte ptr [rax], al ; add al, ch ; sub eax, 0x48ffff16 ; mov ebx, eax ; pxor xmm2, xmm2 ; movss xmm1, dword ptr [rip + 0x285e6] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e372
0x0000000000430d72 : add byte ptr [rax], al ; add al, ch ; sub ebp, r15d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417f8d : add byte ptr [rax], al ; add al, ch ; sub esi, dword ptr [rdi - 0x76b70002] ; ret
0x0000000000418834 : add byte ptr [rax], al ; add al, ch ; test byte ptr [rsi - 0x76b70002], ch ; ret
0x0000000000417f33 : add byte ptr [rax], al ; add al, ch ; test dword ptr [rdi - 0x76b70002], esi ; ret
0x00000000004175c1 : add byte ptr [rax], al ; add al, ch ; test eax, 0x8948fffe ; ret
0x000000000041eb8f : add byte ptr [rax], al ; add al, ch ; test eax, 0x90fffe4c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041cb7b : add byte ptr [rax], al ; add al, ch ; vpaddd ymm7, ymm14, ymm7 ; test rax, rax ; je 0x41cbab ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000430c1d : add byte ptr [rax], al ; add al, ch ; wait ; sub bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424532 : add byte ptr [rax], al ; add al, ch ; xchg cl, dh ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422931 : add byte ptr [rax], al ; add al, ch ; xchg dword ptr [rip - 0x76b70002], ecx ; ret
0x0000000000412623 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebp ; adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000412321 : add byte ptr [rax], al ; add al, ch ; xchg eax, edi ; adc edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417721 : add byte ptr [rax], al ; add al, ch ; xchg eax, edi ; mov edi, 0x8948fffe ; ret
0x0000000000421122 : add byte ptr [rax], al ; add al, ch ; xchg eax, esi ; and eax, 0x8948fffe ; ret
0x0000000000415e22 : add byte ptr [rax], al ; add al, ch ; xchg eax, esi ; fdivr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x00000000004123e1 : add byte ptr [rax], al ; add al, ch ; xlatb ; adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421986 : add byte ptr [rax], al ; add al, ch ; xor bl, byte ptr [rip - 0x76b70002] ; ret
0x0000000000421288 : add byte ptr [rax], al ; add al, ch ; xor byte ptr [rsi + rdi*8], ah ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411a87 : add byte ptr [rax], al ; add al, ch ; xor dword ptr [rdi + rdi*8], ebx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432087 : add byte ptr [rax], al ; add al, ch ; xor dword ptr [rsi], edx ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431f85 : add byte ptr [rax], al ; add al, ch ; xor edx, dword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421185 : add byte ptr [rax], al ; add al, ch ; xor esp, dword ptr [rip - 0x76b70002] ; ret
0x0000000000424a2c : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424abf ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a82
0x0000000000400aa5 : add byte ptr [rax], al ; add bh, ch ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000443d4a : add byte ptr [rax], al ; add bl, 0xfc ; lcall ptr [rax + 0x4b] ; add byte ptr [rax], al ; pushfq ; ret
0x00000000004444d2 : add byte ptr [rax], al ; add bl, byte ptr [rbp + rdi*8 + 0x6ad0ff] ; add byte ptr [rsp + rbx*4 - 3], al ; push rax ; push 0 ; add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x0000000000409778 : add byte ptr [rax], al ; add bl, ch ; add eax, 0xb8 ; add byte ptr [rbp - 0x3d], bl ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000041ee5c : add byte ptr [rax], al ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x0000000000420041 : add byte ptr [rax], al ; add bl, ch ; sub ecx, dword ptr [rax - 0x77] ; ret
0x000000000043194d : add byte ptr [rax], al ; add bl, ch ; xor ecx, dword ptr [rax - 0x77] ; ret
0x000000000040b5b1 : add byte ptr [rax], al ; add bl, dh ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5de : add byte ptr [rax], al ; add bl, dh ; movups xmmword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000437e0d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000044a7d2 : add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000430b3c : add byte ptr [rax], al ; add byte ptr [rax + 0x20c48348], dl ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040b467 : add byte ptr [rax], al ; add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x0000000000410225 : add byte ptr [rax], al ; add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041d721 : add byte ptr [rax], al ; add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7db ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000040b763 : add byte ptr [rax], al ; add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000040b4a9 : add byte ptr [rax], al ; add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x00000000004009b5 : add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000445931 : add byte ptr [rax], al ; add byte ptr [rax + rax - 0x16b40000], ah ; sti ; call rdi
0x0000000000449939 : add byte ptr [rax], al ; add byte ptr [rax + rax*2 + 0x2cb60000], ch ; std ; jmp qword ptr [rsi]
0x00000000004498f9 : add byte ptr [rax], al ; add byte ptr [rax + rax*2], ch ; add byte ptr [rsp + rbp - 3], dl ; jmp qword ptr [rip]
0x000000000040b71c : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x74b7bc8c], al ; clc ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7b2 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7b2 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b6ce : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x74b7e68c], al ; clc ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b710 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000044cd8d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdcc ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000446485 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004493cd : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3cd : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; jnp 0x44d40d ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d435 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004468b5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000448df5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x00000000004481f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x44820d ; call rdx
0x0000000000446a1d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf1d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf5d ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004458d1 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add dh, ch ; jrcxz 0x4458e0 ; jmp rcx
0x000000000044839d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483b5 ; call qword ptr [rdx]
0x0000000000446c8d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b8d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x000000000044a78d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a88d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a878 ; std ; jmp qword ptr [rsi]
0x000000000044a7cd : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004458cd : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458e4 ; jmp rcx
0x000000000044a7ed : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; jb 0x44a7d8 ; std ; jmp qword ptr [rax]
0x00000000004493ad : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044a7ad : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a8ad : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0x50 ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x000000000044b9ad : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0x61 ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x000000000044c8ad : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x00000000004464ad : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004461ad : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x0000000000446385 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x00000000004492ed : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x0000000000445a65 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fadd qword ptr [rcx] ; add byte ptr [rax], al ; loop 0x445a75 ; sti ; jmp qword ptr [rax]
0x000000000044a365 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x0000000000446665 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x0000000000447e65 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fsub qword ptr [rip + 0x77780000] ; cld ; jmp qword ptr [rdx]
0x000000000044bf65 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c47d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x000000000044ce7d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; jne 0x44ce95 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x000000000044827d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000446d6d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000044a86d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x4f ; add byte ptr [rax], al ; jle 0x44a858 ; std ; jmp qword ptr [rax]
0x000000000044ba6d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x61 ; add byte ptr [rax], al ; movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x000000000044bd6d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x64 ; add byte ptr [rax], al ; ret 0xfdf4
0x000000000044a275 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044c675 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044d475 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4ad ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x00000000004498f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x00000000004493f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d40d ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004475f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb eax, 0x19540000 ; cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004485f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5cd : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x0000000000449dfd : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; je 0x449e59 ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x000000000044aafd : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; je 0x44ab86 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044aafd : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; je 0x44aba6 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044a235 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x00000000004458a9 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458bc ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445908 ; jmp rcx
0x000000000044ab3d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov ah, 0x52 ; add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044c73d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x000000000044c245 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x0000000000446a45 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf45 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000447d45 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d5d ; jmp qword ptr [rdx]
0x0000000000447e45 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e7d ; jmp qword ptr [rip]
0x000000000044ef45 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef5f ; call qword ptr [rbx]
0x0000000000445a45 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a215 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x0000000000447615 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000446d2d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x000000000044c02d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044a82d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; js 0x44a818 ; std ; jmp qword ptr [rax]
0x000000000044622d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x000000000044b82d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x0000000000448d2d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x0000000000449495 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x449470 ; cld ; jmp qword ptr [rbx]
0x000000000044d495 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044b7ed : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; ret 0xfdf1
0x000000000044c0d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x0000000000445879 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rax ; jrcxz 0x4458e0 ; ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445911 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458ec ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445938 ; jmp rcx
0x00000000004468dd : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044aadd : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; push rdx ; add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x0000000000447e25 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044ef25 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef3f ; call qword ptr [rdx]
0x0000000000445aa5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb al, 2 ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x00000000004470d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000044c3b5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x000000000044cdb5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d4b5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044eeb5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x96 ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x00000000004462b5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044ba0d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rcx], ah ; add byte ptr [rbx - 0xe], cl ; std ; jmp qword ptr [rsi]
0x000000000044a80d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044d00d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x000000000044c30d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044c41d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000044ab1d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000044bebd : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000044588d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x4458fd ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458d8 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445924 ; jmp rcx
0x00000000004481f9 : add byte ptr [rax], al ; add byte ptr [rax + rbp + 0x7a940000], al ; cld ; call rdx
0x000000000044c0d9 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2], cl ; add byte ptr [rdx], cl ; idiv ebp ; call qword ptr [rcx]
0x00000000004470d9 : add byte ptr [rax], al ; add byte ptr [rax + rbx], cl ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000044a131 : add byte ptr [rax], al ; add byte ptr [rax + rcx*2 + 0x36d80000], ah ; std ; call qword ptr [rax]
0x000000000044a8b1 : add byte ptr [rax], al ; add byte ptr [rax + rdx*2], ah ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x000000000044a891 : add byte ptr [rax], al ; add byte ptr [rax + rdx*2], al ; add byte ptr [rax], al ; jle 0x44a874 ; std ; jmp qword ptr [rsi]
0x00000000004468b9 : add byte ptr [rax], al ; add byte ptr [rax + rdx], ch ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x00000000004468e1 : add byte ptr [rax], al ; add byte ptr [rax + rdx], dl ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044c8b1 : add byte ptr [rax], al ; add byte ptr [rax + rsi*2], ah ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x000000000044587d : add byte ptr [rax], al ; add byte ptr [rax - 0x1d], dl ; sti ; ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x44590d ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458e8 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445934 ; jmp rcx
0x00000000004101f9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410976 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435e3d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435f7f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x000000000040b758 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041d3b6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040b74a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041096a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004358fd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b52 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000435909 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000435915 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000435921 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000043592d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000435939 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x00000000004358f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b46 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000040b6c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b71b ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b71b ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b711 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7bd ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7bd ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7bd ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b48d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b49b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x0000000000415815 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 + 1] ; ror cl, 1 ; ret
0x0000000000429cce : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov r8d, 0xe8c78948 ; outsd dx, dword ptr [rsi] ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000428bb6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 + 1], 1 ; ret 0x8b48
0x0000000000406a52 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041107b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000403cb2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x000000000044b8f1 : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rbx], al ; std ; jmp qword ptr [rsi]
0x000000000044588c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x4458fe ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458d9 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445925 ; jmp rcx
0x0000000000400aec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000437e0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004009b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000448df3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x0000000000446c8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x00000000004464ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000446663 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044ce7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; jne 0x44ce97 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x000000000044c673 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x00000000004493f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d40f ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044c243 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x0000000000446a43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000445a43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a213 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000044c0d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x00000000004468db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044ef23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef41 ; call qword ptr [rdx]
0x00000000004470d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000044c3b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x000000000044cdb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x00000000004462b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044d00b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x000000000044588b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x4458ff ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458da ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445926 ; jmp rcx
0x00000000004358ef : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b44 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000044588a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445900 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458db ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445927 ; jmp rcx
0x0000000000400aea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004009b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000448df1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x0000000000446c89 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b89 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x00000000004464a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000446661 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf61 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c671 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044c241 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x000000000044c0d1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044c3b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004462b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x0000000000445889 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445901 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458dc ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445928 ; jmp rcx
0x0000000000445888 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445902 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458dd ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445929 ; jmp rcx
0x0000000000400ae8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004009af : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000445887 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445903 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458de ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44592a ; jmp rcx
0x0000000000445886 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445904 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458df ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44592b ; jmp rcx
0x0000000000400ae6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004009ad : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000445885 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445905 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458e0 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44592c ; jmp rcx
0x0000000000400ae4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004009ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400ae2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004009a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400ae0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004009a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400ade : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 3 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004009a5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400aad : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400add : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040098d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400975 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400ac5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400976 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009be : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400af6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400aaf : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400adf : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040098f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400977 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400ac7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400978 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400af8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ab1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ae1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400991 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400979 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400ac9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040097a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400afa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ab3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ae3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400993 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040097b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400acb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040097c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400afc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ab5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ae5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400995 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040097d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400acd : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040097e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009c6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400afe : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ab7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ae7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400997 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040097f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400acf : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400980 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009c8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400b00 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ab9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ae9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400999 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000445891 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; jp 0x445937 ; add byte ptr [rcx], al ; js 0x4458f9 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458d4 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445920 ; jmp rcx
0x0000000000400981 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400ad1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000445892 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x4458f8 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458d3 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44591f ; jmp rcx
0x0000000000448df2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x0000000000400982 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004009ca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400b02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000446c8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x00000000004464aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000446662 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf62 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c672 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044c242 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x0000000000445a42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a212 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000044c0d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044ef22 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef42 ; call qword ptr [rdx]
0x000000000044c3b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004462b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x0000000000400abb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000403c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; nop word ptr cs:[rax + rax] ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cc0 ; mov eax, 0 ; test rax, rax ; je 0x403cc0 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000400aeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040099b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000437ddb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000445893 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; jp 0x445935 ; add byte ptr [rcx], al ; js 0x4458f7 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458d2 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44591e ; jmp rcx
0x0000000000400983 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403c3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x651560], bh ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cb0 ; mov eax, 0 ; test rax, rax ; je 0x403cb0 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000400ad3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000445894 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x4458f6 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458d1 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44591d ; jmp rcx
0x0000000000404fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000448df4 : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x000000000041de90 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rbp - 0x1c], 9 ; jg 0x41e23d ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e123 ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x0000000000424981 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rbp - 0x84], 3 ; jg 0x424a02 ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249c5
0x00000000004249db : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rbp - 0x88], 3 ; jg 0x424a5c ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a1f
0x0000000000424a35 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rbp - 0x8c], 3 ; jg 0x424ab6 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a79
0x0000000000424a8f : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rbp - 0x90], 3 ; jg 0x424b10 ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ad3
0x0000000000406ead : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x0000000000400984 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403c3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403caf ; mov eax, 0 ; test rax, rax ; je 0x403caf ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000415814 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004101f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410975 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435f7e : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x000000000041d3b5 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000410969 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004358fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b51 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000435908 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000435914 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000435920 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000043592c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000435938 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x00000000004358f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b45 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000437ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000406b5d : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000040b762 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000403c2c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004009cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400b04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000446c8c : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x00000000004458cc : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458e5 ; jmp rcx
0x00000000004464ac : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000446664 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf64 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044ce7c : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ce96 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x000000000044c674 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x00000000004493f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d40e ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044c244 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x0000000000446a44 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf44 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000445a44 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a214 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000044c0d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x00000000004468dc : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044ef24 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef40 ; call qword ptr [rdx]
0x00000000004470d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000044c3b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x000000000044cdb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x00000000004462b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044d00c : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x0000000000403c16 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x403c3f ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c64 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x403c87 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403cb1 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x403cb8 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400abd : add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004458d2 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458df ; jmp rcx
0x000000000040b6dc : add byte ptr [rax], al ; add byte ptr [rbp + 0x480b75c0], al ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b738 : add byte ptr [rax], al ; add byte ptr [rbp + 0x482775c0], al ; mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b72a : add byte ptr [rax], al ; add byte ptr [rbp + 0x483575c0], al ; mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7a4 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000447e49 : add byte ptr [rax], al ; add byte ptr [rbp + 0x77720000], bh ; cld ; jmp qword ptr [rip]
0x0000000000447e29 : add byte ptr [rax], al ; add byte ptr [rbp + 0x77800000], bl ; cld ; call qword ptr [rcx]
0x0000000000449e01 : add byte ptr [rax], al ; add byte ptr [rbp + rax*2], dh ; add byte ptr [rsi + 0x31], al ; std ; jmp qword ptr [rbx]
0x000000000044c5d1 : add byte ptr [rax], al ; add byte ptr [rbp + rbp*2], al ; add byte ptr [rcx], ch ; sti ; std ; jmp qword ptr [rsi]
0x0000000000447619 : add byte ptr [rax], al ; add byte ptr [rbp + rbx + 0x19500000], cl ; cld ; call qword ptr [rcx]
0x00000000004475f9 : add byte ptr [rax], al ; add byte ptr [rbp + rbx], ch ; add byte ptr [rcx + rbx - 4], dl ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004475d9 : add byte ptr [rax], al ; add byte ptr [rbp + rbx], cl ; add byte ptr [rsi + 0x19], cl ; cld ; jmp qword ptr [rsi]
0x0000000000403c2d : add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; nop word ptr cs:[rax + rax] ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cbe ; mov eax, 0 ; test rax, rax ; je 0x403cbe ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x000000000040977f : add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000044bdf9 : add byte ptr [rax], al ; add byte ptr [rbp], ch ; add dl, ch ; hlt ; std ; call qword ptr [rcx]
0x00000000004475b9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x17da0000], ch ; cld ; call qword ptr [rbx + 1]
0x000000000041ffb6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x251c4d05], cl ; add byte ptr [rbp + 0x15890150], cl ; sbb al, 0x25 ; add byte ptr [rbx + 0x251c3a15], cl ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x420004 ; jmp rsp
0x000000000040b282 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000041005e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x000000000040f304 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000449b91 : add byte ptr [rax], al ; add byte ptr [rbx + rax*2], al ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x0000000000400aed : add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000448441 : add byte ptr [rax], al ; add byte ptr [rbx + rbp - 0x7f420000], dh ; cld ; call qword ptr [rdx]
0x000000000044c3b9 : add byte ptr [rax], al ; add byte ptr [rbx + rbp*2], ch ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004483a1 : add byte ptr [rax], al ; add byte ptr [rbx + rbp], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483b1 ; call qword ptr [rdx]
0x0000000000446429 : add byte ptr [rax], al ; add byte ptr [rbx + rcx + 0xb890000], bl ; cld ; jmp qword ptr [rsi]
0x000000000044a519 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*2 + 0x5a3f0000], ah ; std ; lcall ptr [rcx + rax] ; add byte ptr [rax], al ; add al, 0 ; clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x000000000044d3d1 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d431 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044d3f9 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*2], ch ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004493b1 : add byte ptr [rax], al ; add byte ptr [rbx + rdi], ah ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x00000000004493d1 : add byte ptr [rax], al ; add byte ptr [rbx + rdi], al ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x00000000004493f9 : add byte ptr [rax], al ; add byte ptr [rbx + rdi], ch ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000040b6b4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d76fe10], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b72a ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b72a ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b77a : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d76fe10], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x0000000000424982 : add byte ptr [rax], al ; add byte ptr [rbx - 0x8343], al ; inc dword ptr [rbx] ; jg 0x424a01 ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249c4
0x00000000004249dc : add byte ptr [rax], al ; add byte ptr [rbx - 0x8743], al ; inc dword ptr [rbx] ; jg 0x424a5b ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a1e
0x0000000000424a36 : add byte ptr [rax], al ; add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424ab5 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a78
0x0000000000424a90 : add byte ptr [rax], al ; add byte ptr [rbx - 0x8f43], al ; inc dword ptr [rbx] ; jg 0x424b0f ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ad2
0x000000000040099d : add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000443a80 : add byte ptr [rax], al ; add byte ptr [rcx + 0x55], dh ; cld ; jmp qword ptr [rax]
0x000000000044a336 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add ah, ah ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x3a00004a ; std ; call qword ptr [rdx]
0x000000000044a05e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add bl, dl ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x000000000044a11e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add cl, byte ptr [rbx + 0x8070c] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x00000000004475a6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dl, byte ptr [rbx + 0x8070c] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x0000000000447df6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 0x72 ; or al, 7 ; or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; jl 0x447e70 ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000446c76 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b76 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x0000000000446496 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x000000000044664e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf4e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c65e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044c22e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x000000000044c0be : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044c39e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x000000000044629e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044a1fe : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 3 ; movabs al, byte ptr [0x8070c07] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x0000000000445ad6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add ebx, dword ptr [rsi + 0x8070c01] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x00000000004475c6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add ecx, dword ptr [rsi + 0x8070c01] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x000000000044591e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add edi, dword ptr [rcx + 0x8070c02] ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x000000000044a15e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add edx, dword ptr [rax] ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x0000000000447afe : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add esi, ebx ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x0000000000445a2e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; movsd dword ptr [rdi], dword ptr [rsi] ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x00000000004481e6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; imul ecx, dword ptr [rdi + rax], 8 ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x44821c ; call rdx
0x000000000044c89e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x0000000000446376 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x00000000004492de : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x000000000044c46e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x00000000004485e6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5be : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x000000000044c72e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x000000000044c01e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044c2fe : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044beae : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000044ce66 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ceac ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493de : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3de : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d424 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a2e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf2e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468c6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044cd9e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044cff6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x00000000004470be : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x0000000000446476 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x000000000044838e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483c4 ; call qword ptr [rdx]
0x000000000044a356 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x000000000044826e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000446d5e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000044d466 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4bc ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000449dee : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x449e68 ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x0000000000447e36 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e8c ; jmp qword ptr [rip]
0x000000000044ef36 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef6e ; call qword ptr [rbx]
0x0000000000446d1e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x0000000000449486 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x44947f ; cld ; jmp qword ptr [rbx]
0x000000000044a87e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a887 ; std ; jmp qword ptr [rsi]
0x000000000044a7be : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000447e16 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044a7fe : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044d486 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044d4a6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044cd7e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cddb ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493be : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3be : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; jnp 0x44d41c ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d444 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004468a6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000446a0e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf0e : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf6c ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000447d36 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d6c ; jmp qword ptr [rdx]
0x0000000000447606 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000445a49 : add byte ptr [rax], al ; add byte ptr [rcx + rax - 0xa240000], bh ; sti ; jmp qword ptr [rsi]
0x000000000044c249 : add byte ptr [rax], al ; add byte ptr [rcx + rbp*2 - 0x7e60000], bh ; std ; call qword ptr [rcx]
0x0000000000445935 : add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x0000000000446231 : add byte ptr [rax], al ; add byte ptr [rcx + rcx + 0xa330000], ah ; cld ; jmp qword ptr [rsi]
0x000000000044a219 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*2 + 0x42380000], cl ; std ; jmp qword ptr [rsi]
0x000000000044a239 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*2 + 0x423e0000], ch ; std ; jmp qword ptr [rax]
0x0000000000437ddd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004461b1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx], ah ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x0000000000449229 : add byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x40780000], bl ; cld ; call qword ptr [rcx]
0x000000000044a775 : add byte ptr [rax], al ; add byte ptr [rcx + rdi], al ; std ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000446a21 : add byte ptr [rax], al ; add byte ptr [rcx + rdx + 0x10d20000], dl ; cld ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x0000000000446a49 : add byte ptr [rax], al ; add byte ptr [rcx + rdx + 0x11020000], bh ; cld ; jmp qword ptr [rdx]
0x000000000044ba11 : add byte ptr [rax], al ; add byte ptr [rcx - 0xdb50000], al ; std ; jmp qword ptr [rsi]
0x000000000044b9b1 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x0000000000445895 : add byte ptr [rax], al ; add byte ptr [rcx], al ; jp 0x445933 ; add byte ptr [rcx], al ; js 0x4458f5 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458d0 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44591c ; jmp rcx
0x000000000040b6ea : add byte ptr [rax], al ; add byte ptr [rcx], al ; nop ; pop rbp ; ret
0x000000000040b754 : add byte ptr [rax], al ; add byte ptr [rcx], bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000448829 : add byte ptr [rax], al ; add byte ptr [rdi + rbp - 0x7c460000], bl ; cld ; jmp qword ptr [rsi]
0x000000000044c7e9 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*2], bl ; add byte ptr [rax - 4], ch ; std ; call qword ptr [rcx]
0x000000000044b831 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*2 - 0xe2d0000], ah ; std ; jmp qword ptr [rsi]
0x000000000044a831 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2 - 0x2f880000], ah ; std ; jmp qword ptr [rax]
0x000000000044a811 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2 - 0x2f8e0000], al ; std ; jmp qword ptr [rsi]
0x000000000044a7b1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2], ah ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a7f1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2], ah ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rax]
0x000000000044a7d1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2], al ; add byte ptr [rax + rdx*8 - 3], ch ; jmp qword ptr [rsi]
0x000000000044a791 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2], al ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044d011 : add byte ptr [rax], al ; add byte ptr [rdi + rsi*2 - 0x2a20000], al ; std ; jmp qword ptr [rdx]
0x000000000044c031 : add byte ptr [rax], al ; add byte ptr [rdi - 0x9250000], ah ; std ; jmp qword ptr [rsi]
0x0000000000447fa9 : add byte ptr [rax], al ; add byte ptr [rdi], bl ; add byte ptr [rax], al ; pop rsi ; js 0x447fb9 ; call qword ptr [rdx]
0x0000000000447b11 : add byte ptr [rax], al ; add byte ptr [rdx + 0x542c0000], al ; cld ; call rax
0x0000000000449b09 : add byte ptr [rax], al ; add byte ptr [rdx + rax*2], bh ; add byte ptr [rdi], ah ; xor ch, bh ; jmp qword ptr [rsi]
0x0000000000445ae9 : add byte ptr [rax], al ; add byte ptr [rdx + rax], bl ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x0000000000445aa9 : add byte ptr [rax], al ; add byte ptr [rdx + rax], bl ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x0000000000448321 : add byte ptr [rax], al ; add byte ptr [rdx + rbp + 0x7e990000], dl ; cld ; jmp qword ptr [rsi]
0x000000000044c311 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*2 - 0x7050000], al ; std ; jmp qword ptr [rsi]
0x000000000044a349 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*2 + 0x493a0000], bh ; std ; call qword ptr [rdx]
0x00000000004462b9 : add byte ptr [rax], al ; add byte ptr [rdx + rcx], ch ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044d331 : add byte ptr [rax], al ; add byte ptr [rdx + rdi*2 - 0x1c20000], ah ; std ; jmp qword ptr [rdx]
0x00000000004492f1 : add byte ptr [rax], al ; add byte ptr [rdx + rdi], ah ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x000000000044ab41 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*2 - 0x2ea20000], dh ; std ; jmp qword ptr [rax]
0x000000000044ab21 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*2 - 0x2ea80000], dl ; std ; jmp qword ptr [rsi]
0x000000000044ab01 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*2], dh ; add byte ptr [rdx - 0x2f], dl ; std ; jmp qword ptr [rip]
0x000000000044aae1 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*2], dl ; add byte ptr [rcx + rdx*8 - 3], cl ; jmp qword ptr [rip]
0x0000000000448b49 : add byte ptr [rax], al ; add byte ptr [rdx + rsi - 0x7c580000], bh ; cld ; jmp qword ptr [rbx]
0x000000000040b746 : add byte ptr [rax], al ; add byte ptr [rip + 0x48000000], al ; mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000400985 : add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403c3d : add byte ptr [rax], al ; add byte ptr [rsi + 0x651560], bh ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cae ; mov eax, 0 ; test rax, rax ; je 0x403cae ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x000000000044c741 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*2 - 0x3c70000], dh ; std ; jmp qword ptr [rsi]
0x000000000044e711 : add byte ptr [rax], al ; add byte ptr [rsi + rcx*4 - 0x72740000], al ; std ; call qword ptr [rip]
0x000000000044eeb9 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*4], ch ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x000000000044ef01 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*4], dh ; add byte ptr [rdx], ch ; jl 0x44ef13 ; call rsp
0x0000000000446ed1 : add byte ptr [rax], al ; add byte ptr [rsi + rdx], al ; add byte ptr [rax + 0x12], cl ; cld ; jmp qword ptr [rbx]
0x000000000044cf49 : add byte ptr [rax], al ; add byte ptr [rsi + rsi*2 - 0x2da0000], bh ; std ; jmp qword ptr [rdx]
0x000000000044cf21 : add byte ptr [rax], al ; add byte ptr [rsi + rsi*2 - 0x30b0000], dl ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044cdb9 : add byte ptr [rax], al ; add byte ptr [rsi*2 - 0x35a0000], ch ; std ; jmp qword ptr [rdx]
0x000000000044cd91 : add byte ptr [rax], al ; add byte ptr [rsi*2 - 0x38b0000], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000447ec9 : add byte ptr [rax], al ; add byte ptr [rsi], bh ; add byte ptr [rax], al ; mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x00000000004458b6 : add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458fb ; jmp rcx
0x000000000044bec1 : add byte ptr [rax], al ; add byte ptr [rsi], dh ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x0000000000447d49 : add byte ptr [rax], al ; add byte ptr [rsp + 0x77480000], bh ; cld ; jmp qword ptr [rdx]
0x0000000000445d41 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xa40000], dh ; sti ; jmp qword ptr [rsi]
0x00000000004464b1 : add byte ptr [rax], al ; add byte ptr [rsp + rcx], ah ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x000000000044d539 : add byte ptr [rax], al ; add byte ptr [rsp + rdi*2 - 0x1640000], ch ; std ; jmp qword ptr [rbx]
0x000000000044d519 : add byte ptr [rax], al ; add byte ptr [rsp + rdi*2 - 0x1680000], cl ; std ; jmp qword ptr [rbx]
0x000000000044d4b9 : add byte ptr [rax], al ; add byte ptr [rsp + rdi*2], ch ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044d499 : add byte ptr [rax], al ; add byte ptr [rsp + rdi*2], cl ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000449499 : add byte ptr [rax], al ; add byte ptr [rsp + rdi], cl ; add byte ptr [rax], al ; jbe 0x44946c ; cld ; jmp qword ptr [rbx]
0x0000000000446d31 : add byte ptr [rax], al ; add byte ptr [rsp + rdx + 0x12620000], ah ; cld ; jmp qword ptr [rbx]
0x0000000000446c91 : add byte ptr [rax], al ; add byte ptr [rsp + rdx], al ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000448d31 : add byte ptr [rax], al ; add byte ptr [rsp + rsi + 0x56010000], ah ; cld ; call qword ptr [rip]
0x0000000000448e21 : add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x0000000000448df9 : add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x79080000], al ; cld ; call rbx
0x000000000044a7f2 : add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; jb 0x44a7d3 ; std ; jmp qword ptr [rax]
0x000000000040096d : add byte ptr [rax], al ; add ch, ah ; or al, byte ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041ffb1 : add byte ptr [rax], al ; add cl, ch ; mov eax, 0x8b000000 ; add eax, 0x251c4d ; lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x251c44], edx ; mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x420009 ; jmp rsp
0x0000000000405149 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x000000000041f326 : add byte ptr [rax], al ; add cl, ch ; rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000424a27 : add byte ptr [rax], al ; add cl, ch ; test byte ptr [rax], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424ac4 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a87
0x0000000000405210 : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004458d5 : add byte ptr [rax], al ; add dh, ch ; jrcxz 0x4458dc ; jmp rcx
0x0000000000446a4e : add byte ptr [rax], al ; add dl, byte ptr [rcx] ; cld ; jmp qword ptr [rdx]
0x00000000004448da : add byte ptr [rax], al ; add dl, byte ptr [rdx - 2] ; jmp qword ptr [rax]
0x0000000000400ad5 : add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040b604 : add byte ptr [rax], al ; add dword ptr [rax + 0x4855c35d], edx ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b5f3 : add byte ptr [rax], al ; add dword ptr [rax - 0x75], ecx ; push rbp ; clc ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000445522 : add byte ptr [rax], al ; add dword ptr [rcx - 0x51570002], esi ; add byte ptr [rax], al ; mov r9b, 0xfe ; call rax
0x0000000000445896 : add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x4458f4 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458cf ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44591b ; jmp rcx
0x0000000000448d36 : add byte ptr [rax], al ; add dword ptr [rsi - 4], edx ; call qword ptr [rip]
0x000000000040b747 : add byte ptr [rax], al ; add eax, 0x48000000 ; mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000443e6a : add byte ptr [rax], al ; add ecx, edi ; cld ; push rax ; add byte ptr [r8], r8b ; xor bh, cl ; cld ; call qword ptr [rax]
0x000000000044b8f6 : add byte ptr [rax], al ; add esi, edx ; std ; jmp qword ptr [rsi]
0x0000000000404fcd : add byte ptr [rax], al ; add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x00000000004079b8 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000406d21 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000407e70 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000403183 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040e086 : add byte ptr [rax], al ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e052 : add byte ptr [rax], al ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000044cd8e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdcb ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000446486 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004493ce : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044e776 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; in al, dx ; mov es, word ptr [rax] ; add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x000000000044d3ce : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; jnp 0x44d40c ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d434 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004458a6 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; loopne 0x4458bf ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44590b ; jmp rcx
0x00000000004468b6 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000448df6 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x00000000004481f6 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x44820c ; call rdx
0x0000000000446a1e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf1e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf5c ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004493b2 : add byte ptr [rax], al ; and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x0000000000443932 : add byte ptr [rax], al ; and al, 0x4d ; cld ; inc eax ; cmp al, byte ptr [rax] ; add byte ptr [rax], dh ; cld ; jmp rax
0x000000000044a7b2 : add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a8b2 : add byte ptr [rax], al ; and al, 0x50 ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x000000000044b9b2 : add byte ptr [rax], al ; and al, 0x61 ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x000000000044c8b2 : add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x00000000004464b2 : add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004461b2 : add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x0000000000444b32 : add byte ptr [rax], al ; and bh, byte ptr [rax - 2] ; jmp rax
0x0000000000444dda : add byte ptr [rax], al ; and byte ptr [rbx - 0x6f0f0002], cl ; add byte ptr [rax], al ; mov edi, esi ; call qword ptr [rax]
0x00000000004438b2 : add byte ptr [rax], al ; and cl, byte ptr [rbx - 4] ; inc eax ; cmp byte ptr [rax], al ; add byte ptr [rbx + rcx*2 - 4], cl ; jmp rax
0x0000000000444c72 : add byte ptr [rax], al ; call 0x11444afe
0x0000000000436f70 : add byte ptr [rax], al ; call 0x403274
0x000000000041741d : add byte ptr [rax], al ; call 0x4036c4
0x0000000000437585 : add byte ptr [rax], al ; call 0x403864
0x000000000044773e : add byte ptr [rax], al ; call 0x5d4473a3
0x0000000000444dd2 : add byte ptr [rax], al ; call 0xffffffffd1444c68
0x0000000000448326 : add byte ptr [rax], al ; cdq ; jle 0x44832c ; jmp qword ptr [rsi]
0x00000000004439fa : add byte ptr [rax], al ; clc ; push rcx ; cld ; push rax ; cmp eax, 0x52250000 ; cld ; call qword ptr [rax]
0x0000000000443d12 : add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d77 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000443d11 : add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d78 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000448dfe : add byte ptr [rax], al ; clc ; xchg ah, bh ; call rbx
0x000000000044390a : add byte ptr [rax], al ; cld ; jmp qword ptr [rax]
0x00000000004438ba : add byte ptr [rax], al ; cld ; jmp rax
0x000000000044638a : add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x000000000044648a : add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x000000000044bf6e : add byte ptr [rax], al ; cli ; cmc ; std ; call qword ptr [rcx]
0x000000000044cf26 : add byte ptr [rax], al ; cmc ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000445aae : add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x0000000000447eca : add byte ptr [rax], al ; cmp al, 0x26 ; add byte ptr [rax], al ; mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x0000000000448556 : add byte ptr [rax], al ; cmp al, 0x82 ; cld ; call qword ptr [rcx]
0x0000000000443b92 : add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x00000000004492f2 : add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x000000000044a21e : add byte ptr [rax], al ; cmp byte ptr [rdx - 3], al ; jmp qword ptr [rsi]
0x000000000044a176 : add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x000000000044a34e : add byte ptr [rax], al ; cmp cl, byte ptr [rcx - 3] ; call qword ptr [rdx]
0x0000000000443f12 : add byte ptr [rax], al ; cmp dh, dl ; cld ; push qword ptr [rax + 0x54000052] ; salc ; cld ; call rax
0x0000000000444902 : add byte ptr [rax], al ; cmp dl, byte ptr [rbx - 2] ; call rax
0x000000000041de9c : add byte ptr [rax], al ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e117 ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000041de92 : add byte ptr [rax], al ; cmp dword ptr [rbp - 0x1c], 9 ; jg 0x41e23b ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e121 ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x0000000000424983 : add byte ptr [rax], al ; cmp dword ptr [rbp - 0x84], 3 ; jg 0x424a00 ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249c3
0x00000000004249dd : add byte ptr [rax], al ; cmp dword ptr [rbp - 0x88], 3 ; jg 0x424a5a ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a1d
0x0000000000424a37 : add byte ptr [rax], al ; cmp dword ptr [rbp - 0x8c], 3 ; jg 0x424ab4 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a77
0x0000000000424a91 : add byte ptr [rax], al ; cmp dword ptr [rbp - 0x90], 3 ; jg 0x424b0e ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ad1
0x0000000000449c5e : add byte ptr [rax], al ; cmp dword ptr [rcx], esi ; std ; jmp qword ptr [rsi]
0x00000000004439ea : add byte ptr [rax], al ; cmp eax, 0xb0fffc51 ; cmp eax, 0x51e40000 ; cld ; call rax
0x000000000044c746 : add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x00000000004493d2 : add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x0000000000443b7a : add byte ptr [rax], al ; cmp rsp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443632 : add byte ptr [rax], al ; cmp spl, r15b ; jmp qword ptr [rax]
0x000000000044cdbe : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000444582 : add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x00000000004374af : add byte ptr [rax], al ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40379f
0x0000000000436fff : add byte ptr [rax], al ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a7
0x00000000004448fa : add byte ptr [rax], al ; enter -0x1ae, -1 ; test al, 0x7c ; add byte ptr [rax], al ; cmp dl, byte ptr [rbx - 2] ; call rax
0x0000000000445a6a : add byte ptr [rax], al ; fadd qword ptr [rcx] ; add byte ptr [rax], al ; loop 0x445a70 ; sti ; jmp qword ptr [rax]
0x0000000000443dba : add byte ptr [rax], al ; fadd st(5), st(0) ; cld ; jmp qword ptr [rax]
0x00000000004468e6 : add byte ptr [rax], al ; fcom qword ptr [rax] ; cld ; jmp qword ptr [rdx]
0x000000000044c036 : add byte ptr [rax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044a136 : add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000444062 : add byte ptr [rax], al ; fdiv st(4), st(0) ; inc dword ptr [rax] ; pop rax ; add byte ptr [rax], al ; pop rsp ; fdiv st(4), st(0) ; jmp qword ptr [rax]
0x0000000000445a4e : add byte ptr [rax], al ; fdivr st(5), st(0) ; sti ; jmp qword ptr [rsi]
0x00000000004475be : add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x00000000004444c2 : add byte ptr [rax], al ; ficomp dword ptr [rbx + 0x6a90fffd] ; add byte ptr [rax], al ; hlt ; wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x00000000004441aa : add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444210 ; std ; call qword ptr [rax]
0x000000000044a36a : add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x000000000044666a : add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x0000000000444572 : add byte ptr [rax], al ; fsub dword ptr [rbp + 0x6da0fffd] ; add byte ptr [rax], al ; jp 0x444539 ; std ; inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x0000000000447e6a : add byte ptr [rax], al ; fsub qword ptr [rip + 0x77780000] ; cld ; jmp qword ptr [rdx]
0x000000000044bf6a : add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044976a : add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000044c482 : add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x000000000044ce82 : add byte ptr [rax], al ; hlt ; jne 0x44ce90 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x0000000000448282 : add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x00000000004444ca : add byte ptr [rax], al ; hlt ; wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x0000000000448266 : add byte ptr [rax], al ; imul edi, dword ptr [rsi - 4], -1 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000446d72 : add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000044a072 : add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x000000000044a172 : add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x000000000044a872 : add byte ptr [rax], al ; in al, 0x4f ; add byte ptr [rax], al ; jle 0x44a853 ; std ; jmp qword ptr [rax]
0x00000000004439f2 : add byte ptr [rax], al ; in al, 0x51 ; cld ; call rax
0x000000000044a456 : add byte ptr [rax], al ; in al, 0x51 ; std ; call qword ptr [rdx]
0x0000000000443a42 : add byte ptr [rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x000000000044ba72 : add byte ptr [rax], al ; in al, 0x61 ; add byte ptr [rax], al ; movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x000000000044bd72 : add byte ptr [rax], al ; in al, 0x64 ; add byte ptr [rax], al ; ret 0xfdf4
0x000000000044a27a : add byte ptr [rax], al ; in al, dx ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044c67a : add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044d47a : add byte ptr [rax], al ; in al, dx ; jnp 0x44d4a8 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044e77a : add byte ptr [rax], al ; in al, dx ; mov es, word ptr [rax] ; add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x000000000040096e : add byte ptr [rax], al ; in eax, 0xa ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004500f7 : add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004498fa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x00000000004493fa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3fa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d408 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044a7b6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a7d6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004475fa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb eax, 0x19540000 ; cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004485fa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5d2 : add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x0000000000445582 : add byte ptr [rax], al ; int 0xb4
0x0000000000444d62 : add byte ptr [rax], al ; int1 ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x0000000000447d4e : add byte ptr [rax], al ; ja 0x447d54 ; jmp qword ptr [rdx]
0x0000000000447e4e : add byte ptr [rax], al ; jb 0x447eee ; cld ; jmp qword ptr [rip]
0x000000000044a7f6 : add byte ptr [rax], al ; jb 0x44a7cf ; std ; jmp qword ptr [rax]
0x000000000044a816 : add byte ptr [rax], al ; jb 0x44a7ef ; std ; jmp qword ptr [rsi]
0x0000000000443e62 : add byte ptr [rax], al ; jbe 0x443e39 ; cld ; call rax
0x000000000044949e : add byte ptr [rax], al ; jbe 0x449467 ; cld ; jmp qword ptr [rbx]
0x000000000044d3fe : add byte ptr [rax], al ; jbe 0x44d405 ; std ; jmp qword ptr [rdx]
0x0000000000449e02 : add byte ptr [rax], al ; je 0x449e54 ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x000000000044ab02 : add byte ptr [rax], al ; je 0x44ab81 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044ab02 : add byte ptr [rax], al ; je 0x44aba1 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x00000000004441ca : add byte ptr [rax], al ; jl 0x4441f0 ; std ; call qword ptr [rax]
0x0000000000447e0a : add byte ptr [rax], al ; jl 0x447e5c ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x00000000004493fe : add byte ptr [rax], al ; jl 0x4493c7 ; cld ; jmp qword ptr [rdx]
0x000000000041d711 : add byte ptr [rax], al ; jle 0x41d739 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x0000000000443b62 : add byte ptr [rax], al ; jle 0x443b23 ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x000000000044a876 : add byte ptr [rax], al ; jle 0x44a84f ; std ; jmp qword ptr [rax]
0x000000000044a896 : add byte ptr [rax], al ; jle 0x44a86f ; std ; jmp qword ptr [rsi]
0x00000000004032f9 : add byte ptr [rax], al ; jmp 0x403199
0x000000000040d352 : add byte ptr [rax], al ; jmp 0x40d1de
0x0000000000444b5a : add byte ptr [rax], al ; jmp 0x444bf3
0x0000000000444b5a : add byte ptr [rax], al ; jmp 0x444c03
0x0000000000444b5a : add byte ptr [rax], al ; jmp 0x444c33
0x00000000004444e2 : add byte ptr [rax], al ; jne 0x444487 ; std ; call qword ptr [rax]
0x000000000044cd96 : add byte ptr [rax], al ; jne 0x44cdc3 ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000443a82 : add byte ptr [rax], al ; jno 0x443ae0 ; cld ; jmp qword ptr [rax]
0x0000000000443a81 : add byte ptr [rax], al ; jno 0x443ae1 ; cld ; jmp qword ptr [rax]
0x00000000004437c2 : add byte ptr [rax], al ; jnp 0x443820 ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000444502 : add byte ptr [rax], al ; jnp 0x4444b8 ; std ; lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x0000000000444baa : add byte ptr [rax], al ; jnp 0x444bba ; inc eax ; xchg dword ptr [rax], eax ; add byte ptr [rbx + rdi*2 - 2], bl ; jmp rax
0x000000000044d3d2 : add byte ptr [rax], al ; jnp 0x44d408 ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d430 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044377a : add byte ptr [rax], al ; jo 0x44381f ; cld ; ljmp ptr [rax - 0x73ffffcd] ; cld ; dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000044457a : add byte ptr [rax], al ; jp 0x444531 ; std ; inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x000000000044976e : add byte ptr [rax], al ; jp 0x44976c ; cld ; call rcx
0x00000000004500e0 : add byte ptr [rax], al ; jrcxz 0x45012d ; add eax, 0xf700118e ; add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044343a : add byte ptr [rax], al ; js 0x44345a ; cld ; call rax
0x0000000000447e6e : add byte ptr [rax], al ; js 0x447eee ; cld ; jmp qword ptr [rdx]
0x000000000044a836 : add byte ptr [rax], al ; js 0x44a80f ; std ; jmp qword ptr [rax]
0x000000000044a856 : add byte ptr [rax], al ; js 0x44a82f ; std ; jmp qword ptr [rsi]
0x0000000000405211 : add byte ptr [rax], al ; leave ; ret
0x000000000044a23a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044993a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; mov dh, 0x2c ; std ; jmp qword ptr [rsi]
0x00000000004483a6 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483ac ; call qword ptr [rdx]
0x0000000000445a6e : add byte ptr [rax], al ; loop 0x445a6c ; sti ; jmp qword ptr [rax]
0x000000000044380a : add byte ptr [rax], al ; loope 0x443861 ; cld ; push rax ; xor eax, 0x46f00000 ; cld ; call qword ptr [rax]
0x000000000045010e : add byte ptr [rax], al ; loope 0x45012f ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000443402 : add byte ptr [rax], al ; loopne 0x44341a ; cld ; dec dword ptr [rax - 0x29ffffdc] ; or ah, bh ; jmp rax
0x00000000004458ae : add byte ptr [rax], al ; loopne 0x4458b7 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445903 ; jmp rcx
0x000000000044ab42 : add byte ptr [rax], al ; mov ah, 0x52 ; add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044c742 : add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x0000000000443b9a : add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x00000000004440ba : add byte ptr [rax], al ; mov ah, 0xdf ; cld ; call rax
0x000000000044b666 : add byte ptr [rax], al ; mov ah, 0xeb ; std ; call qword ptr [rcx]
0x000000000044353a : add byte ptr [rax], al ; mov al, 0x29 ; cld ; call qword ptr [rax]
0x0000000000443412 : add byte ptr [rax], al ; mov bh, 0xb ; cld ; inc dword ptr [rax] ; and eax, 0xbd60000 ; cld ; jmp qword ptr [rax]
0x0000000000443802 : add byte ptr [rax], al ; mov bl, 0x46 ; cld ; call rax
0x000000000044eebe : add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x0000000000443712 : add byte ptr [rax], al ; mov byte ptr [rsi], bh ; cld ; call rax
0x000000000044993e : add byte ptr [rax], al ; mov dh, 0x2c ; std ; jmp qword ptr [rsi]
0x000000000044d49e : add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000447ece : add byte ptr [rax], al ; mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x0000000000444632 : add byte ptr [rax], al ; mov dl, 0xfd ; inc eax ; jo 0x444646 ; add ah, bl ; ret 0xfffd
0x0000000000443bf2 : add byte ptr [rax], al ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000444b72 : add byte ptr [rax], al ; mov dr1, word ptr [rcx - 2] ; jmp rax
0x000000000041de8b : add byte ptr [rax], al ; mov dword ptr [rbp - 0x1c], 0 ; cmp dword ptr [rbp - 0x1c], 9 ; jg 0x41e242 ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e128 ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x0000000000424979 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x84], 0 ; cmp dword ptr [rbp - 0x84], 3 ; jg 0x424a0a ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249cd
0x00000000004249d3 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x88], 0 ; cmp dword ptr [rbp - 0x88], 3 ; jg 0x424a64 ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a27
0x0000000000424a2d : add byte ptr [rax], al ; mov dword ptr [rbp - 0x8c], 0 ; cmp dword ptr [rbp - 0x8c], 3 ; jg 0x424abe ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a81
0x0000000000424a87 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x90], 0 ; cmp dword ptr [rbp - 0x90], 3 ; jg 0x424b18 ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424adb
0x000000000044642e : add byte ptr [rax], al ; mov dword ptr [rbx], ecx ; cld ; jmp qword ptr [rsi]
0x000000000041d808 : add byte ptr [rax], al ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x0000000000403bfe : add byte ptr [rax], al ; mov eax, 0x651567 ; push rbp ; sub rax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c57 ; mov eax, 0 ; test rax, rax ; je 0x403c57 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000444532 : add byte ptr [rax], al ; mov eax, 0xa0fffda1 ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; movabs byte ptr [0xa2dc00006cc0fffd], al ; std ; jmp rax
0x0000000000409b0c : add byte ptr [rax], al ; mov eax, dword ptr [rax] ; cdqe ; mov rdx, qword ptr [rbp - 0x38] ; add rdx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d70
0x000000000041dea6 : add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000041ffb7 : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x251c4d] ; lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x251c44], edx ; mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x420003 ; jmp rsp
0x000000000041e534 : add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e85f : add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cdb0] ; jmp rax
0x000000000041ef35 : add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000041f17e : add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db78] ; jmp rax
0x0000000000420d4b : add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x000000000042448a : add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x000000000044bbf6 : add byte ptr [rax], al ; mov ebx, esi ; std ; jmp qword ptr [rsi]
0x0000000000444de2 : add byte ptr [rax], al ; mov edi, esi ; call qword ptr [rax]
0x0000000000444aea : add byte ptr [rax], al ; mov edx, 0xc0fffe76 ; test byte ptr [rax], al ; add dh, dl ; jbe 0x444b02 ; jmp rax
0x0000000000400986 : add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000403c3e : add byte ptr [rax], al ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cad ; mov eax, 0 ; test rax, rax ; je 0x403cad ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x00000000004441a2 : add byte ptr [rax], al ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444218 ; std ; call qword ptr [rax]
0x000000000044564a : add byte ptr [rax], al ; mov esi, 0xd0fffed2 ; mov bl, 0 ; add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x000000000044356a : add byte ptr [rax], al ; mov esi, 0xd8fffc2a ; sub al, byte ptr [rax] ; add byte ptr [rax], dh ; sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000444d5a : add byte ptr [rax], al ; mov esi, 0xe0fffe87 ; mov es, word ptr [rax] ; add cl, dh ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x0000000000443db2 : add byte ptr [rax], al ; mov esi, 0xfffcc5 ; add byte ptr [r8], r8b ; fadd st(5), st(0) ; cld ; jmp qword ptr [rax]
0x000000000044d4be : add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044c24a : add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x0000000000446a4a : add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf4a : add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044a34a : add byte ptr [rax], al ; mov esp, 0x3a00004a ; std ; call qword ptr [rdx]
0x0000000000447d4a : add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d58 ; jmp qword ptr [rdx]
0x0000000000447e4a : add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e78 ; jmp qword ptr [rip]
0x000000000044ef4a : add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef5a ; call qword ptr [rbx]
0x0000000000443a32 : add byte ptr [rax], al ; mov esp, 0xd0fffc53 ; add byte ptr ds:[rax], al ; retf -0x3ad ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x0000000000445a4a : add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044552a : add byte ptr [rax], al ; mov r9b, 0xfe ; call rax
0x000000000040f57d : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; cmp rbx, rax ; setne al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004089c3 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; leave ; ret
0x000000000041de5c : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rax] ; mov rcx, qword ptr [rdx] ; mov rdx, qword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000040e132 : add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b450 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x00000000004062c5 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000404c07 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000040e0e2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0f6 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000415816 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000040e10a : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040fbd9 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; mov rdx, qword ptr [rbp - 0x28] ; leave ; ret
0x000000000040e11e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040764d : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x38] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x28] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040e046 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3e8] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e07a : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e06e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x00000000004101fa : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410977 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004067d3 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x0000000000435e3e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435f80 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x000000000040b759 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041d3b7 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040b74b : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041d3ac : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041096b : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004358fe : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b53 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000043590a : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000435916 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000435922 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000043592e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000043593a : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x00000000004358f2 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b47 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000406b3c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000040b6c4 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b71a ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b71a ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b712 : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7bc ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7bc ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7bc ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b48e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b49c : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x0000000000404666 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x24d169] ; mov rdi, rax ; call 0x426f8c
0x0000000000427783 : add byte ptr [rax], al ; mov rax, rbx ; mov rdi, rax ; call 0x403a8a
0x000000000042b59b : add byte ptr [rax], al ; mov rbx, rax ; mov rax, qword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x427852
0x0000000000437dde : add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000044a21a : add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000044761a : add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000444be2 : add byte ptr [rax], al ; mov word ptr [rsi + rdi*8 - 1], dr1 ; mov eax, 0x56000088 ; jge 0x444bfa ; jmp rax
0x000000000044397a : add byte ptr [rax], al ; mov word ptr [rsi - 4], cs ; jmp rax
0x0000000000444c22 : add byte ptr [rax], al ; movabs al, byte ptr [0xae000089c0fffe7e] ; jle 0x444c3a ; jmp rax
0x0000000000443cfa : add byte ptr [rax], al ; movabs al, byte ptr [0xc000004a18fffcc1] ; sar esp, -1 ; cmp byte ptr [rdx], cl ; add dl, dl ; sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d8f ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x000000000044453a : add byte ptr [rax], al ; movabs byte ptr [0xa2dc00006cc0fffd], al ; std ; jmp rax
0x0000000000444ab2 : add byte ptr [rax], al ; movabs dword ptr [0xca000083e0fffe75], eax ; jne 0x444ad2 ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ada ; jmp qword ptr [rax]
0x0000000000444d12 : add byte ptr [rax], al ; movabs dword ptr [0xca00008db0fffe85], eax ; test edi, esi ; call rax
0x0000000000444dc2 : add byte ptr [rax], al ; movabs dword ptr [0xca00009090fffe8a], eax ; mov bh, dh ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x0000000000446d32 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x000000000044c032 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044a832 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; js 0x44a813 ; std ; jmp qword ptr [rax]
0x0000000000445932 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x000000000044a132 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000446232 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x000000000044b832 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x0000000000448e26 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; cld ; jmp rsp
0x0000000000448d32 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x0000000000430896 : add byte ptr [rax], al ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x0000000000430885 : add byte ptr [rax], al ; movss dword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000040b5b2 : add byte ptr [rax], al ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5df : add byte ptr [rax], al ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040c97d : add byte ptr [rax], al ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403969
0x000000000040c963 : add byte ptr [rax], al ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403983
0x000000000040c949 : add byte ptr [rax], al ; movss xmm0, dword ptr [rip + 0x2d01d] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40399d
0x000000000040e8eb : add byte ptr [rax], al ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e91b : add byte ptr [rax], al ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000044ba76 : add byte ptr [rax], al ; movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x00000000004042a4 : add byte ptr [rax], al ; movzx eax, byte ptr [rbp - 0x30] ; movzx eax, al ; cmp eax, 0x10 ; ja 0x4042a5 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000430b3d : add byte ptr [rax], al ; nop ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004109e8 : add byte ptr [rax], al ; nop ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000044367a : add byte ptr [rax], al ; nop ; cmp bh, ah ; lcall ptr [rax + 0x2f] ; add byte ptr [rax], al ; ret
0x0000000000405984 : add byte ptr [rax], al ; nop ; leave ; ret
0x000000000040b468 : add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004443a2 : add byte ptr [rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044949a : add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x44946b ; cld ; jmp qword ptr [rbx]
0x000000000044d49a : add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000444b82 : add byte ptr [rax], al ; or bh, byte ptr [rdx - 2] ; jmp qword ptr [rax]
0x000000000044e77e : add byte ptr [rax], al ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x00000000004449fa : add byte ptr [rax], al ; or byte ptr [rcx - 2], ah ; call rax
0x000000000044460a : add byte ptr [rax], al ; or cl, al ; std ; jmp qword ptr [rax]
0x000000000044c0de : add byte ptr [rax], al ; or dh, bh ; std ; call qword ptr [rcx]
0x00000000004438f2 : add byte ptr [rax], al ; or ecx, dword ptr [rsp + rdi*8 - 1] ; sar byte ptr [rcx], 0 ; add byte ptr [rsi], ah ; cld ; jmp rax
0x000000000044c486 : add byte ptr [rax], al ; or edi, edx ; std ; jmp qword ptr [rsi]
0x0000000000444afa : add byte ptr [rax], al ; or esi, dword ptr [rdi - 2] ; inc dword ptr [rax] ; test dword ptr [rax], eax ; add byte ptr [rdx], dh ; ja 0x444b12 ; jmp qword ptr [rax]
0x0000000000448fd6 : add byte ptr [rax], al ; out 0xbb, al ; cld ; jmp qword ptr [rsi]
0x000000000044ce86 : add byte ptr [rax], al ; out dx, al ; cld ; std ; jmp qword ptr [rdx]
0x00000000004458d6 : add byte ptr [rax], al ; out dx, al ; jrcxz 0x4458db ; jmp rcx
0x0000000000400aa6 : add byte ptr [rax], al ; out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000444aaa : add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; jne 0x444aca ; inc eax ; add dword ptr [rax], 0 ; movabs dword ptr [0xca000083e0fffe75], eax ; jne 0x444ada ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ae2 ; jmp qword ptr [rax]
0x00000000004441c2 : add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x4441f8 ; std ; call qword ptr [rax]
0x0000000000446c96 : add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x000000000044ab26 : add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000044c67e : add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x0000000000449b96 : add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x0000000000448286 : add byte ptr [rax], al ; pop rbp ; jle 0x44828c ; call qword ptr [rdx]
0x00000000004455da : add byte ptr [rax], al ; pop rbp ; mov bh, 0xfe ; inc dword ptr [rax] ; mov dl, 0 ; add dl, al ; mov bh, 0xfe ; jmp qword ptr [rax]
0x0000000000403c2e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040b283 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041005f : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000404fd4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000044b7f2 : add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; ret 0xfdf1
0x0000000000447fae : add byte ptr [rax], al ; pop rsi ; js 0x447fb4 ; call qword ptr [rdx]
0x0000000000444622 : add byte ptr [rax], al ; pop rsi ; ret 0xfffd
0x000000000044ab46 : add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044d016 : add byte ptr [rax], al ; pop rsi ; std ; std ; jmp qword ptr [rdx]
0x00000000004444a2 : add byte ptr [rax], al ; pop rsi ; wait ; std ; call qword ptr [rax]
0x0000000000445aea : add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x000000000044406a : add byte ptr [rax], al ; pop rsp ; fdiv st(4), st(0) ; jmp qword ptr [rax]
0x0000000000444bb2 : add byte ptr [rax], al ; pop rsp ; jnp 0x444bba ; jmp rax
0x00000000004445ca : add byte ptr [rax], al ; pop rsp ; mov bh, 0xfd ; call qword ptr [rax]
0x0000000000443c5a : add byte ptr [rax], al ; pop rsp ; mov cl, 0xfc ; inc eax ; add byte ptr [r8], r8b ; sub al, 0xb2 ; cld ; jmp rax
0x0000000000443bfa : add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000444392 : add byte ptr [rax], al ; push -0x5700026e ; add byte ptr gs:[rax], al ; test byte ptr [rdx + 0x65c8fffd], dl ; add byte ptr [rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044c0da : add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044418a : add byte ptr [rax], al ; push 0x19 ; std ; dec dword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; push rsi ; sbb al, 0xfd ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444230 ; std ; call qword ptr [rax]
0x000000000044352a : add byte ptr [rax], al ; push 0x29 ; cld ; call rax
0x000000000044370a : add byte ptr [rax], al ; push 0x3e ; cld ; push qword ptr [rax - 0x77ffffcf] ; cld ; call rax
0x00000000004462be : add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x0000000000444b6a : add byte ptr [rax], al ; push rax ; jns 0x444b8a ; inc eax ; xchg byte ptr [rax], al ; add byte ptr [rsi - 0x1f000187], cl ; xchg byte ptr [rax], al ; add ah, cl ; jns 0x444b9a ; inc dword ptr [rax] ; xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444ba2 ; jmp qword ptr [rax]
0x000000000044587e : add byte ptr [rax], al ; push rax ; jrcxz 0x4458db ; ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x44590c ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458e7 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445933 ; jmp rcx
0x000000000044761e : add byte ptr [rax], al ; push rax ; sbb esp, edi ; call qword ptr [rcx]
0x000000000044638e : add byte ptr [rax], al ; push rbp ; or edi, esp ; jmp qword ptr [rsi]
0x0000000000443942 : add byte ptr [rax], al ; push rbx ; cld ; inc dword ptr [rax] ; cmp eax, dword ptr [rax] ; add byte ptr [rcx + 0x4d], ah ; cld ; jmp qword ptr [rax]
0x00000000004492d6 : add byte ptr [rax], al ; push rdi ; sar ah, 0xff ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x0000000000446d76 : add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x00000000004493b6 : add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044ab06 : add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044449a : add byte ptr [rax], al ; push rdx ; wait ; std ; push rax ; imul eax, dword ptr [rax], 0xfd9b5e00 ; call qword ptr [rax]
0x0000000000444bea : add byte ptr [rax], al ; push rsi ; jge 0x444bf2 ; jmp rax
0x0000000000444192 : add byte ptr [rax], al ; push rsi ; sbb al, 0xfd ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444228 ; std ; call qword ptr [rax]
0x00000000004468e2 : add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044aae2 : add byte ptr [rax], al ; push rsp ; push rdx ; add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x0000000000443f1a : add byte ptr [rax], al ; push rsp ; salc ; cld ; call rax
0x00000000004475fe : add byte ptr [rax], al ; push rsp ; sbb esp, edi ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004498fe : add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x0000000000443c02 : add byte ptr [rax], al ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000447e2a : add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000443d52 : add byte ptr [rax], al ; pushfq ; ret
0x00000000004444da : add byte ptr [rax], al ; pushfq ; std ; push rax ; push 0 ; add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x000000000044ef2a : add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef3a ; call qword ptr [rdx]
0x0000000000446a26 : add byte ptr [rax], al ; rcl byte ptr [rax], cl ; cld ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x0000000000443bea : add byte ptr [rax], al ; rcl byte ptr [rbp + 0x46c0fffc], 1 ; add byte ptr [rax], al ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000443442 : add byte ptr [rax], al ; rcl dword ptr [rdi], -4 ; push rax ; and eax, 0x181f0000 ; cld ; call qword ptr [rax]
0x000000000044405a : add byte ptr [rax], al ; rcr bl, 0xfc ; jmp rax
0x000000000044409a : add byte ptr [rax], al ; rcr ch, 0xfc ; jmp rax
0x000000000044450a : add byte ptr [rax], al ; rcr dword ptr [rbp + 0x6bc0fffd], cl ; add byte ptr [rax], al ; add al, 0x9e ; std ; jmp rax
0x00000000004009ce : add byte ptr [rax], al ; ret
0x0000000000400b06 : add byte ptr [rax], al ; ret 0
0x000000000044677e : add byte ptr [rax], al ; ret 0xfc10
0x0000000000443eda : add byte ptr [rax], al ; ret 0xfcd4
0x000000000044b7f6 : add byte ptr [rax], al ; ret 0xfdf1
0x000000000044bd76 : add byte ptr [rax], al ; ret 0xfdf4
0x0000000000445012 : add byte ptr [rax], al ; ret 0xfe96
0x00000000004455e2 : add byte ptr [rax], al ; ret 0xfeb7
0x0000000000443d22 : add byte ptr [rax], al ; ret 0xfffc
0x000000000044461a : add byte ptr [rax], al ; ret 0xfffd
0x0000000000444dca : add byte ptr [rax], al ; retf -0x176 ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x0000000000444d1a : add byte ptr [rax], al ; retf -0x17b ; call rax
0x0000000000444aba : add byte ptr [rax], al ; retf -0x18b ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ad2 ; jmp qword ptr [rax]
0x0000000000443a3a : add byte ptr [rax], al ; retf -0x3ad ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x000000000044bec6 : add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x0000000000443b6a : add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000444782 : add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x0000000000443d0a : add byte ptr [rax], al ; rol cl, cl ; cld ; lcall ptr [rax + 0x4a] ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d7f ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000443d09 : add byte ptr [rax], al ; rol cl, cl ; cld ; lcall ptr [rax + 0x4a] ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d80 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000449746 : add byte ptr [rax], al ; rol dl, cl ; cld ; call rax
0x00000000004464b6 : add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004438ca : add byte ptr [rax], al ; sahf ; cld ; jmp qword ptr [rax]
0x000000000044b836 : add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x0000000000444af2 : add byte ptr [rax], al ; salc ; jbe 0x444afa ; jmp rax
0x000000000044ef2e : add byte ptr [rax], al ; salc ; jge 0x44ef36 ; call qword ptr [rdx]
0x0000000000444da2 : add byte ptr [rax], al ; salc ; mov esi, edi ; call qword ptr [rax]
0x000000000044340a : add byte ptr [rax], al ; salc ; or ah, bh ; jmp rax
0x000000000044341a : add byte ptr [rax], al ; salc ; or edi, esp ; jmp qword ptr [rax]
0x000000000044a796 : add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044aae6 : add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x0000000000444232 : add byte ptr [rax], al ; sbb ah, byte ptr [rax] ; std ; inc eax ; pop rdi ; add byte ptr [rax], al ; xor al, 0x20 ; std ; jmp rax
0x000000000044839e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483b4 ; call qword ptr [rdx]
0x0000000000446c8e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b8e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x000000000044a78e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a88e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a877 ; std ; jmp qword ptr [rsi]
0x000000000044a7ce : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004458ce : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458e3 ; jmp rcx
0x000000000044a7ee : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; jb 0x44a7d7 ; std ; jmp qword ptr [rax]
0x00000000004493ae : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044a7ae : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a8ae : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x50 ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x000000000044b9ae : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x61 ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x000000000044c8ae : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x00000000004464ae : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004461ae : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x0000000000446386 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x0000000000447ec6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, 0x26 ; add byte ptr [rax], al ; mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x00000000004492ee : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x0000000000445a66 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fadd qword ptr [rcx] ; add byte ptr [rax], al ; loop 0x445a74 ; sti ; jmp qword ptr [rax]
0x000000000044a366 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x0000000000446666 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x0000000000447e66 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rip + 0x77780000] ; cld ; jmp qword ptr [rdx]
0x000000000044bf66 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c47e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x000000000044ce7e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ce94 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x000000000044827e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000446d6e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000044a06e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x000000000044a86e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x4f ; add byte ptr [rax], al ; jle 0x44a857 ; std ; jmp qword ptr [rax]
0x000000000044ba6e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x61 ; add byte ptr [rax], al ; movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x000000000044bd6e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x64 ; add byte ptr [rax], al ; ret 0xfdf4
0x000000000044a276 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044c676 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044d476 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4ac ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x00000000004498f6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x00000000004493f6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3f6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d40c ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004475f6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb eax, 0x19540000 ; cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004485f6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5ce : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x0000000000449dfe : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x449e58 ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x000000000044aafe : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44ab85 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044aafe : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44aba5 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044a236 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x0000000000449936 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; mov dh, 0x2c ; std ; jmp qword ptr [rsi]
0x00000000004458aa : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; loopne 0x4458bb ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445907 ; jmp rcx
0x000000000044ab3e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x52 ; add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044c73e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x000000000044c246 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x0000000000446a46 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf46 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044a346 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x3a00004a ; std ; call qword ptr [rdx]
0x0000000000447d46 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d5c ; jmp qword ptr [rdx]
0x0000000000447e46 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e7c ; jmp qword ptr [rip]
0x000000000044ef46 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef5e ; call qword ptr [rbx]
0x0000000000445a46 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a216 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x0000000000447616 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000446d2e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x000000000044c02e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044a82e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; js 0x44a817 ; std ; jmp qword ptr [rax]
0x000000000044a12e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x000000000044622e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x000000000044b82e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x0000000000448d2e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x0000000000449496 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x44946f ; cld ; jmp qword ptr [rbx]
0x000000000044d496 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044b7ee : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; ret 0xfdf1
0x000000000044c0d6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044587a : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rax ; jrcxz 0x4458df ; ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445910 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458eb ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445937 ; jmp rcx
0x00000000004468de : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044aade : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; push rdx ; add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x0000000000447e26 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044ef26 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef3e ; call qword ptr [rdx]
0x0000000000447fa6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb al, 0x27 ; add byte ptr [rax], al ; pop rsi ; js 0x447fbc ; call qword ptr [rdx]
0x0000000000445aa6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb al, 2 ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x00000000004470d6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x00000000004475b6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x000000000044c3b6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x000000000044cdb6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d4b6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044eeb6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x96 ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x00000000004462b6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044ba0e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx], ah ; add byte ptr [rbx - 0xe], cl ; std ; jmp qword ptr [rsi]
0x000000000044a80e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044d00e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x000000000044c30e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044e70e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi - 0x72740000], cl ; std ; call qword ptr [rip]
0x000000000044c41e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000044ab1e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000044bebe : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x0000000000447faa : add byte ptr [rax], al ; sbb al, 0x27 ; add byte ptr [rax], al ; pop rsi ; js 0x447fb8 ; call qword ptr [rdx]
0x0000000000445aaa : add byte ptr [rax], al ; sbb al, 2 ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x0000000000443b8a : add byte ptr [rax], al ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443d1a : add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x000000000044c24e : add byte ptr [rax], al ; sbb bh, al ; std ; call qword ptr [rcx]
0x0000000000443b5a : add byte ptr [rax], al ; sbb byte ptr [rax + 0x4420fffc], al ; add byte ptr [rax], al ; jle 0x443b2b ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x00000000004470da : add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000044419a : add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444220 ; std ; call qword ptr [rax]
0x000000000040b755 : add byte ptr [rax], al ; sbb dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x00000000004441ba : add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444200 ; std ; call qword ptr [rax]
0x000000000044b956 : add byte ptr [rax], al ; sbb esi, edx ; std ; jmp qword ptr [rsi]
0x00000000004475da : add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x00000000004475de : add byte ptr [rax], al ; sbb rsp, r15 ; jmp qword ptr [rsi]
0x0000000000444c2a : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; jle 0x444c32 ; jmp rax
0x000000000044a23e : add byte ptr [rax], al ; std ; jmp qword ptr [rax]
0x000000000044a25e : add byte ptr [rax], al ; std ; jmp qword ptr [rsi]
0x00000000004461b6 : add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x000000000044cf4e : add byte ptr [rax], al ; std ; std ; jmp qword ptr [rdx]
0x000000000044c8b6 : add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x000000000044c316 : add byte ptr [rax], al ; sti ; clc ; std ; jmp qword ptr [rsi]
0x00000000004437aa : add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000444b2a : add byte ptr [rax], al ; sti ; ja 0x444b3a ; inc eax ; test dword ptr [rax], eax ; add byte ptr [rdx], ah ; js 0x444b42 ; jmp rax
0x00000000004468be : add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000446586 : add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; or al, 0xfc ; jmp qword ptr [rsi]
0x00000000004468ba : add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000444132 : add byte ptr [rax], al ; sub al, 0x17 ; std ; jmp qword ptr [rax + 0x5200005b]
0x00000000004475ba : add byte ptr [rax], al ; sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x000000000044a36e : add byte ptr [rax], al ; sub al, 0x49 ; std ; call qword ptr [rbx]
0x0000000000447b16 : add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x000000000044c3ba : add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x000000000044cdba : add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d4ba : add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x0000000000444382 : add byte ptr [rax], al ; sub al, 0x92 ; std ; ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044eeba : add byte ptr [rax], al ; sub al, 0x96 ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x00000000004462ba : add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x0000000000443c62 : add byte ptr [rax], al ; sub al, 0xb2 ; cld ; jmp rax
0x000000000044362a : add byte ptr [rax], al ; sub bh, byte ptr [rax] ; cld ; inc dword ptr [rax] ; add byte ptr cs:[rax], al ; cmp spl, r15b ; jmp qword ptr [rax]
0x000000000044c3be : add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004437b2 : add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000044c5d6 : add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x000000000044357a : add byte ptr [rax], al ; sub edi, esp ; jmp qword ptr [rax]
0x000000000042743e : add byte ptr [rax], al ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x0000000000437e4a : add byte ptr [rax], al ; sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004437fa : add byte ptr [rax], al ; test al, 0x46 ; cld ; push qword ptr [rax - 0x4cffffcb] ; cld ; call rax
0x0000000000448b4e : add byte ptr [rax], al ; test al, 0x83 ; cld ; jmp qword ptr [rbx]
0x000000000040b6cf : add byte ptr [rax], al ; test al, al ; je 0x40b70f ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b70f ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b71d : add byte ptr [rax], al ; test al, al ; je 0x40b7b1 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7b1 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7b1 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000044d47e : add byte ptr [rax], al ; test bh, dh ; std ; jmp qword ptr [rbx]
0x0000000000448dfa : add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x00000000004481fa : add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x448208 ; call rdx
0x000000000044ba12 : add byte ptr [rax], al ; test byte ptr [rcx], ah ; add byte ptr [rbx - 0xe], cl ; std ; jmp qword ptr [rsi]
0x000000000044a812 : add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044d012 : add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x000000000044439a : add byte ptr [rax], al ; test byte ptr [rdx + 0x65c8fffd], dl ; add byte ptr [rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000447b12 : add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x000000000044c312 : add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044e712 : add byte ptr [rax], al ; test byte ptr [rsi - 0x72740000], cl ; std ; call qword ptr [rip]
0x000000000044a8b6 : add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x0000000000445642 : add byte ptr [rax], al ; test eax, 0xb0fffed2 ; mov ah, 0 ; add byte ptr [rsi - 0x2f00012e], bh ; mov bl, 0 ; add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x000000000040b6dd : add byte ptr [rax], al ; test eax, eax ; jne 0x40b701 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b739 : add byte ptr [rax], al ; test eax, eax ; jne 0x40b795 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b72b : add byte ptr [rax], al ; test eax, eax ; jne 0x40b7a3 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7a3 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000403c18 : add byte ptr [rax], al ; test rax, rax ; je 0x403c3d ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c66 : add byte ptr [rax], al ; test rax, rax ; je 0x403c85 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403cb3 : add byte ptr [rax], al ; test rax, rax ; je 0x403cb6 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000444492 : add byte ptr [rax], al ; wait ; std ; call rax
0x0000000000444332 : add byte ptr [rax], al ; xchg ch, bh ; inc dword ptr [rax - 0x17ffff9c] ; mov bh, ch ; jmp qword ptr [rax - 0x4effff9c]
0x0000000000443d2a : add byte ptr [rax], al ; xchg eax, edx ; ret 0xfffc
0x0000000000447266 : add byte ptr [rax], al ; xchg eax, esi ; adc al, 0xfc ; jmp qword ptr [rsi]
0x000000000044d0de : add byte ptr [rax], al ; xchg eax, esi ; std ; std ; jmp qword ptr [rdx]
0x0000000000446a22 : add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044c422 : add byte ptr [rax], al ; xchg eax, esp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000044cf22 : add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf58 ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004481fe : add byte ptr [rax], al ; xchg eax, esp ; jp 0x448204 ; call rdx
0x000000000044ab22 : add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000044438a : add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000443f5a : add byte ptr [rax], al ; xlatb ; cld ; call rax
0x0000000000443f52 : add byte ptr [rax], al ; xlatb ; cld ; push qword ptr [rax + 0x66000053] ; xlatb ; cld ; call rax
0x00000000004470de : add byte ptr [rax], al ; xor al, 0x13 ; cld ; jmp qword ptr [rsi]
0x000000000044423a : add byte ptr [rax], al ; xor al, 0x20 ; std ; jmp rax
0x0000000000443902 : add byte ptr [rax], al ; xor al, 0x4c ; cld ; inc dword ptr [rax] ; cmp al, byte ptr [rax] ; add byte ptr [rsi + 0x4c], cl ; cld ; jmp qword ptr [rax]
0x000000000044a546 : add byte ptr [rax], al ; xor al, 0x5b ; std ; jmp rsp
0x000000000044bec2 : add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000044a076 : add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x0000000000443e72 : add byte ptr [rax], al ; xor bh, cl ; cld ; call qword ptr [rax]
0x000000000044488a : add byte ptr [rax], al ; xor byte ptr [rax - 2], dl ; call rax
0x000000000044393a : add byte ptr [rax], al ; xor byte ptr [rbp - 4], cl ; jmp rax
0x0000000000443572 : add byte ptr [rax], al ; xor byte ptr [rbx], ch ; cld ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000447e2e : add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e94 ; jmp qword ptr [rip]
0x0000000000447e0e : add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000443522 : add byte ptr [rax], al ; xor ch, byte ptr [rcx] ; cld ; push qword ptr [rax + 0x6a000029] ; sub esp, edi ; call rax
0x0000000000444b02 : add byte ptr [rax], al ; xor dh, byte ptr [rdi - 2] ; jmp qword ptr [rax]
0x000000000041bed1 : add byte ptr [rax], al ; xor eax, 1 ; leave ; ret
0x000000000040b6b5 : add byte ptr [rax], al ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b729 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b729 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b77b : add byte ptr [rax], al ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x0000000000449e06 : add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x0000000000446236 : add byte ptr [rax], al ; xor ecx, dword ptr [rdx] ; cld ; jmp qword ptr [rsi]
0x000000000044b9b6 : add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x0000000000449d66 : add byte ptr [rax], al ; xor rbp, r15 ; jmp qword ptr [rdx]
0x000000000044454b : add byte ptr [rax], bh ; movabs dword ptr [0xa39000006d00fffd], eax ; std ; jmp qword ptr [rax]
0x0000000000443f13 : add byte ptr [rax], bh ; salc ; cld ; push qword ptr [rax + 0x54000052] ; salc ; cld ; call rax
0x000000000044a21f : add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x0000000000403caf : add byte ptr [rax], bh ; test rax, rax ; je 0x403cba ; push rbp ; mov rbp, rsp ; call rax
0x0000000000444068 : add byte ptr [rax], bl ; add byte ptr [rsp + rbx*8 - 4], bl ; jmp qword ptr [rax]
0x0000000000443b5b : add byte ptr [rax], bl ; cmp ah, 0xff ; and byte ptr [rax + rax], al ; jle 0x443b2a ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443bc3 : add byte ptr [rax], bl ; mov edi, esp ; jmp qword ptr [rax]
0x0000000000400abf : add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000044460b : add byte ptr [rax], cl ; sar ebp, -1 ; and byte ptr [rax], dh ; add byte ptr [rdx - 0x3f], al ; std ; inc dword ptr [rax + 0x70] ; add byte ptr [rax], al ; ret 0xfffd
0x000000000044393b : add byte ptr [rax], dh ; cld ; jmp rax
0x0000000000443e73 : add byte ptr [rax], dh ; iretd ; cld ; call qword ptr [rax]
0x000000000044423b : add byte ptr [rax], dh ; std ; jmp rax
0x0000000000443573 : add byte ptr [rax], dh ; sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000445503 : add byte ptr [rax], dl ; mov al, 0xfe ; call qword ptr [rax]
0x000000000044448b : add byte ptr [rax], dl ; wait ; std ; push qword ptr [rax + 0x42000069] ; wait ; std ; call rax
0x0000000000443b71 : add byte ptr [rax], r8b ; add al, 0x81 ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x00000000004458d4 : add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458dd ; jmp rcx
0x0000000000443b91 : add byte ptr [rax], r8b ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443b79 : add byte ptr [rax], r8b ; cmp rsp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443b61 : add byte ptr [rax], r8b ; jle 0x443b24 ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443bf1 : add byte ptr [rax], r8b ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000403bfd : add byte ptr [rax], r8b ; mov eax, 0x651567 ; push rbp ; sub rax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c58 ; mov eax, 0 ; test rax, rax ; je 0x403c58 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000443db1 : add byte ptr [rax], r8b ; mov esi, 0xfffcc5 ; add byte ptr [r8], r8b ; fadd st(5), st(0) ; cld ; jmp qword ptr [rax]
0x0000000000443bf9 : add byte ptr [rax], r8b ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000443be9 : add byte ptr [rax], r8b ; rcl byte ptr [rbp + 0x46c0fffc], 1 ; add byte ptr [rax], al ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000443b69 : add byte ptr [rax], r8b ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443b89 : add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000449d65 : add byte ptr [rax], r8b ; xor rbp, r15 ; jmp qword ptr [rdx]
0x000000000041ffbe : add byte ptr [rbp + 0x15890150], cl ; sbb al, 0x25 ; add byte ptr [rbx + 0x251c3a15], cl ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fffc ; jmp rsp
0x00000000004500f3 : add byte ptr [rbp + 0x1b02], ch ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000040b6de : add byte ptr [rbp + 0x480b75c0], al ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b73a : add byte ptr [rbp + 0x482775c0], al ; mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000437ad9 : add byte ptr [rbp + 0x482c74c0], al ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b3d ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b3d ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000040b72c : add byte ptr [rbp + 0x483575c0], al ; mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7a2 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000403c04 : add byte ptr [rbp + 0x48], dl ; sub eax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c51 ; mov eax, 0 ; test rax, rax ; je 0x403c51 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c44 : add byte ptr [rbp + 0x48], dl ; sub esi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403ca7 ; mov eax, 0 ; test rax, rax ; je 0x403ca7 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000447e4b : add byte ptr [rbp + 0x77720000], bh ; cld ; jmp qword ptr [rip]
0x0000000000447e2b : add byte ptr [rbp + 0x77800000], bl ; cld ; call qword ptr [rcx]
0x0000000000448287 : add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x000000000044638f : add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x000000000044471b : add byte ptr [rbp + rax*2 - 2], ch ; jmp rax
0x0000000000444713 : add byte ptr [rbp + rax*2 - 2], cl ; inc eax ; je 0x444727 ; add byte ptr [rbp + rax*2 - 2], ch ; jmp rax
0x0000000000449e03 : add byte ptr [rbp + rax*2], dh ; add byte ptr [rsi + 0x31], al ; std ; jmp qword ptr [rbx]
0x0000000000443d9b : add byte ptr [rbp + rax*8 - 4], cl ; jmp qword ptr [rax + 0x7600004c]
0x000000000044c5d3 : add byte ptr [rbp + rbp*2], al ; add byte ptr [rcx], ch ; sti ; std ; jmp qword ptr [rsi]
0x000000000044761b : add byte ptr [rbp + rbx + 0x19500000], cl ; cld ; call qword ptr [rcx]
0x00000000004441cb : add byte ptr [rbp + rbx - 3], bh ; call qword ptr [rax]
0x00000000004475fb : add byte ptr [rbp + rbx], ch ; add byte ptr [rcx + rbx - 4], dl ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004475db : add byte ptr [rbp + rbx], cl ; add byte ptr [rsi + 0x19], cl ; cld ; jmp qword ptr [rsi]
0x000000000044fb34 : add byte ptr [rbp + rdx*2 + 0x1a6ce05], al ; add byte ptr [rax - 0x5575f0ab], ch ; add dword ptr [rax], eax ; ret 0x555
0x0000000000444093 : add byte ptr [rbp - 0x23], dl ; cld ; inc eax ; pop rax ; add byte ptr [rax], al ; rcr ch, 0xfc ; jmp rax
0x0000000000403c2f : add byte ptr [rbp - 0x3d], bl ; nop word ptr cs:[rax + rax] ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cbc ; mov eax, 0 ; test rax, rax ; je 0x403cbc ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000409781 : add byte ptr [rbp - 0x3d], bl ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x00000000004444e3 : add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x000000000044551b : add byte ptr [rbp - 0x7f000150], dh ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add dword ptr [rcx - 0x51570002], esi ; add byte ptr [rax], al ; mov r9b, 0xfe ; call rax
0x000000000044d3d7 : add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d42b ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044cd97 : add byte ptr [rbp - 4], dh ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044bdfb : add byte ptr [rbp], ch ; add dl, ch ; hlt ; std ; call qword ptr [rcx]
0x00000000004475bb : add byte ptr [rbx + 0x17da0000], ch ; cld ; call qword ptr [rbx + 1]
0x000000000041ffc7 : add byte ptr [rbx + 0x251c3a15], cl ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fff3 ; jmp rsp
0x000000000041ffb8 : add byte ptr [rbx + 0x251c4d05], cl ; add byte ptr [rbp + 0x15890150], cl ; sbb al, 0x25 ; add byte ptr [rbx + 0x251c3a15], cl ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x420002 ; jmp rsp
0x000000000040b284 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000410060 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x00000000004437c3 : add byte ptr [rbx + 0x45], bh ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000409b0d : add byte ptr [rbx + 0x48984800], cl ; mov edx, dword ptr [rbp - 0x38] ; add rdx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d6f
0x0000000000443943 : add byte ptr [rbx + 0x4d], dl ; cld ; inc dword ptr [rax] ; cmp eax, dword ptr [rax] ; add byte ptr [rcx + 0x4d], ah ; cld ; jmp qword ptr [rax]
0x0000000000404fd5 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004044ef : add byte ptr [rbx + 0x68ba1040], cl ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000040451f : add byte ptr [rbx + 0x68ba1440], cl ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xd089
0x0000000000448267 : add byte ptr [rbx + 0x7e], ch ; cld ; call qword ptr [rdx]
0x000000000041de9d : add byte ptr [rbx + 0xf08e47d], al ; xchg dword ptr [rax + 2], ebx ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x0000000000449b93 : add byte ptr [rbx + rax*2], al ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x0000000000400aef : add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000448443 : add byte ptr [rbx + rbp - 0x7f420000], dh ; cld ; call qword ptr [rdx]
0x000000000044c3bb : add byte ptr [rbx + rbp*2], ch ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004483a3 : add byte ptr [rbx + rbp], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483af ; call qword ptr [rdx]
0x000000000044a547 : add byte ptr [rbx + rbx*2], dh ; std ; jmp rsp
0x0000000000443c03 : add byte ptr [rbx + rbx*4 - 4], dl ; jmp qword ptr [rax]
0x000000000044648f : add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x000000000044642b : add byte ptr [rbx + rcx + 0xb890000], bl ; cld ; jmp qword ptr [rsi]
0x000000000044a51b : add byte ptr [rbx + rcx*2 + 0x5a3f0000], ah ; std ; lcall ptr [rcx + rax] ; add byte ptr [rax], al ; add al, 0 ; clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x00000000004438bb : add byte ptr [rbx + rcx*2 - 4], cl ; jmp rax
0x0000000000444bb3 : add byte ptr [rbx + rdi*2 - 2], bl ; jmp rax
0x000000000044d3d3 : add byte ptr [rbx + rdi*2], al ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d42f ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044d3fb : add byte ptr [rbx + rdi*2], ch ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004493b3 : add byte ptr [rbx + rdi], ah ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x00000000004493d3 : add byte ptr [rbx + rdi], al ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x00000000004493fb : add byte ptr [rbx + rdi], ch ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x0000000000443a33 : add byte ptr [rbx + rdx*2 + 0x3ed0fffc], bh ; add byte ptr [rax], al ; retf -0x3ad ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x0000000000443be3 : add byte ptr [rbx + rdx*4 + 0x46a0fffc], bl ; add byte ptr [rax], al ; rcl byte ptr [rbp + 0x46c0fffc], 1 ; add byte ptr [rax], al ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x00000000004443ab : add byte ptr [rbx + rdx*4], al ; std ; call qword ptr [rax]
0x00000000004470df : add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000040e541 : add byte ptr [rbx - 0x14fe0bbb], al ; xchg eax, esp ; nop ; leave ; ret
0x0000000000444ab3 : add byte ptr [rbx - 0x1f00018b], ah ; add dword ptr [rax], 0 ; retf -0x18b ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ad9 ; jmp qword ptr [rax]
0x0000000000443803 : add byte ptr [rbx - 0x2f0003ba], dh ; xor eax, 0x46e10000 ; cld ; push rax ; xor eax, 0x46f00000 ; cld ; call qword ptr [rax]
0x000000000040b6b6 : add byte ptr [rbx - 0x3d76fe10], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b728 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b728 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b77c : add byte ptr [rbx - 0x3d76fe10], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041daff : add byte ptr [rbx - 0x3f7bfe10], al ; je 0x41dba7 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000444d13 : add byte ptr [rbx - 0x4f00017b], ah ; lea eax, dword ptr [rax] ; add dl, cl ; test edi, esi ; call rax
0x0000000000444ae3 : add byte ptr [rbx - 0x5f00018a], dl ; test byte ptr [rax], al ; add byte ptr [rdx - 0x3f00018a], bh ; test byte ptr [rax], al ; add dh, dl ; jbe 0x444b09 ; jmp rax
0x0000000000444503 : add byte ptr [rbx - 0x63], bh ; std ; lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x0000000000444dc3 : add byte ptr [rbx - 0x6f000176], ah ; nop ; add byte ptr [rax], al ; retf -0x176 ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x00000000004058ec : add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000412b3c : add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000418ebe : add byte ptr [rbx - 0x74b717bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000041dea7 : add byte ptr [rbx - 0x74b71bbb], cl ; add al, 0xc5 ; call 0xffffffffff42227f
0x0000000000419022 : add byte ptr [rbx - 0x74b71bbb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x000000000042725f : add byte ptr [rbx - 0x77cf3c0], cl ; add al, 0x77 ; mov rax, r8 ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x0000000000424984 : add byte ptr [rbx - 0x8343], al ; inc dword ptr [rbx] ; jg 0x4249ff ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249c2
0x00000000004249de : add byte ptr [rbx - 0x8743], al ; inc dword ptr [rbx] ; jg 0x424a59 ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a1c
0x0000000000424a38 : add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424ab3 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a76
0x0000000000424a92 : add byte ptr [rbx - 0x8f43], al ; inc dword ptr [rbx] ; jg 0x424b0d ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ad0
0x000000000044ba77 : add byte ptr [rbx - 0xe], ah ; std ; jmp qword ptr [rsi]
0x000000000044ba17 : add byte ptr [rbx - 0xe], cl ; std ; jmp qword ptr [rsi]
0x0000000000444d6b : add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x0000000000448e07 : add byte ptr [rbx], al ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x0000000000443e6b : add byte ptr [rbx], al ; iretd ; cld ; push rax ; add byte ptr [r8], r8b ; xor bh, cl ; cld ; call qword ptr [rax]
0x000000000044b8f7 : add byte ptr [rbx], al ; std ; jmp qword ptr [rsi]
0x000000000044b957 : add byte ptr [rbx], bl ; std ; jmp qword ptr [rsi]
0x0000000000443578 : add byte ptr [rbx], ch ; add byte ptr [rax], al ; sub edi, esp ; jmp qword ptr [rax]
0x00000000004438f3 : add byte ptr [rbx], cl ; cld ; inc eax ; cmp dword ptr [rax], eax ; add byte ptr [rsi], ah ; cld ; jmp rax
0x000000000044c487 : add byte ptr [rbx], cl ; cli ; std ; jmp qword ptr [rsi]
0x0000000000444afb : add byte ptr [rbx], cl ; ja 0x444b09 ; inc dword ptr [rax] ; test dword ptr [rax], eax ; add byte ptr [rdx], dh ; ja 0x444b11 ; jmp qword ptr [rax]
0x0000000000443c2b : add byte ptr [rbx], cl ; scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000040099f : add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000446237 : add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x000000000044b9b7 : add byte ptr [rbx], dh ; std ; jmp qword ptr [rsi]
0x00000000004500fe : add byte ptr [rcx + 0x11ab0503], al ; add byte ptr [rax + 0x11bf0503], dl ; add dl, dl ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004437bb : add byte ptr [rcx + 0x45], ah ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000044394b : add byte ptr [rcx + 0x4d], ah ; cld ; jmp qword ptr [rax]
0x0000000000443a2b : add byte ptr [rcx + 0x53], ah ; cld ; push qword ptr [rax - 0x43ffffc2] ; push rbx ; cld ; call rax
0x0000000000443a83 : add byte ptr [rcx + 0x55], dh ; cld ; jmp qword ptr [rax]
0x000000000041d809 : add byte ptr [rcx + 0x5d901042], cl ; ret
0x000000000044a338 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add ah, ah ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x3a00004a ; std ; call qword ptr [rdx]
0x000000000044a060 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add bl, dl ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x000000000044a120 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add cl, byte ptr [rbx + 0x8070c] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x00000000004475a8 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dl, byte ptr [rbx + 0x8070c] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x0000000000447df8 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 0x72 ; or al, 7 ; or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; jl 0x447e6e ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000446c78 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b78 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x0000000000446498 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000446650 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf50 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c660 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044c230 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x000000000044c0c0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044c3a0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004462a0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044a77c : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004498e4 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x000000000044a200 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 3 ; movabs al, byte ptr [0x8070c07] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000044e744 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 3 ; ret 0xc02
0x0000000000445ad8 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add ebx, dword ptr [rsi + 0x8070c01] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x00000000004475c8 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add ecx, dword ptr [rsi + 0x8070c01] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x0000000000445920 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add edi, dword ptr [rcx + 0x8070c02] ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x000000000044a160 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add edx, dword ptr [rax] ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x0000000000447b00 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add esi, ebx ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x0000000000445a30 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; movsd dword ptr [rdi], dword ptr [rsi] ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a52c : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x00000000004481e8 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; imul ecx, dword ptr [rdi + rax], 8 ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x44821a ; call rdx
0x000000000044c8a0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x0000000000446378 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x00000000004492e0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x000000000044c470 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x00000000004485e8 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5c0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x000000000044c730 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x000000000044c020 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044c300 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044beb0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000044ce68 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ceaa ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493e0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3e0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d422 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a30 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf30 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468c8 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044cda0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044cff8 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x00000000004470c0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x0000000000448e0c : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x0000000000449754 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x0000000000446478 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000448390 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483c2 ; call qword ptr [rdx]
0x00000000004493a0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044a358 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x0000000000448270 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000446d60 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000044d468 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4ba ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000449df0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x449e66 ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x0000000000447e38 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e8a ; jmp qword ptr [rip]
0x000000000044ef38 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef6c ; call qword ptr [rbx]
0x0000000000446d20 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x0000000000449488 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x44947d ; cld ; jmp qword ptr [rbx]
0x000000000044a880 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a885 ; std ; jmp qword ptr [rsi]
0x000000000044a7c0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000447e18 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044a800 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044d488 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044d4a8 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044cd80 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdd9 ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493c0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3c0 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; jnp 0x44d41a ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d442 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004468a8 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000446a10 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf10 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf6a ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000447d38 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d6a ; jmp qword ptr [rdx]
0x0000000000447608 : add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x000000000044a77b : add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004498e3 : add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x000000000044e743 : add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 3 ; ret 0xc02
0x000000000044a52b : add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000448e0b : add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x0000000000449753 : add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x0000000000445a4b : add byte ptr [rcx + rax - 0xa240000], bh ; sti ; jmp qword ptr [rsi]
0x0000000000443b73 : add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443533 : add byte ptr [rcx + rbp + 0x29f0fffc], dl ; add byte ptr [rax], al ; mov al, 0x29 ; cld ; call qword ptr [rax]
0x000000000044c24b : add byte ptr [rcx + rbp*2 - 0x7e60000], bh ; std ; call qword ptr [rcx]
0x0000000000445937 : add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x00000000004475ff : add byte ptr [rcx + rbx - 4], dl ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000446233 : add byte ptr [rcx + rcx + 0xa330000], ah ; cld ; jmp qword ptr [rsi]
0x000000000044a21b : add byte ptr [rcx + rcx*2 + 0x42380000], cl ; std ; jmp qword ptr [rsi]
0x000000000044a23b : add byte ptr [rcx + rcx*2 + 0x423e0000], ch ; std ; jmp qword ptr [rax]
0x000000000044a36f : add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x0000000000437ddf : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004461b3 : add byte ptr [rcx + rcx], ah ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x000000000044922b : add byte ptr [rcx + rdi - 0x40780000], bl ; cld ; call qword ptr [rcx]
0x000000000044a777 : add byte ptr [rcx + rdi], al ; std ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000446a23 : add byte ptr [rcx + rdx + 0x10d20000], dl ; cld ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x0000000000446a4b : add byte ptr [rcx + rdx + 0x11020000], bh ; cld ; jmp qword ptr [rdx]
0x000000000044aae7 : add byte ptr [rcx + rdx*8 - 3], cl ; jmp qword ptr [rip]
0x0000000000449d67 : add byte ptr [rcx + rsi - 3], cl ; jmp qword ptr [rdx]
0x0000000000443c5b : add byte ptr [rcx + rsi*4 - 4], bl ; inc eax ; add byte ptr [r8], r8b ; sub al, 0xb2 ; cld ; jmp rax
0x00000000004492f7 : add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x0000000000445643 : add byte ptr [rcx - 0x4f00012e], ch ; mov ah, 0 ; add byte ptr [rsi - 0x2f00012e], bh ; mov bl, 0 ; add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x000000000044ba13 : add byte ptr [rcx - 0xdb50000], al ; std ; jmp qword ptr [rsi]
0x000000000044c8b7 : add byte ptr [rcx - 3], cl ; std ; jmp qword ptr [rsi]
0x0000000000443933 : add byte ptr [rcx*2 + 0x3ac0fffc], ah ; add byte ptr [rax], al ; xor byte ptr [rbp - 4], cl ; jmp rax
0x000000000042743c : add byte ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000044b9b3 : add byte ptr [rcx], ah ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x0000000000431645 : add byte ptr [rcx], al ; add bl, dh ; mulps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431671 : add byte ptr [rcx], al ; add bl, dh ; mulps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431623 : add byte ptr [rcx], al ; add byte ptr [rdi], cl ; push rdi ; ror dword ptr [rax - 0x75], 0x55 ; clc ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000445897 : add byte ptr [rcx], al ; jp 0x445931 ; add byte ptr [rcx], al ; js 0x4458f3 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458ce ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44591a ; jmp rcx
0x000000000044589b : add byte ptr [rcx], al ; js 0x4458ef ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458ca ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445916 ; jmp rcx
0x0000000000445523 : add byte ptr [rcx], al ; mov cl, 0xfe ; ljmp ptr [rax + 0x4d0000ae] ; mov cl, 0xfe ; call rax
0x000000000040b5f4 : add byte ptr [rcx], al ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b605 : add byte ptr [rcx], al ; nop ; pop rbp ; ret
0x0000000000448d37 : add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x0000000000403c98 : add byte ptr [rcx], al ; ret
0x00000000004438c8 : add byte ptr [rcx], bh ; add byte ptr [rax], al ; sahf ; cld ; jmp qword ptr [rax]
0x000000000044c747 : add byte ptr [rcx], bh ; cld ; std ; jmp qword ptr [rsi]
0x000000000043724f : add byte ptr [rcx], bh ; ret 0x5a75
0x0000000000449c5f : add byte ptr [rcx], bh ; xor ebp, edi ; jmp qword ptr [rsi]
0x000000000040b756 : add byte ptr [rcx], bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x00000000004437b3 : add byte ptr [rcx], ch ; cld ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004044f7 : add byte ptr [rcx], ch ; ret 0xd089
0x000000000044c5d7 : add byte ptr [rcx], ch ; sti ; std ; jmp qword ptr [rsi]
0x0000000000427be0 : add byte ptr [rcx], dl ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000443413 : add byte ptr [rdi + 0xfffc0b], dh ; and eax, 0xbd60000 ; cld ; jmp qword ptr [rax]
0x000000000044477b : add byte ptr [rdi + rax*2 + 0x7670fffe], ch ; add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x000000000044974f : add byte ptr [rdi + rax*2], al ; hlt ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000044882b : add byte ptr [rdi + rbp - 0x7c460000], bl ; cld ; jmp qword ptr [rsi]
0x000000000044c7eb : add byte ptr [rdi + rbp*2], bl ; add byte ptr [rax - 4], ch ; std ; call qword ptr [rcx]
0x000000000044b833 : add byte ptr [rdi + rbx*2 - 0xe2d0000], ah ; std ; jmp qword ptr [rsi]
0x000000000044a833 : add byte ptr [rdi + rcx*2 - 0x2f880000], ah ; std ; jmp qword ptr [rax]
0x000000000044a813 : add byte ptr [rdi + rcx*2 - 0x2f8e0000], al ; std ; jmp qword ptr [rsi]
0x000000000044a7b3 : add byte ptr [rdi + rcx*2], ah ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a7f3 : add byte ptr [rdi + rcx*2], ah ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rax]
0x000000000044a7d3 : add byte ptr [rdi + rcx*2], al ; add byte ptr [rax + rdx*8 - 3], ch ; jmp qword ptr [rsi]
0x000000000044a793 : add byte ptr [rdi + rcx*2], al ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000445d47 : add byte ptr [rdi + rdi*8 - 5], bl ; jmp qword ptr [rsi]
0x0000000000443bfb : add byte ptr [rdi + rdx*4 - 4], bl ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000444133 : add byte ptr [rdi + rdx], ch ; std ; jmp qword ptr [rax + 0x5200005b]
0x000000000044d013 : add byte ptr [rdi + rsi*2 - 0x2a20000], al ; std ; jmp qword ptr [rdx]
0x00000000004445cb : add byte ptr [rdi + rsi*4 - 3], bl ; call qword ptr [rax]
0x000000000044378b : add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000044408b : add byte ptr [rdi - 0x23], al ; cld ; jmp qword ptr [rax + 0x55000058]
0x00000000004491a7 : add byte ptr [rdi - 0x41], dl ; cld ; jmp qword ptr [rsi]
0x000000000044c033 : add byte ptr [rdi - 0x9250000], ah ; std ; jmp qword ptr [rsi]
0x0000000000445aaf : add byte ptr [rdi - 0xb], ah ; sti ; call qword ptr [rip]
0x0000000000449b0f : add byte ptr [rdi], ah ; xor ch, bh ; jmp qword ptr [rsi]
0x0000000000443c00 : add byte ptr [rdi], al ; add byte ptr [rbx + rbx*4 - 4], dl ; jmp qword ptr [rax]
0x000000000044a51f : add byte ptr [rdi], bh ; pop rdx ; std ; lcall ptr [rcx + rax] ; add byte ptr [rax], al ; add al, 0 ; clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x00000000004458c4 : add byte ptr [rdi], bh ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458ed ; jmp rcx
0x0000000000447fab : add byte ptr [rdi], bl ; add byte ptr [rax], al ; pop rsi ; js 0x447fb7 ; call qword ptr [rdx]
0x000000000044344b : add byte ptr [rdi], bl ; sbb ah, bh ; call qword ptr [rax]
0x00000000004444fb : add byte ptr [rdi], ch ; popfq ; std ; push qword ptr [rax + 0x6b] ; add byte ptr [rax], al ; jnp 0x4444bf ; std ; lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x00000000004042a5 : add byte ptr [rdi], cl ; mov dh, 0x45 ; ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x4042a4 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000404676 : add byte ptr [rdi], cl ; mov dh, 5 ; ret 0x24ce
0x0000000000420d3d : add byte ptr [rdi], cl ; mov esi, 0x20e883c0 ; cmp eax, 0x5c ; ja 0x423d26 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x000000000042447c : add byte ptr [rdi], cl ; mov esi, 0x21e883c0 ; cmp eax, 0x5d ; ja 0x424b3f ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x000000000043074d : add byte ptr [rdi], cl ; mov esi, 0xbfc689c0 ; adc byte ptr [rsi], 0x65 ; add al, ch ; ret
0x000000000040ba48 : add byte ptr [rdi], cl ; push rdi ; ret
0x000000000041dcb7 : add byte ptr [rdi], cl ; push rdi ; ret 0x2e0f
0x000000000040b9f9 : add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x000000000041bda2 : add byte ptr [rdi], cl ; push rdi ; ret 0xff3
0x000000000040bb76 : add byte ptr [rdi], cl ; push rdi ; ror dword ptr [rax - 0x75], 0x45 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040bbb0 : add byte ptr [rdi], cl ; push rdi ; ror dword ptr [rax - 0x75], 0x45 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000431625 : add byte ptr [rdi], cl ; push rdi ; ror dword ptr [rax - 0x75], 0x55 ; clc ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040c986 : add byte ptr [rdi], cl ; push rdi ; ror dword ptr [rdi], 0x28 ; retf ; call 0x403960
0x000000000040917f : add byte ptr [rdi], cl ; ret 0xd76
0x0000000000409283 : add byte ptr [rdi], cl ; ret 0xe76
0x00000000004441b3 : add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444207 ; std ; call qword ptr [rax]
0x0000000000412068 : add byte ptr [rdi], cl ; sub al, cl ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e365
0x000000000040c96c : add byte ptr [rdi], cl ; sub cl, bl ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40397a
0x000000000040c952 : add byte ptr [rdi], cl ; sub cl, dl ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403994
0x00000000004375ec : add byte ptr [rdi], dl ; add byte ptr [rax], al ; call 0x403866
0x0000000000446d37 : add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x0000000000446d77 : add byte ptr [rdx + 0x12], dl ; cld ; jmp qword ptr [rbx]
0x000000000044418b : add byte ptr [rdx + 0x19], ch ; std ; dec dword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; push rsi ; sbb al, 0xfd ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x44422f ; std ; call qword ptr [rax]
0x000000000044352b : add byte ptr [rdx + 0x29], ch ; cld ; call rax
0x000000000044370b : add byte ptr [rdx + 0x3e], ch ; cld ; push qword ptr [rax - 0x77ffffcf] ; cld ; call rax
0x000000000045021c : add byte ptr [rdx + 0x513], dl ; ret
0x0000000000447b13 : add byte ptr [rdx + 0x542c0000], al ; cld ; call rax
0x0000000000443a7b : add byte ptr [rdx + 0x55], ah ; cld ; inc dword ptr [rax] ; add byte ptr [rax], al ; jno 0x443ae7 ; cld ; jmp qword ptr [rax]
0x00000000004448eb : add byte ptr [rdx + 0x68fffe52], al ; jl 0x44490f ; add byte ptr [rdx + rdx*2 + 0x7c88fffe], ch ; add byte ptr [rax], al ; enter -0x1ae, -1 ; test al, 0x7c ; add byte ptr [rax], al ; cmp dl, byte ptr [rbx - 2] ; call rax
0x0000000000447e4f : add byte ptr [rdx + 0x77], dh ; cld ; jmp qword ptr [rip]
0x00000000004462bf : add byte ptr [rdx + 0xa], ch ; cld ; call qword ptr [rcx]
0x000000000044a27f : add byte ptr [rdx + rax*2 - 3], al ; jmp qword ptr [rax]
0x0000000000449b0b : add byte ptr [rdx + rax*2], bh ; add byte ptr [rdi], ah ; xor ch, bh ; jmp qword ptr [rsi]
0x0000000000448557 : add byte ptr [rdx + rax*4], bh ; cld ; call qword ptr [rcx]
0x0000000000445aeb : add byte ptr [rdx + rax], bl ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x0000000000445aab : add byte ptr [rdx + rax], bl ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x0000000000448323 : add byte ptr [rdx + rbp + 0x7e990000], dl ; cld ; jmp qword ptr [rsi]
0x000000000044c313 : add byte ptr [rdx + rbp*2 - 0x7050000], al ; std ; jmp qword ptr [rsi]
0x000000000044a34b : add byte ptr [rdx + rcx*2 + 0x493a0000], bh ; std ; call qword ptr [rdx]
0x00000000004462bb : add byte ptr [rdx + rcx], ch ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044d333 : add byte ptr [rdx + rdi*2 - 0x1c20000], ah ; std ; jmp qword ptr [rdx]
0x00000000004492f3 : add byte ptr [rdx + rdi], ah ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x00000000004448f3 : add byte ptr [rdx + rdx*2 + 0x7c88fffe], ch ; add byte ptr [rax], al ; enter -0x1ae, -1 ; test al, 0x7c ; add byte ptr [rax], al ; cmp dl, byte ptr [rbx - 2] ; call rax
0x000000000044ab43 : add byte ptr [rdx + rdx*2 - 0x2ea20000], dh ; std ; jmp qword ptr [rax]
0x000000000044ab23 : add byte ptr [rdx + rdx*2 - 0x2ea80000], dl ; std ; jmp qword ptr [rsi]
0x000000000044ab03 : add byte ptr [rdx + rdx*2], dh ; add byte ptr [rdx - 0x2f], dl ; std ; jmp qword ptr [rip]
0x000000000044aae3 : add byte ptr [rdx + rdx*2], dl ; add byte ptr [rcx + rdx*8 - 3], cl ; jmp qword ptr [rip]
0x000000000044439b : add byte ptr [rdx + rdx*4 + 0x65c8fffd], al ; add byte ptr [rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044438b : add byte ptr [rdx + rdx*4 - 3], cl ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444383 : add byte ptr [rdx + rdx*4], ch ; std ; ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000448b4b : add byte ptr [rdx + rsi - 0x7c580000], bh ; cld ; jmp qword ptr [rbx]
0x0000000000443c63 : add byte ptr [rdx + rsi*4], ch ; cld ; jmp rax
0x0000000000443bf3 : add byte ptr [rdx - 0x1f00036a], cl ; add byte ptr [rax], r8b ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x000000000044ab07 : add byte ptr [rdx - 0x2f], dl ; std ; jmp qword ptr [rip]
0x000000000044a7f7 : add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rax]
0x000000000044a817 : add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x0000000000443e23 : add byte ptr [rdx - 0x33], al ; cld ; call rax
0x0000000000444aeb : add byte ptr [rdx - 0x3f00018a], bh ; test byte ptr [rax], al ; add dh, dl ; jbe 0x444b01 ; jmp rax
0x0000000000444613 : add byte ptr [rdx - 0x3f], al ; std ; inc dword ptr [rax + 0x70] ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000443563 : add byte ptr [rdx - 0x470003d6], ah ; sub al, byte ptr [rax] ; add byte ptr [rsi - 0x270003d6], bh ; sub al, byte ptr [rax] ; add byte ptr [rax], dh ; sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x000000000044457b : add byte ptr [rdx - 0x5a], bh ; std ; inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x0000000000444493 : add byte ptr [rdx - 0x65], al ; std ; call rax
0x000000000044449b : add byte ptr [rdx - 0x65], dl ; std ; push rax ; imul eax, dword ptr [rax], 0xfd9b5e00 ; call qword ptr [rax]
0x0000000000438b9f : add byte ptr [rdx - 0x760002c0], bh ; ret
0x000000000044976f : add byte ptr [rdx - 0xb], bh ; cld ; call rcx
0x0000000000445d67 : add byte ptr [rdx - 1], ah ; sti ; jmp qword ptr [rax]
0x00000000004438b3 : add byte ptr [rdx], ah ; cld ; inc eax ; cmp byte ptr [rax], al ; add byte ptr [rbx + rcx*2 - 4], cl ; jmp rax
0x0000000000444b33 : add byte ptr [rdx], ah ; js 0x444b39 ; jmp rax
0x0000000000446a4f : add byte ptr [rdx], al ; adc esp, edi ; jmp qword ptr [rdx]
0x00000000004444d3 : add byte ptr [rdx], al ; pushfq ; std ; call rax
0x0000000000443908 : add byte ptr [rdx], bh ; add byte ptr [rax], al ; cld ; jmp qword ptr [rax]
0x000000000044a34f : add byte ptr [rdx], bh ; std ; call qword ptr [rdx]
0x0000000000444233 : add byte ptr [rdx], bl ; and ch, bh ; inc eax ; pop rdi ; add byte ptr [rax], al ; xor al, 0x20 ; std ; jmp rax
0x000000000044c24f : add byte ptr [rdx], bl ; clc ; std ; call qword ptr [rcx]
0x0000000000443d1b : add byte ptr [rdx], bl ; ret 0xfffc
0x000000000044565b : add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x000000000044362b : add byte ptr [rdx], ch ; cmp ah, bh ; inc dword ptr [rax] ; add byte ptr cs:[rax], al ; cmp spl, r15b ; jmp qword ptr [rax]
0x000000000044ef07 : add byte ptr [rdx], ch ; jl 0x44ef0d ; call rsp
0x000000000044c3bf : add byte ptr [rdx], ch ; stc ; std ; call qword ptr [rcx]
0x000000000044c0df : add byte ptr [rdx], cl ; idiv ebp ; call qword ptr [rcx]
0x0000000000444b83 : add byte ptr [rdx], cl ; jp 0x444b89 ; jmp qword ptr [rax]
0x0000000000444b03 : add byte ptr [rdx], dh ; ja 0x444b09 ; jmp qword ptr [rax]
0x0000000000443523 : add byte ptr [rdx], dh ; sub esp, edi ; push qword ptr [rax + 0x6a000029] ; sub esp, edi ; call rax
0x00000000004009a3 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400aab : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400adb : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000040098b : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400973 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400ac3 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000044777f : add byte ptr [rdx], dl ; insb byte ptr [rdi], dx ; cld ; call qword ptr [rdi]
0x000000000040b748 : add byte ptr [rip + 0x48000000], al ; mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000443418 : add byte ptr [rip + 0xbd60000], ah ; cld ; jmp qword ptr [rax]
0x0000000000406b78 : add byte ptr [rip - 0x36700000], cl ; ret
0x00000000004439eb : add byte ptr [rip - 0x4f0003af], bh ; cmp eax, 0x51e40000 ; cld ; call rax
0x00000000004500ed : add byte ptr [rsi + 0x118e0502], al ; add byte ptr [rbp + 0x1b02], ch ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000400987 : add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004475df : add byte ptr [rsi + 0x19], cl ; cld ; jmp qword ptr [rsi]
0x0000000000444193 : add byte ptr [rsi + 0x1c], dl ; std ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444227 ; std ; call qword ptr [rax]
0x00000000004441c3 : add byte ptr [rsi + 0x1d], ch ; std ; push rax ; pop rbp ; add byte ptr [rax], al ; jl 0x4441f7 ; std ; call qword ptr [rax]
0x0000000000449e07 : add byte ptr [rsi + 0x31], al ; std ; jmp qword ptr [rbx]
0x000000000044a077 : add byte ptr [rsi + 0x34], cl ; std ; jmp rdx
0x0000000000443633 : add byte ptr [rsi + 0x38], al ; cld ; jmp qword ptr [rax]
0x000000000044390b : add byte ptr [rsi + 0x4c], cl ; cld ; jmp qword ptr [rax]
0x0000000000403c3f : add byte ptr [rsi + 0x651560], bh ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cac ; mov eax, 0 ; test rax, rax ; je 0x403cac ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x00000000004441a3 : add byte ptr [rsi + 0x70fffd1c], bh ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444217 ; std ; call qword ptr [rax]
0x0000000000447faf : add byte ptr [rsi + 0x78], bl ; cld ; call qword ptr [rdx]
0x000000000043209d : add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rax - 0x77], 0xdf ; call 0x40e358
0x000000000041d712 : add byte ptr [rsi + 0xf], bh ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x0000000000443db3 : add byte ptr [rsi + 0xfffcc5], bh ; add byte ptr [r8], r8b ; fadd st(5), st(0) ; cld ; jmp qword ptr [rax]
0x00000000004437f3 : add byte ptr [rsi + rax*2 + 0x3590fffc], cl ; add byte ptr [rax], al ; test al, 0x46 ; cld ; push qword ptr [rax - 0x4cffffcb] ; cld ; call rax
0x0000000000444333 : add byte ptr [rsi + rax*4 - 3], ah ; inc dword ptr [rax - 0x17ffff9c] ; mov bh, ch ; jmp qword ptr [rax - 0x4effff9c]
0x000000000044c743 : add byte ptr [rsi + rbp*2 - 0x3c70000], dh ; std ; jmp qword ptr [rsi]
0x0000000000444513 : add byte ptr [rsi + rbx*4], al ; std ; jmp rax
0x000000000044e713 : add byte ptr [rsi + rcx*4 - 0x72740000], al ; std ; call qword ptr [rip]
0x0000000000443b53 : add byte ptr [rsi + rdi*2 + 0x43f8fffc], bl ; add byte ptr [rax], al ; sbb byte ptr [rax + 0x4420fffc], al ; add byte ptr [rax], al ; jle 0x443b32 ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x000000000044d47f : add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044d45f : add byte ptr [rsi + rdi*8 + 0xffffd], dl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4c3 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044eebb : add byte ptr [rsi + rdx*4], ch ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x000000000044ef03 : add byte ptr [rsi + rdx*4], dh ; add byte ptr [rdx], ch ; jl 0x44ef11 ; call rsp
0x0000000000443f1b : add byte ptr [rsi + rdx*8 - 4], dl ; call rax
0x0000000000446ed3 : add byte ptr [rsi + rdx], al ; add byte ptr [rax + 0x12], cl ; cld ; jmp qword ptr [rbx]
0x000000000044cf4b : add byte ptr [rsi + rsi*2 - 0x2da0000], bh ; std ; jmp qword ptr [rdx]
0x000000000044cf23 : add byte ptr [rsi + rsi*2 - 0x30b0000], dl ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000444d5b : add byte ptr [rsi - 0x1f000179], bh ; mov es, word ptr [rax] ; add cl, dh ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x0000000000444b73 : add byte ptr [rsi - 0x1f000187], cl ; xchg byte ptr [rax], al ; add ah, cl ; jns 0x444b91 ; inc dword ptr [rax] ; xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444b99 ; jmp qword ptr [rax]
0x000000000044356b : add byte ptr [rsi - 0x270003d6], bh ; sub al, byte ptr [rax] ; add byte ptr [rax], dh ; sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000443f5b : add byte ptr [rsi - 0x29], ah ; cld ; call rax
0x000000000044564b : add byte ptr [rsi - 0x2f00012e], bh ; mov bl, 0 ; add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x000000000044ab47 : add byte ptr [rsi - 0x2f], bl ; std ; jmp qword ptr [rax]
0x000000000044a797 : add byte ptr [rsi - 0x30], ah ; std ; jmp qword ptr [rsi]
0x000000000044a877 : add byte ptr [rsi - 0x30], bh ; std ; jmp qword ptr [rax]
0x000000000044a897 : add byte ptr [rsi - 0x30], bh ; std ; jmp qword ptr [rsi]
0x0000000000443e63 : add byte ptr [rsi - 0x32], dh ; cld ; call rax
0x0000000000443e53 : add byte ptr [rsi - 0x32], dl ; cld ; call qword ptr [rax + 0x6400004f]
0x0000000000444623 : add byte ptr [rsi - 0x3e], bl ; std ; inc dword ptr [rax - 0x77ffff90] ; ret 0xfffd
0x000000000044949f : add byte ptr [rsi - 0x40], dh ; cld ; jmp qword ptr [rbx]
0x0000000000444583 : add byte ptr [rsi - 0x59], ah ; std ; jmp rax
0x00000000004444a3 : add byte ptr [rsi - 0x65], bl ; std ; call qword ptr [rax]
0x000000000044355b : add byte ptr [rsi - 0x670003d6], al ; sub al, byte ptr [rax] ; add byte ptr [rdx - 0x470003d6], ah ; sub al, byte ptr [rax] ; add byte ptr [rsi - 0x270003d6], bh ; sub al, byte ptr [rax] ; add byte ptr [rax], dh ; sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000443b63 : add byte ptr [rsi - 0x80], bh ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x000000000044d3ff : add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044d017 : add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x000000000044cdbb : add byte ptr [rsi*2 - 0x35a0000], ch ; std ; jmp qword ptr [rdx]
0x000000000044cd93 : add byte ptr [rsi*2 - 0x38b0000], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000407a90 : add byte ptr [rsi], 0 ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x00000000004438fb : add byte ptr [rsi], ah ; cld ; jmp rax
0x000000000044e77f : add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x000000000044cf4f : add byte ptr [rsi], ah ; std ; std ; jmp qword ptr [rdx]
0x0000000000443bc0 : add byte ptr [rsi], al ; add byte ptr [rax], bl ; mov edi, esp ; jmp qword ptr [rax]
0x00000000004455a3 : add byte ptr [rsi], al ; mov dh, 0xfe ; jmp qword ptr [rax]
0x0000000000445653 : add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x000000000044437b : add byte ptr [rsi], al ; xchg eax, edx ; std ; dec dword ptr [rax + 0x65] ; add byte ptr [rax], al ; sub al, 0x92 ; std ; ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000447ecb : add byte ptr [rsi], bh ; add byte ptr [rax], al ; mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x000000000044a177 : add byte ptr [rsi], bh ; cmp ch, bh ; call qword ptr [rdx]
0x000000000044a23f : add byte ptr [rsi], bh ; std ; jmp qword ptr [rax]
0x000000000044a25f : add byte ptr [rsi], bh ; std ; jmp qword ptr [rsi]
0x000000000044357b : add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000443f53 : add byte ptr [rsi], bh ; xlatb ; cld ; push qword ptr [rax + 0x66000053] ; xlatb ; cld ; call rax
0x0000000000443630 : add byte ptr [rsi], ch ; add byte ptr [rax], al ; cmp spl, r15b ; jmp qword ptr [rax]
0x0000000000444de3 : add byte ptr [rsi], ch ; mov edi, esi ; call qword ptr [rax]
0x00000000004458b8 : add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458f9 ; jmp rcx
0x000000000044bec3 : add byte ptr [rsi], dh ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x00000000004441bb : add byte ptr [rsi], dh ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x4441ff ; std ; call qword ptr [rax]
0x000000000044366b : add byte ptr [rsi], dl ; cmp bh, ah ; call qword ptr [rax]
0x0000000000447d4b : add byte ptr [rsp + 0x77480000], bh ; cld ; jmp qword ptr [rdx]
0x0000000000445d43 : add byte ptr [rsp + rax - 0xa40000], dh ; sti ; jmp qword ptr [rsi]
0x00000000004446db : add byte ptr [rsp + rax*2 - 2], dl ; jmp rax
0x00000000004498ff : add byte ptr [rsp + rbp - 3], dl ; jmp qword ptr [rip]
0x00000000004444db : add byte ptr [rsp + rbx*4 - 3], al ; push rax ; push 0 ; add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x000000000044406b : add byte ptr [rsp + rbx*8 - 4], bl ; jmp qword ptr [rax]
0x0000000000443903 : add byte ptr [rsp + rcx*2], dh ; cld ; inc dword ptr [rax] ; cmp al, byte ptr [rax] ; add byte ptr [rsi + 0x4c], cl ; cld ; jmp qword ptr [rax]
0x00000000004464b3 : add byte ptr [rsp + rcx], ah ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x000000000044d53b : add byte ptr [rsp + rdi*2 - 0x1640000], ch ; std ; jmp qword ptr [rbx]
0x000000000044d51b : add byte ptr [rsp + rdi*2 - 0x1680000], cl ; std ; jmp qword ptr [rbx]
0x0000000000444be3 : add byte ptr [rsp + rdi*2 - 0x77470002], cl ; add byte ptr [rax], al ; push rsi ; jge 0x444bf9 ; jmp rax
0x000000000044d4bb : add byte ptr [rsp + rdi*2], ch ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044d49b : add byte ptr [rsp + rdi*2], cl ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044949b : add byte ptr [rsp + rdi], cl ; add byte ptr [rax], al ; jbe 0x44946a ; cld ; jmp qword ptr [rbx]
0x0000000000446d33 : add byte ptr [rsp + rdx + 0x12620000], ah ; cld ; jmp qword ptr [rbx]
0x0000000000447b17 : add byte ptr [rsp + rdx*2], ch ; cld ; call rax
0x0000000000446c93 : add byte ptr [rsp + rdx], al ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000448d33 : add byte ptr [rsp + rsi + 0x56010000], ah ; cld ; call qword ptr [rip]
0x0000000000448e23 : add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x0000000000448dfb : add byte ptr [rsp + rsi - 0x79080000], al ; cld ; call rbx
0x0000000000443631 : add byte ptr cs:[rax], al ; cmp spl, r15b ; jmp qword ptr [rax]
0x0000000000438b9e : add byte ptr cs:[rdx - 0x760002c0], bh ; ret
0x000000000043194c : add byte ptr ds:[rax], al ; add bl, ch ; xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000443a41 : add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x0000000000443a31 : add byte ptr ds:[rax], al ; mov esp, 0xd0fffc53 ; add byte ptr ds:[rax], al ; retf -0x3ad ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x0000000000443a39 : add byte ptr ds:[rax], al ; retf -0x3ad ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x0000000000447ecd : add byte ptr es:[rax], al ; mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x0000000000428444 : add byte ptr es:[rax], al ; nop ; leave ; ret
0x000000000044a7f4 : add byte ptr fs:[r8], r8b ; jb 0x44a7d1 ; std ; jmp qword ptr [rax]
0x000000000044bd75 : add byte ptr fs:[rax], al ; ret 0xfdf4
0x0000000000444331 : add byte ptr fs:[rax], al ; xchg ch, bh ; inc dword ptr [rax - 0x17ffff9c] ; mov bh, ch ; jmp qword ptr [rax - 0x4effff9c]
0x0000000000403c4b : add byte ptr gs:[rax - 0x3f], cl ; inc byte ptr [rbx] ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403ca0 ; mov eax, 0 ; test rax, rax ; je 0x403ca0 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x00000000004443a9 : add byte ptr gs:[rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044a774 : add byte ptr gs:[rax], al ; add byte ptr [rcx + rdi], al ; std ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004443a1 : add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444391 : add byte ptr gs:[rax], al ; push -0x5700026e ; add byte ptr gs:[rax], al ; test byte ptr [rdx + 0x65c8fffd], dl ; add byte ptr [rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444381 : add byte ptr gs:[rax], al ; sub al, 0x92 ; std ; ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444399 : add byte ptr gs:[rax], al ; test byte ptr [rdx + 0x65c8fffd], dl ; add byte ptr [rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444389 : add byte ptr gs:[rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000403c03 : add byte ptr gs:[rbp + 0x48], dl ; sub eax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c52 ; mov eax, 0 ; test rax, rax ; je 0x403c52 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c43 : add byte ptr gs:[rbp + 0x48], dl ; sub esi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403ca8 ; mov eax, 0 ; test rax, rax ; je 0x403ca8 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x000000000044553b : add ch, ah ; mov cl, 0xfe ; jmp qword ptr [rax]
0x000000000040096f : add ch, ah ; or al, byte ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000443793 : add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000044556b : add ch, al ; mov bl, 0xfe ; call qword ptr [rax]
0x00000000004461b7 : add ch, bh ; or esp, edi ; jmp qword ptr [rsi]
0x000000000041da52 : add ch, bl ; adc cl, byte ptr [rax - 0x75] ; clc ; movss xmm0, dword ptr [rax + 0x38] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000040b601 : add ch, byte ptr [rcx + rax] ; add byte ptr [rcx], al ; nop ; pop rbp ; ret
0x00000000004500f8 : add ch, ch ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044cf27 : add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044559b : add ch, dl ; mov ch, 0xfe ; inc dword ptr [rax] ; mov cl, 0 ; add byte ptr [rsi], al ; mov dh, 0xfe ; jmp qword ptr [rax]
0x000000000045010f : add cl, ah ; add eax, dword ptr [rip - 0xffed7c] ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044380b : add cl, ah ; cld ; push rax ; xor eax, 0x46f00000 ; cld ; call qword ptr [rax]
0x000000000040b5d7 : add cl, byte ptr [rax + 1] ; enter 0x548, -0x5c ; add byte ptr [rax], al ; add bl, dh ; movups xmmword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5aa : add cl, byte ptr [rax + 1] ; enter 0x548, -0x60 ; add byte ptr [rax], al ; add bl, dh ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040a595 : add cl, byte ptr [rax + 1] ; ret 0x458b
0x000000000040db63 : add cl, byte ptr [rax + 1] ; ret 0x8b48
0x0000000000407666 : add cl, byte ptr [rax - 0x73] ; adc al, 1 ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082cf : add cl, byte ptr [rax - 0x73] ; adc al, 1 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000041db10 : add cl, byte ptr [rax - 0x75] ; clc ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004060c1 : add cl, byte ptr [rax - 0x77] ; ret 0x8b48
0x0000000000405d0d : add cl, byte ptr [rax - 0x77] ; ret 0xb848
0x0000000000408593 : add cl, byte ptr [rax - 9] ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000044a129 : add cl, byte ptr [rbx + 0x8070c] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x000000000044592b : add cl, byte ptr [rdi + rax] ; or byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x000000000044ce76 : add cl, byte ptr [rsp + rcx + 7] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ce9c ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493ee : add cl, byte ptr [rsp + rcx + 7] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3ee : add cl, byte ptr [rsp + rcx + 7] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d414 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a3e : add cl, byte ptr [rsp + rcx + 7] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf3e : add cl, byte ptr [rsp + rcx + 7] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468d6 : add cl, byte ptr [rsp + rcx + 7] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044cdae : add cl, byte ptr [rsp + rcx + 7] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d006 : add cl, byte ptr [rsp + rcx + 7] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x00000000004470b7 : add cl, ch ; adc bh, ah ; push qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000041ffb3 : add cl, ch ; mov eax, 0x8b000000 ; add eax, 0x251c4d ; lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x251c44], edx ; mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x420007 ; jmp rsp
0x000000000041fe00 : add cl, ch ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040514b : add cl, ch ; ret 0
0x000000000041f328 : add cl, ch ; rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000424a29 : add cl, ch ; test byte ptr [rax], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424ac2 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a85
0x0000000000405212 : add cl, cl ; ret
0x0000000000444d63 : add cl, dh ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x0000000000444ac3 : add dh, ah ; jne 0x444ac9 ; jmp qword ptr [rax]
0x000000000040465a : add dh, al ; add eax, 0x24d15e ; add byte ptr [rax + 0x386e9], dl ; add byte ptr [rax - 0x75], cl ; add eax, 0x24d169 ; mov rdi, rax ; call 0x426f98
0x0000000000444633 : add dh, al ; ret 0xfffd
0x00000000004236a7 : add dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000444363 : add dh, bh ; nop ; std ; jmp rax
0x0000000000443d3b : add dh, bl ; ret 0xfffc
0x000000000044ce87 : add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004458d7 : add dh, ch ; jrcxz 0x4458da ; jmp rcx
0x000000000044d1a7 : add dh, cl ; std ; std ; jmp qword ptr [rdx]
0x00000000004437d3 : add dh, dh ; cld ; call qword ptr [rax]
0x00000000004443a3 : add dh, dh ; xchg eax, edx ; std ; push rax ; add byte ptr gs:[rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444af3 : add dh, dl ; jbe 0x444af9 ; jmp rax
0x000000000044ef2f : add dh, dl ; jge 0x44ef35 ; call qword ptr [rdx]
0x0000000000444da3 : add dh, dl ; mov esi, edi ; call qword ptr [rax]
0x000000000044340b : add dh, dl ; or ah, bh ; jmp rax
0x000000000044341b : add dh, dl ; or edi, esp ; jmp qword ptr [rax]
0x0000000000445a6f : add dl, ah ; cmc ; sti ; jmp qword ptr [rax]
0x00000000004455e3 : add dl, al ; mov bh, 0xfe ; jmp qword ptr [rax]
0x000000000044bf6f : add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044bc8f : add dl, bl ; std ; call qword ptr [rcx]
0x00000000004475b1 : add dl, byte ptr [rbx + 0x8070c] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x0000000000446a50 : add dl, byte ptr [rcx] ; cld ; jmp qword ptr [rdx]
0x00000000004448dc : add dl, byte ptr [rdx - 2] ; jmp qword ptr [rax]
0x000000000044bdff : add dl, ch ; hlt ; std ; call qword ptr [rcx]
0x0000000000444abb : add dl, cl ; jne 0x444ac9 ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ad1 ; jmp qword ptr [rax]
0x0000000000444dcb : add dl, cl ; mov bh, dh ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x0000000000400ad7 : add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000443a3b : add dl, cl ; push rbx ; cld ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x0000000000444d1b : add dl, cl ; test edi, esi ; call rax
0x0000000000446a27 : add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000045010a : add dl, dl ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000449747 : add dl, dl ; ret 0xfffc
0x0000000000443d0b : add dl, dl ; sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d7e ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x000000000041d70f : add dword ptr [eax], eax ; add byte ptr [rsi + 0xf], bh ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x0000000000447e01 : add dword ptr [r11], 0x72 ; or al, 7 ; or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; jl 0x447e65 ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000446c81 : add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b81 : add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x00000000004464a1 : add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000446659 : add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf59 : add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c669 : add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044c239 : add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x000000000044c0c9 : add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044c3a9 : add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004462a9 : add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044a785 : add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004498ed : add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x000000000044a209 : add dword ptr [r11], 3 ; movabs al, byte ptr [0x8070c07] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000044e74d : add dword ptr [r11], 3 ; ret 0xc02
0x000000000044589c : add dword ptr [rax + 0x10], edi ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458c9 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445915 ; jmp rcx
0x0000000000437df0 : add dword ptr [rax + 0x39], ecx ; jmp 0x437e7e
0x0000000000437df0 : add dword ptr [rax + 0x39], ecx ; jmp 0x437e8b
0x000000000040b606 : add dword ptr [rax + 0x4855c35d], edx ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x0000000000413584 : add dword ptr [rax + 0x48c48348], edx ; pop rbx ; pop rbp ; ret
0x000000000041d9b1 : add dword ptr [rax + 0x5590c35d], edx ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x00000000004345af : add dword ptr [rax + 0x58c48348], edx ; pop rbx ; pop rbp ; ret
0x0000000000404966 : add dword ptr [rax + 9], ecx ; ret 0xf66
0x000000000041db02 : add dword ptr [rax + rax*8 - 0x74b7b48c], eax ; clc ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d984 : add dword ptr [rax + rax*8 - 0x74b7d68c], eax ; clc ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9e2 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004107c3 : add dword ptr [rax + rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004082d3 : add dword ptr [rax - 0x75], ecx ; clc ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x00000000004308af : add dword ptr [rax - 0x75], ecx ; clc ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000040766a : add dword ptr [rax - 0x75], ecx ; enter -0x76b8, 0x50 ; or byte ptr [rax - 0x75], cl ; enter -0x7cb8, -0x3c ; and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040b5f5 : add dword ptr [rax - 0x75], ecx ; push rbp ; clc ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000444ab1 : add dword ptr [rax], 0 ; movabs dword ptr [0xca000083e0fffe75], eax ; jne 0x444ad3 ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444adb ; jmp qword ptr [rax]
0x0000000000444aa9 : add dword ptr [rax], 0 ; outsb dx, byte ptr [rsi] ; jne 0x444acb ; inc eax ; add dword ptr [rax], 0 ; movabs dword ptr [0xca000083e0fffe75], eax ; jne 0x444adb ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ae3 ; jmp qword ptr [rax]
0x0000000000444ab9 : add dword ptr [rax], 0 ; retf -0x18b ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ad3 ; jmp qword ptr [rax]
0x0000000000445a4d : add dword ptr [rax], eax ; add ah, bl ; cmc ; sti ; jmp qword ptr [rsi]
0x0000000000424978 : add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8343], al ; inc dword ptr [rbx] ; jg 0x424a0b ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249ce
0x0000000000415283 : add dword ptr [rax], eax ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000415323 : add dword ptr [rax], eax ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x0000000000414af5 : add dword ptr [rax], eax ; add bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000431843 : add dword ptr [rax], eax ; add bl, ch ; xor ecx, dword ptr [rax - 0x77] ; ret
0x000000000040e8ea : add dword ptr [rax], eax ; add bl, dh ; movups xmm1, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e91a : add dword ptr [rax], eax ; add bl, dh ; movups xmm2, xmmword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000042743d : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000040b25c : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004153f5 : add dword ptr [rax], eax ; add byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000415381 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000414bb7 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000410d0f : add dword ptr [rax], eax ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410ee5 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x00000000004458a5 : add dword ptr [rax], eax ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; loopne 0x4458c0 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44590c ; jmp rcx
0x000000000044a525 : add dword ptr [rax], eax ; add byte ptr [rax + rax], al ; clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x00000000004089c2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; add cl, cl ; ret
0x0000000000410dc0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x000000000041f32b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000424f6a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000425b06 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3be
0x0000000000414acc : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000040520f : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000040b622 : add dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000435835 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000412ac3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x0000000000404fd3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412b3a : add dword ptr [rax], eax ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000418ebc : add dword ptr [rax], eax ; add byte ptr [rbx - 0x74b717bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000419020 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x74b71bbb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x000000000041d807 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5d901042], cl ; ret
0x000000000040b5f2 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b603 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; nop ; pop rbp ; ret
0x00000000004044f5 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000004042a3 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x4042a6 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x00000000004009a1 : add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041d710 : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], bh ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x00000000004087cf : add dword ptr [rax], eax ; add cl, cl ; ret
0x0000000000445a6d : add dword ptr [rax], eax ; add dl, ah ; cmc ; sti ; jmp qword ptr [rax]
0x000000000044f8f0 : add dword ptr [rax], eax ; mov ah, 0xc ; add eax, 0x1a0be ; ret
0x000000000041d3bf : add dword ptr [rax], eax ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041dc4f : add dword ptr [rax], eax ; movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000041d38f : add dword ptr [rax], eax ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d3a0 : add dword ptr [rax], eax ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000431646 : add dword ptr [rax], eax ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431672 : add dword ptr [rax], eax ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041e3fa : add dword ptr [rax], eax ; nop ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000043209c : add dword ptr [rax], eax ; pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e359
0x000000000044f80c : add dword ptr [rax], eax ; ret
0x000000000044fb41 : add dword ptr [rax], eax ; ret 0x555
0x0000000000431624 : add dword ptr [rax], eax ; xorps xmm0, xmm1 ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000042d7b3 : add dword ptr [rax], ecx ; add byte ptr [rax], al ; leave ; ret
0x0000000000414af4 : add dword ptr [rax], r8d ; add bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x00000000004249b9 : add dword ptr [rbp - 0x84], 1 ; jmp 0x42498d
0x0000000000424a13 : add dword ptr [rbp - 0x88], 1 ; jmp 0x4249e7
0x0000000000424a6d : add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a41
0x0000000000424ac7 : add dword ptr [rbp - 0x90], 1 ; jmp 0x424a9b
0x0000000000448e18 : add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x0000000000449760 : add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000041d981 : add dword ptr [rbx - 0x3f7bfe10], eax ; je 0x41d9e5 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9e5 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000041d980 : add dword ptr [rbx - 0x3f7bfe10], eax ; je 0x41d9e6 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9e6 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004500ff : add dword ptr [rbx], 0x11ab05 ; nop ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000447e02 : add dword ptr [rbx], 0x72 ; or al, 7 ; or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; jl 0x447e64 ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000446c82 : add dword ptr [rbx], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b82 : add dword ptr [rbx], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x00000000004464a2 : add dword ptr [rbx], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x000000000044665a : add dword ptr [rbx], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf5a : add dword ptr [rbx], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c66a : add dword ptr [rbx], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044c23a : add dword ptr [rbx], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x000000000044c0ca : add dword ptr [rbx], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044c3aa : add dword ptr [rbx], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004462aa : add dword ptr [rbx], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044a786 : add dword ptr [rbx], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004498ee : add dword ptr [rbx], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x000000000044a20a : add dword ptr [rbx], 3 ; movabs al, byte ptr [0x8070c07] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x0000000000445a3a : add dword ptr [rbx], 3 ; movsd dword ptr [rdi], dword ptr [rsi] ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044e74e : add dword ptr [rbx], 3 ; ret 0xc02
0x000000000044a536 : add dword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x00000000004500de : add dword ptr [rbx], ebx ; add byte ptr [rax], al ; jrcxz 0x45012f ; add eax, 0xf700118e ; add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044589f : add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458c6 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445912 ; jmp rcx
0x000000000041ffc1 : add dword ptr [rcx + 0x251c4415], ecx ; add byte ptr [rbx + 0x251c3a15], cl ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fff9 ; jmp rsp
0x000000000040b6b9 : add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b725 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b725 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b707 : add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 0x8d], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7c7 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7c7 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7c7 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b77f : add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x00000000004308ba : add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x0000000000445524 : add dword ptr [rcx - 0x51570002], esi ; add byte ptr [rax], al ; mov r9b, 0xfe ; call rax
0x000000000041d9b0 : add dword ptr [rcx], eax ; nop ; pop rbp ; ret
0x0000000000437a58 : add dword ptr [rcx], edi ; ret 0x637d
0x0000000000437808 : add dword ptr [rcx], edi ; ret 0x687d
0x000000000044a53a : add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x000000000044ef1e : add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef46 ; call qword ptr [rdx]
0x000000000044a16b : add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x0000000000445ae3 : add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x00000000004475d3 : add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x0000000000437583 : add dword ptr [rdi], edx ; add byte ptr [rax], al ; call 0x403866
0x0000000000445898 : add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x4458f2 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458cd ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445919 ; jmp rcx
0x000000000044ce74 : add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ce9e ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493ec : add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3ec : add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d416 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a3c : add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf3c : add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468d4 : add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044cdac : add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d004 : add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x00000000004470cc : add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x00000000004500e9 : add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004500e3 : add dword ptr [rip - 0x8ffee72], eax ; add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000437462 : add dword ptr [rsi + 0xf], esp ; out dx, eax ; sal bl, 0xf ; sub al, al ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ec
0x0000000000432030 : add dword ptr [rsi + 0xf], esp ; out dx, eax ; sal bl, 0xf ; sub al, al ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e39c
0x00000000004188bb : add dword ptr [rsi - 0x76b70002], ebp ; ret
0x0000000000448d38 : add dword ptr [rsi - 4], edx ; call qword ptr [rip]
0x0000000000407d51 : add dword ptr [rsi], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000043166f : add eax, 0x10074 ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431621 : add eax, 0x100ca ; xorps xmm0, xmm1 ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e8e8 : add eax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e918 : add eax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000041d805 : add eax, 0x168 ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x00000000004077ae : add eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x000000000044f8f4 : add eax, 0x1a0be ; ret
0x000000000041dc4c : add eax, 0x1e3e3 ; movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000041d39d : add eax, 0x1eca6 ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d38c : add eax, 0x1ecaf ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000403caa : add eax, 0x1f0f93eb ; add byte ptr [rax], bh ; test rax, rax ; je 0x403cbf ; push rbp ; mov rbp, rsp ; call rax
0x000000000040465c : add eax, 0x24d15e ; add byte ptr [rax + 0x386e9], dl ; add byte ptr [rax - 0x75], cl ; add eax, 0x24d169 ; mov rdi, rax ; call 0x426f96
0x000000000040466a : add eax, 0x24d169 ; mov rdi, rax ; call 0x426f88
0x0000000000403c94 : add eax, 0x24db16 ; add ebx, esi ; ret
0x000000000041ffba : add eax, 0x251c4d ; lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x251c44], edx ; mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x420000 ; jmp rsp
0x00000000004120a5 : add eax, 0x285de ; mov rdi, rbx ; call 0x40e358
0x00000000004112cf : add eax, 0x28738 ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040c982 : add eax, 0x2cfe9 ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403964
0x000000000040c968 : add eax, 0x2d003 ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40397e
0x000000000040c94e : add eax, 0x2d01d ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403998
0x0000000000434603 : add eax, 0x3948fffe ; ret
0x000000000045010d : add eax, 0x3e10000 ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004308ae : add eax, 0x458b4801 ; clc ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000040b749 : add eax, 0x48000000 ; mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000405cc7 : add eax, 0x4855c35d ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000431877 : add eax, 0x48fffd22 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004099c2 : add eax, 0x50 ; mov rdi, rax ; call 0x405cac
0x0000000000405ce4 : add eax, 0x5dd00148 ; ret
0x00000000004500fb : add eax, 0x810011bf ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004500ea : add eax, 0x860010fa ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000407e4b : add eax, 0x89480000 ; ret
0x0000000000423189 : add eax, 0x8948fffe ; ret
0x000000000040764c : add eax, 0x8b480000 ; enter -0x74b8, 8 ; mov rdx, qword ptr [rbp - 0x28] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004104f8 : add eax, 0x8b480000 ; ror byte ptr [r8 - 0x75], 1 ; push rbp ; fmul st(1) ; ret
0x0000000000450101 : add eax, 0x900011ab ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000040b5af : add eax, 0xa0 ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5dc : add eax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x00000000004500f0 : add eax, 0xad00118e ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044f7c2 : add eax, 0xb0000fc4 ; or eax, 0xfdb05 ; ret 0x50d
0x000000000040977c : add eax, 0xb8 ; add byte ptr [rbp - 0x3d], bl ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000406eab : add eax, 0xb8 ; add cl, cl ; ret
0x00000000004232bd : add eax, 0xbf00004a ; clc ; add eax, dword ptr [rax] ; add al, ch ; cmc ; add edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x000000000041f6a5 : add eax, 0xbf00671c ; sar byte ptr [rbx], 0x40 ; add al, ch ; int 0x3e
0x000000000040b457 : add eax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x0000000000408084 : add eax, 0xc3c90000 ; nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004154f3 : add eax, 0xc9000001 ; ret
0x0000000000407e9d : add eax, 0xc9900000 ; ret
0x0000000000450107 : add eax, 0xd20011bf ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000045011e : add eax, 0xd70011dc ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000436a87 : add eax, 0xebfffccf ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000430893 : add eax, 0xf54c ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x0000000000430882 : add eax, 0xf559 ; movss dword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x00000000004500e4 : add eax, 0xf700118e ; add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000450112 : add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000420d37 : add eax, 0xffffe26 ; mov dh, 0 ; movsx eax, al ; sub eax, 0x20 ; cmp eax, 0x5c ; ja 0x423d2c ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x000000000041ffd2 : add eax, 0xfffffde0 ; cmp rax, rax ; je 0x41ffe8 ; jmp rsp
0x0000000000404c03 : add eax, 1 ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x0000000000437460 : add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ee
0x000000000043202e : add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e39e
0x000000000040b42a : add eax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b43f : add eax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040e8f6 : add eax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000410261 : add eax, 8 ; pop rbp ; ret
0x0000000000423a78 : add eax, dword ptr [rax] ; add al, ch ; cld ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004232c3 : add eax, dword ptr [rax] ; add al, ch ; cmc ; add edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x000000000042354a : add eax, dword ptr [rax] ; add al, ch ; outsb dx, byte ptr [rsi] ; add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000041085f : add eax, dword ptr [rax] ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004108d9 : add eax, dword ptr [rax] ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x0000000000405a05 : add eax, dword ptr [rax] ; add bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x000000000040e085 : add eax, dword ptr [rax] ; add bl, dh ; addps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e051 : add eax, dword ptr [rax] ; add bl, dh ; addps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040c97c : add eax, dword ptr [rax] ; add bl, dh ; movups xmm0, xmmword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40396a
0x000000000040c962 : add eax, dword ptr [rax] ; add bl, dh ; movups xmm0, xmmword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403984
0x000000000040c948 : add eax, dword ptr [rax] ; add bl, dh ; movups xmm0, xmmword ptr [rip + 0x2d01d] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40399e
0x0000000000410953 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000040e131 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc r11b, r14b ; movups xmmword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041e15a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x75] ; push rbp ; mov eax, 0x42100ff3 ; xor bl, dh ; cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000404665 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; add eax, 0x24d169 ; mov rdi, rax ; call 0x426f8d
0x0000000000415085 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000040e045 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; cwde ; movss xmm0, dword ptr [rax + 0x3e8] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e079 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; cwde ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e06d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; cwde ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e109 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; fdiv st(3) ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0f5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; loopne 0x40e139 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e11d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; sal r11b, 1 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004083d0 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000414e0a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000410774 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000410d67 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; leave ; ret
0x000000000041de9b : add eax, dword ptr [rax] ; add byte ptr [rbx + 0xf08e47d], al ; xchg dword ptr [rax + 2], ebx ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000041b42b : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x74b71bbb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x0000000000408329 : add eax, dword ptr [rax] ; add cl, cl ; ret
0x0000000000403fbf : add eax, dword ptr [rax] ; test al, al ; nop ; leave ; ret
0x000000000044975f : add eax, dword ptr [rbx + 0x32c10304] ; or al, 7 ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000044a20b : add eax, dword ptr [rbx] ; movabs al, byte ptr [0x8070c07] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x0000000000445a3b : add eax, dword ptr [rbx] ; movsd dword ptr [rdi], dword ptr [rsi] ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044e74f : add eax, dword ptr [rbx] ; ret 0xc02
0x000000000044a537 : add eax, dword ptr [rbx] ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x000000000043209b : add eax, dword ptr [rcx] ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rax - 0x77], 0xdf ; call 0x40e35a
0x0000000000446c83 : add eax, dword ptr [rdx] ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b83 : add eax, dword ptr [rdx] ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x00000000004464a3 : add eax, dword ptr [rdx] ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x000000000044665b : add eax, dword ptr [rdx] ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf5b : add eax, dword ptr [rdx] ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c66b : add eax, dword ptr [rdx] ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044c23b : add eax, dword ptr [rdx] ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x000000000044c0cb : add eax, dword ptr [rdx] ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044c3ab : add eax, dword ptr [rdx] ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004462ab : add eax, dword ptr [rdx] ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044a787 : add eax, dword ptr [rdx] ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004498ef : add eax, dword ptr [rdx] ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x000000000045010c : add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000450106 : add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000450100 : add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000450111 : add eax, dword ptr [rip - 0xffed7c] ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000410952 : add eax, dword ptr es:[rax] ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000040b5cf : add eax, eax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d75 : add eax, eax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040e8db : add eax, eax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e90b : add eax, eax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040765e : add eax, eax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082c7 : add eax, eax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000408a58 : add eax, eax ; add rax, rdx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085bc : add eax, eax ; add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000412020 : add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3ad
0x000000000041204b : add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e382
0x00000000004500da : add eax, ebp ; add ah, byte ptr [rbx + 0x1b01] ; jrcxz 0x450133 ; add eax, 0xf700118e ; add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000042b602 : add eax, ebx ; mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x427853
0x000000000040b5ac : add eax, ecx ; add rax, 0xa0 ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5d9 : add eax, ecx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d7f : add eax, ecx ; pop rbp ; ret
0x0000000000449762 : add eax, ecx ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000041201e : add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3af
0x0000000000412049 : add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e384
0x00000000004085d0 : add eax, edx ; leave ; ret
0x000000000040506e : add eax, edx ; pop rbp ; ret
0x0000000000436fe4 : add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c2
0x0000000000437504 : add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ba
0x0000000000437494 : add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ba
0x000000000040b5d2 : add eax, edx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d78 : add eax, edx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040e8de : add eax, edx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e90e : add eax, edx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000407661 : add eax, edx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082ca : add eax, edx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000408a5b : add eax, edx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085bf : add eax, edx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000040e8e5 : add eax, esi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e915 : add eax, esi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000448e1a : add eax, esp ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x0000000000437dcb : add ebp, eax ; lahf ; mov bl, 0xfc ; dec dword ptr [rax - 0x7b] ; in eax, dx ; je 0x437e1a ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040c772 : add ebp, ecx ; ret
0x0000000000437dee : add ebx, 1 ; cmp rbx, rbp ; jne 0x437df6 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040504f : add ebx, dword ptr [rbp - 0x3d] ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000445ae1 : add ebx, dword ptr [rsi + 0x8070c01] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x0000000000409826 : add ebx, ebp ; call 0x68c623b3
0x0000000000404bfb : add ebx, ebp ; fimul dword ptr [rax - 0x75] ; clc ; add rax, 1 ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000041102f : add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004249bf : add ebx, ebp ; ret
0x000000000040e545 : add ebx, ebp ; xchg eax, esp ; nop ; leave ; ret
0x0000000000403c99 : add ebx, esi ; ret
0x000000000040b279 : add ecx, dword ptr [rax + 0x4890ffff] ; add esp, 0x88 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041e498 : add ecx, dword ptr [rax + 1] ; rcr byte ptr [rbp - 0x3d], 1 ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000429e47 : add ecx, dword ptr [rax + rax] ; add al, ch ; jo 0x429df3 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000403c50 : add ecx, dword ptr [rax - 0x77] ; in eax, 0x48 ; mov eax, esi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c9b ; mov eax, 0 ; test rax, rax ; je 0x403c9b ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x00000000004052b3 : add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000414c64 : add ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000415695 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000445a3e : add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x0000000000447b0b : add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x000000000044a538 : add ecx, dword ptr [rdi] ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x00000000004475d1 : add ecx, dword ptr [rsi + 0x8070c01] ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x00000000004320fe : add ecx, ebp ; imul edi, ebp, 0xcbfffff ; add byte ptr [rax], al ; add al, ch ; mov dl, 0x15 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042f3e7 : add ecx, ebp ; jmp 0x42f40e
0x000000000040c42b : add ecx, ebp ; jmp 0xffffffffe940c449
0x00000000004142d8 : add ecx, ebp ; mov esp, 0xe8fffff9 ; cmp eax, 0x90fffef5 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004368d2 : add ecx, ebp ; push rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041bed5 : add ecx, ecx ; ret
0x0000000000443e6c : add ecx, edi ; cld ; push rax ; add byte ptr [r8], r8b ; xor bh, cl ; cld ; call qword ptr [rax]
0x000000000044ef1c : add ecx, edx ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef48 ; call qword ptr [rdx]
0x000000000043697b : add ecx, edx ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000445929 : add edi, dword ptr [rcx + 0x8070c02] ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x000000000042498b : add edi, dword ptr [rdi + 0x34] ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249bb
0x00000000004249e5 : add edi, dword ptr [rdi + 0x34] ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a15
0x0000000000424a3f : add edi, dword ptr [rdi + 0x34] ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a6f
0x0000000000424a99 : add edi, dword ptr [rdi + 0x34] ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ac9
0x00000000004137f4 : add edi, edi ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x00000000004232c8 : add edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004249b0 : add edx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x424996
0x0000000000424a0a : add edx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x4249f0
0x0000000000424a64 : add edx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a4a
0x0000000000424abe : add edx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424aa4
0x0000000000409b17 : add edx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d65
0x000000000044a169 : add edx, dword ptr [rax] ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x000000000040c969 : add edx, eax ; add al, byte ptr [rax] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40397d
0x000000000041de7d : add esi, 4 ; mov rdi, rax ; call rcx
0x0000000000450117 : add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000404c05 : add esi, eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x0000000000403c5c : add esi, eax ; sar rsi, 1 ; je 0x403c8f ; mov eax, 0 ; test rax, rax ; je 0x403c8f ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000447b09 : add esi, ebx ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x0000000000435cfb : add esi, ebx ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000423510 : add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004349a9 : add esi, edx ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000044b8f8 : add esi, edx ; std ; jmp qword ptr [rsi]
0x0000000000404b60 : add esp, 0x10 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000404fd0 : add esp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000407397 : add esp, 0x18 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000040539c : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000412ac0 : add esp, 0x1a0 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000407678 : add esp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004079bb : add esp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000420072 : add esp, 0x218 ; pop rbx ; pop rbp ; ret
0x00000000004072d6 : add esp, 0x28 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000404455 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000436b29 : add esp, 0x298 ; pop rbx ; pop rbp ; ret
0x0000000000406dff : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000040840c : add esp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000407e27 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041503e : add esp, 0x50 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041ff59 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000040629c : add esp, 0x60 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000426f72 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000406af3 : add esp, 0x70 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000042f13c : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040b27f : add esp, 0x88 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041005b : add esp, 0x90 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040588a : add esp, 0x9a8 ; pop rbx ; pop rbp ; ret
0x000000000041f4ef : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000043063f : add esp, 0xc0 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f301 : add esp, 0xe8 ; pop rbx ; pop rbp ; ret
0x0000000000418cdf : add esp, 0xf0 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000437df7 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404bab : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000403186 : add esp, 8 ; ret
0x000000000044a20c : add esp, dword ptr [rax + 0x8070c07] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x0000000000445a3c : add esp, dword ptr [rbp + 0x8070c03] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x00000000004153ba : add qword ptr [rax], r8 ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x0000000000431842 : add qword ptr [rax], rax ; add bl, ch ; xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000445a39 : add qword ptr [rbx], 3 ; movsd dword ptr [rdi], dword ptr [rsi] ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a535 : add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000408083 : add rax, -0x3c370000 ; nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040764b : add rax, -0x74b80000 ; enter -0x74b8, 8 ; mov rdx, qword ptr [rbp - 0x28] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040e8e7 : add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e917 : add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x00000000004099c1 : add rax, 0x50 ; mov rdi, rax ; call 0x405cad
0x000000000040b5ae : add rax, 0xa0 ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5db : add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b456 : add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x0000000000404c02 : add rax, 1 ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000040b429 : add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b43e : add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040e8f5 : add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000410260 : add rax, 8 ; pop rbp ; ret
0x0000000000408527 : add rax, qword ptr [r8] ; add cl, cl ; ret
0x000000000040b5ce : add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d74 : add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040e8da : add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e90a : add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040765d : add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082c6 : add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000408a57 : add rax, rax ; add rax, rdx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085bb : add rax, rax ; add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042b601 : add rax, rbx ; mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x427854
0x000000000040b5ab : add rax, rcx ; add rax, 0xa0 ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5d8 : add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d7e : add rax, rcx ; pop rbp ; ret
0x00000000004085cf : add rax, rdx ; leave ; ret
0x000000000040506d : add rax, rdx ; pop rbp ; ret
0x000000000040b5d1 : add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d77 : add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040e8dd : add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e90d : add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000407660 : add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082c9 : add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000408a5a : add rax, rdx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085be : add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000040e8e4 : add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e914 : add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000437ded : add rbx, 1 ; cmp rbx, rbp ; jne 0x437df7 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004249af : add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x424997
0x0000000000424a09 : add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x4249f1
0x0000000000424a63 : add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a4b
0x0000000000424abd : add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424aa5
0x0000000000409b16 : add rdx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d66
0x000000000041de7c : add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000403c5b : add rsi, rax ; sar rsi, 1 ; je 0x403c90 ; mov eax, 0 ; test rax, rax ; je 0x403c90 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000404b5f : add rsp, 0x10 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000404fcf : add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000407396 : add rsp, 0x18 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000040539b : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000412abf : add rsp, 0x1a0 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000407677 : add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004079ba : add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000420071 : add rsp, 0x218 ; pop rbx ; pop rbp ; ret
0x00000000004072d5 : add rsp, 0x28 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000404454 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000436b28 : add rsp, 0x298 ; pop rbx ; pop rbp ; ret
0x0000000000406dfe : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000040840b : add rsp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000407e26 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000041503d : add rsp, 0x50 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041ff58 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000040629b : add rsp, 0x60 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000426f71 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000406af2 : add rsp, 0x70 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000042f13b : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040b27e : add rsp, 0x88 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041005a : add rsp, 0x90 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000405889 : add rsp, 0x9a8 ; pop rbx ; pop rbp ; ret
0x000000000041f4ee : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000043063e : add rsp, 0xc0 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f300 : add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
0x0000000000418cde : add rsp, 0xf0 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000437df6 : add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404baa : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000403185 : add rsp, 8 ; ret
0x000000000041d6f9 : addps xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d751 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x00000000004374b6 : addps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403798
0x0000000000432070 : addps xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e35c
0x000000000041d4ba : addps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5ea : addps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d558 : addps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db4a : addps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e932 : addps xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e089 : addps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e055 : addps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000043204a : addps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e382
0x00000000004374f5 : addps xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c9
0x0000000000437485 : addps xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c9
0x000000000041d6f8 : addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d752 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d6f7 : addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d753 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d6f6 : addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d754 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x00000000004374b5 : addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403799
0x000000000043206f : addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e35d
0x000000000041d4b9 : addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5e9 : addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d557 : addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db49 : addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e931 : addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e088 : addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e054 : addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x0000000000432049 : addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e383
0x00000000004374f4 : addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ca
0x0000000000437484 : addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ca
0x000000000042d59a : and ah, byte ptr [rcx - 3] ; dec ecx ; ret
0x000000000040465f : and al, 0 ; add byte ptr [rax + 0x386e9], dl ; add byte ptr [rax - 0x75], cl ; add eax, 0x24d169 ; mov rdi, rax ; call 0x426f93
0x0000000000447d4d : and al, 0 ; add byte ptr [rax + 0x77], cl ; cld ; jmp qword ptr [rdx]
0x000000000044cd90 : and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdc9 ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000446488 : and al, 0 ; add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004493d0 : and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x0000000000449768 : and al, 0 ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000044e778 : and al, 0 ; add byte ptr [rax], al ; in al, dx ; mov es, word ptr [rax] ; add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x000000000044d3d0 : and al, 0 ; add byte ptr [rax], al ; jnp 0x44d40a ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d432 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000445930 : and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x00000000004458a8 : and al, 0 ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; loopne 0x4458bd ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445909 ; jmp rcx
0x00000000004468b8 : and al, 0 ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000448df8 : and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x00000000004481f8 : and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x44820a ; call rdx
0x0000000000446a20 : and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf20 : and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf5a ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000443411 : and al, 0 ; add byte ptr [rdi + 0xfffc0b], dh ; and eax, 0xbd60000 ; cld ; jmp qword ptr [rax]
0x0000000000443409 : and al, 0 ; add dh, dl ; or ah, bh ; jmp rax
0x0000000000403c97 : and al, 0 ; add ebx, esi ; ret
0x000000000040466d : and al, 0 ; mov rdi, rax ; call 0x426f85
0x00000000004032f4 : and al, 0 ; push 0x15 ; jmp 0x40319e
0x00000000004034f4 : and al, 0 ; push 0x35 ; jmp 0x40319e
0x00000000004036f4 : and al, 0 ; push 0x55 ; jmp 0x40319e
0x00000000004038f4 : and al, 0 ; push 0x75 ; jmp 0x40319e
0x0000000000403af4 : and al, 0 ; push 0x95 ; jmp 0x40319e
0x00000000004458ca : and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458e7 ; jmp rcx
0x00000000004285ea : and al, 0x26 ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004493b4 : and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x0000000000443934 : and al, 0x4d ; cld ; inc eax ; cmp al, byte ptr [rax] ; add byte ptr [rax], dh ; cld ; jmp rax
0x000000000044a7b4 : and al, 0x4f ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a8b4 : and al, 0x50 ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x000000000044b9b4 : and al, 0x61 ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x000000000044c8b4 : and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x00000000004464b4 : and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000421207 : and al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004111f7 : and al, 0xff ; dec ecx ; ret
0x000000000040e107 : and al, 3 ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040f7a0 : and al, 9 ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004461b4 : and al, 9 ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x00000000004295a8 : and al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004458cb : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458e6 ; jmp rcx
0x0000000000447b15 : and al, byte ptr [rax] ; add byte ptr [rsp + rdx*2], ch ; cld ; call rax
0x0000000000427fe8 : and al, byte ptr [rax] ; add cl, cl ; ret
0x0000000000407b45 : and al, byte ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041d71c : and bh, al ; adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7e0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000042c217 : and bh, bh ; dec dword ptr [rax + 0x29] ; ret
0x0000000000411476 : and bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000444b34 : and bh, byte ptr [rax - 2] ; jmp rax
0x000000000043298e : and bh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000004213f3 : and bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000041d99b : and bl, dh ; movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000041d48f : and bl, dh ; movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d56f : and bl, dh ; movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d696 : and bl, dh ; movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d601 : and bl, dh ; movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db27 : and bl, dh ; movups xmm1, xmmword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d99a : and bl, sil ; movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000444338 : and byte ptr [rax + rax], 0xe8 ; mov bh, ch ; jmp qword ptr [rax - 0x4effff9c]
0x0000000000443b60 : and byte ptr [rax + rax], al ; jle 0x443b25 ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x000000000041021b : and byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000431658 : and byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6db : and byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d76f ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d6da : and byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d770 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d737 : and byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7c5 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d736 : and byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7c6 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d487 : and byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d567 : and byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d68e : and byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5f9 : and byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db1f : and byte ptr [rax - 0x75], cl ; push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041112b : and byte ptr [rax - 0x75], cl ; push rdx ; sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411014 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000411127 : and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; push rdx ; sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411010 : and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004256a1 : and byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000429e0d : and byte ptr [rax], al ; add bl, ch ; and cl, byte ptr [rax - 0x75] ; mov r8d, 0xe8c78948 ; in eax, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000412b2c : and byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000429c30 : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000043591f : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000044a87c : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a889 ; std ; jmp qword ptr [rsi]
0x000000000044a7bc : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000447e14 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044a7fc : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x0000000000444610 : and byte ptr [rax], dh ; add byte ptr [rdx - 0x3f], al ; std ; inc dword ptr [rax + 0x70] ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000438a81 : and byte ptr [rbp - 0x7b7bf142], cl ; mov esi, 0xbe77baaa ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x00000000004387b1 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4387d7 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43882d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439631 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x439657 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396ad ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a351 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43a377 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3cd ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b011 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43b037 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b08d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcd1 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43bcf7 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd4d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9b1 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43c9d7 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca2d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d771 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43d797 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7ed ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4f1 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43e517 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e56d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f931 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43f957 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9ad ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440751 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x440777 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407cd ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413d1 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4413f7 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44144d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442051 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x442077 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420cd ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fb1 : and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x442fd7 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44302d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000041d7f4 : and byte ptr [rbx + 0x10eb1840], cl ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x18] ; add eax, 0x168 ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x000000000040767a : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004079bd : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x000000000041d49c : and byte ptr [rbx + 0x63481452], cl ; sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d57c : and byte ptr [rbx + 0x63481452], cl ; sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6a3 : and byte ptr [rbx + 0x63481452], cl ; sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d60e : and byte ptr [rbx + 0x63481452], cl ; sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000040a259 : and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040a2be : and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000040a323 : and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4803
0x000000000040a387 : and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000040a3ec : and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4805
0x000000000040a451 : and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000000000040a4b5 : and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4807
0x000000000040a51a : and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000438b7e : and byte ptr [rbx + 0x65], ch ; jns 0x438bca ; imul esi, dword ptr [rbx + 0x20], 0x61766e69 ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c21 ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x000000000041d70a : and byte ptr [rbx + 0x673d1440], cl ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], bh ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d801 : and byte ptr [rbx + 0x68051840], cl ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x5d901042], cl ; ret
0x000000000041d6e3 : and byte ptr [rbx + 0xf661452], cl ; out dx, eax ; sal bl, 0xf ; sub al, dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d767 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d73f : and byte ptr [rbx + 0xf661452], cl ; out dx, eax ; sal bl, 0xf ; sub al, dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7bd ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d766 : and byte ptr [rbx - 0x3f7aebc0], cl ; jns 0x41d796 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d765 : and byte ptr [rbx - 0x3f7aebc0], cl ; jns 0x41d797 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000444ddc : and byte ptr [rbx - 0x6f0f0002], cl ; add byte ptr [rax], al ; mov edi, esi ; call qword ptr [rax]
0x0000000000438b85 : and byte ptr [rcx + 0x6e], ch ; jbe 0x438c0b ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c1a ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000438b82 : and byte ptr [rcx + 0x73], ch ; and byte ptr [rcx + 0x6e], ch ; jbe 0x438c0e ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c1d ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x000000000042d4ac : and byte ptr [rcx - 3], 0xff ; nop ; leave ; ret
0x0000000000427c06 : and byte ptr [rcx], dl ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000438b95 : and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000417c9c : and byte ptr [rdx - 0x76b70002], bh ; ret
0x0000000000419282 : and byte ptr [rdx], al ; add byte ptr [rdi], cl ; push rdi ; ret
0x000000000041925a : and byte ptr [rdx], al ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x000000000041de5a : and byte ptr [rsi], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rax] ; mov rcx, qword ptr [rdx] ; mov rdx, qword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x00000000004387ce : and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000438b7d : and byte ptr gs:[rbx + 0x65], ch ; jns 0x438bcb ; imul esi, dword ptr [rbx + 0x20], 0x61766e69 ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c22 ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000438b94 : and byte ptr gs:[rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000444235 : and ch, bh ; inc eax ; pop rdi ; add byte ptr [rax], al ; xor al, 0x20 ; std ; jmp rax
0x000000000044423d : and ch, bh ; jmp rax
0x0000000000429e11 : and cl, byte ptr [rax - 0x75] ; mov r8d, 0xe8c78948 ; in eax, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004438b4 : and cl, byte ptr [rbx - 4] ; inc eax ; cmp byte ptr [rax], al ; add byte ptr [rbx + rcx*2 - 4], cl ; jmp rax
0x0000000000406b3a : and cl, byte ptr [rip - 0x74b80000] ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000421639 : and dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000429e0c : and dword ptr [rax], 0 ; add bl, ch ; and cl, byte ptr [rax - 0x75] ; mov r8d, 0xe8c78948 ; in eax, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004255eb : and dword ptr [rax], eax ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000042579d : and dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004298ec : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000041e159 : and dword ptr [rbx], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rax] ; mov rcx, qword ptr [rdx] ; mov rdx, qword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041fe73 : and dword ptr [rcx], edi ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041f35b : and dword ptr [rdi - 2], eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000419232 : and dword ptr [rdx], eax ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x000000000041ffbd : and eax, 0x1508d00 ; mov dword ptr [rip + 0x251c44], edx ; mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fffd ; jmp rsp
0x0000000000443439 : and eax, 0x17780000 ; cld ; call rax
0x0000000000443441 : and eax, 0x17c10000 ; cld ; push rax ; and eax, 0x181f0000 ; cld ; call qword ptr [rax]
0x0000000000443449 : and eax, 0x181f0000 ; cld ; call qword ptr [rax]
0x0000000000403af1 : and eax, 0x24d9ca ; push 0x95 ; jmp 0x4031a1
0x00000000004038f1 : and eax, 0x24daca ; push 0x75 ; jmp 0x4031a1
0x00000000004036f1 : and eax, 0x24dbca ; push 0x55 ; jmp 0x4031a1
0x00000000004034f1 : and eax, 0x24dcca ; push 0x35 ; jmp 0x4031a1
0x00000000004032f1 : and eax, 0x24ddca ; push 0x15 ; jmp 0x4031a1
0x000000000041ffc6 : and eax, 0x3a158b00 ; sbb al, 0x25 ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fff4 ; jmp rsp
0x0000000000447e4d : and eax, 0x77720000 ; cld ; jmp qword ptr [rip]
0x0000000000447e6d : and eax, 0x77780000 ; cld ; jmp qword ptr [rdx]
0x0000000000447e2d : and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000447e0d : and eax, 0x77800000 ; cld ; jmp qword ptr [rax]
0x000000000041ffcc : and eax, 0x88984800 ; xchg eax, esp ; add eax, 0xfffffde0 ; cmp rax, rax ; je 0x41ffee ; jmp rsp
0x0000000000421127 : and eax, 0x8948fffe ; ret
0x00000000004114e5 : and eax, 0x8d48ffff ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000443419 : and eax, 0xbd60000 ; cld ; jmp qword ptr [rax]
0x0000000000410911 : and eax, 0xc9000003 ; ret
0x00000000004280af : and eax, 0xc9900000 ; ret
0x00000000004135e6 : and eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041afdf : and eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x74b717bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000428f20 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000044d484 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044d4a4 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x0000000000407815 : and eax, dword ptr [rdi] ; add byte ptr [rax], al ; leave ; ret
0x000000000042e800 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000410c65 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; leave ; ret
0x000000000042518b : and ebp, 0x1de9fffd ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044a019 : and ebp, edi ; call qword ptr [rip]
0x0000000000431576 : and ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004374ad : and edi, dword ptr [rdi + 0xff30000] ; pop rsi ; ret 0xff3
0x000000000041157b : and edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000043282a : and edi, esi ; dec dword ptr [rax + 0x39] ; ret
0x00000000004212f0 : and edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004214d3 : and esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431575 : and r13d, r15d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411475 : and r15b, r15b ; dec dword ptr [rax - 0x77] ; ret
0x0000000000444c74 : call 0x11444afc
0x0000000000425028 : call 0x262c5034
0x0000000000425028 : call 0x262c504b
0x0000000000425028 : call 0x262c5062
0x0000000000425028 : call 0x262c5079
0x0000000000443ee8 : call 0x27443f75
0x0000000000443ee8 : call 0x27443f85
0x0000000000404a8a : call 0x2d3bd7
0x0000000000404a89 : call 0x2d3bd8
0x0000000000436f72 : call 0x403272
0x000000000041741f : call 0x4036c2
0x00000000004374bc : call 0x403792
0x000000000043700c : call 0x40379a
0x000000000043758c : call 0x403802
0x0000000000437531 : call 0x403822
0x000000000040d5e4 : call 0x40382a
0x0000000000437587 : call 0x403862
0x000000000040c98d : call 0x403959
0x000000000042778b : call 0x403a82
0x000000000043704a : call 0x4053804d
0x0000000000437049 : call 0x4053804e
0x0000000000437094 : call 0x40538097
0x0000000000437093 : call 0x40538098
0x00000000004099c8 : call 0x405ca6
0x0000000000409b20 : call 0x405d5c
0x000000000041207d : call 0x40e350
0x00000000004457f0 : call 0x424458b6
0x00000000004457f0 : call 0x424458f6
0x0000000000404672 : call 0x426f80
0x000000000042b5a7 : call 0x427846
0x0000000000444460 : call 0x43444504
0x0000000000444460 : call 0x43444514
0x0000000000430723 : call 0x45531751
0x0000000000430723 : call 0x4553175e
0x00000000004307dd : call 0x45531818
0x0000000000436ff3 : call 0x48537ff6
0x0000000000436ff2 : call 0x48537ff7
0x000000000042f3f6 : call 0x48c87f59
0x0000000000408548 : call 0x4902ae98
0x0000000000408547 : call 0x4902ae99
0x0000000000408630 : call 0x4902af80
0x000000000040862f : call 0x4902af81
0x000000000040876c : call 0x4902b0bc
0x000000000040876b : call 0x4902b0bd
0x0000000000408a02 : call 0x4902b352
0x0000000000408a01 : call 0x4902b353
0x0000000000408bdc : call 0x4902b52c
0x0000000000408bdb : call 0x4902b52d
0x0000000000410fc7 : call 0x49033917
0x0000000000410fc6 : call 0x49033918
0x0000000000415648 : call 0x49037f98
0x0000000000415647 : call 0x49037f99
0x00000000004157d7 : call 0x49038127
0x00000000004157d6 : call 0x49038128
0x000000000041d080 : call 0x4903f9d0
0x000000000041d07f : call 0x4903f9d1
0x000000000041d20f : call 0x4903fb5f
0x000000000041d20e : call 0x4903fb60
0x000000000042dd8c : call 0x490506dc
0x000000000042dd8b : call 0x490506dd
0x000000000042de8c : call 0x490507dc
0x000000000042de8b : call 0x490507dd
0x000000000042df46 : call 0x49050896
0x000000000042df45 : call 0x49050897
0x000000000042e000 : call 0x49050950
0x000000000042dfff : call 0x49050951
0x000000000042e0ba : call 0x49050a0a
0x000000000042e0b9 : call 0x49050a0b
0x000000000042e174 : call 0x49050ac4
0x000000000042e173 : call 0x49050ac5
0x000000000042e22e : call 0x49050b7e
0x000000000042e22d : call 0x49050b7f
0x000000000042e2e8 : call 0x49050c38
0x000000000042e2e7 : call 0x49050c39
0x000000000042e3a2 : call 0x49050cf2
0x000000000042e3a1 : call 0x49050cf3
0x000000000042eb68 : call 0x490514b8
0x000000000042eb67 : call 0x490514b9
0x000000000042ebcd : call 0x4905151d
0x000000000042ebcc : call 0x4905151e
0x000000000042ec32 : call 0x49051582
0x000000000042ec31 : call 0x49051583
0x000000000042ec97 : call 0x490515e7
0x000000000042ec96 : call 0x490515e8
0x000000000042ecfc : call 0x4905164c
0x000000000042ecfb : call 0x4905164d
0x000000000042ed61 : call 0x490516b1
0x000000000042ed60 : call 0x490516b2
0x000000000042edc6 : call 0x49051716
0x000000000042edc5 : call 0x49051717
0x000000000042ee2b : call 0x4905177b
0x000000000042ee2a : call 0x4905177c
0x00000000004310f1 : call 0x4d53211c
0x00000000004310f0 : call 0x4d53211d
0x00000000004310f1 : call 0x4d53213a
0x00000000004310f0 : call 0x4d53213b
0x0000000000447740 : call 0x5d4473a1
0x0000000000409828 : call 0x68c623b1
0x000000000040ff1b : call 0x78c68a7a
0x000000000040ff1a : call 0x78c68a7b
0x000000000040ff1b : call 0x78c68aa8
0x000000000040ff1a : call 0x78c68aa9
0x000000000040ff1b : call 0x78c68ab5
0x000000000040ff1a : call 0x78c68ab6
0x000000000040ff1b : call 0x78c68abf
0x000000000040ff1a : call 0x78c68ac0
0x0000000000437807 : call 0x7e05b110
0x0000000000437a57 : call 0x7e05b360
0x0000000000437a57 : call 0x7e05b399
0x000000000040c942 : call 0xffffffff8850d98e
0x000000000040c941 : call 0xffffffff8850d98f
0x0000000000425c98 : call 0xffffffff89425cca
0x0000000000425e2e : call 0xffffffff89425e60
0x0000000000425e2e : call 0xffffffff89425e84
0x0000000000407dec : call 0xffffffff8988b605
0x0000000000407deb : call 0xffffffff8988b606
0x0000000000407dec : call 0xffffffff8988b61c
0x0000000000407deb : call 0xffffffff8988b61d
0x00000000004088c8 : call 0xffffffff8988bcdd
0x00000000004088c7 : call 0xffffffff8988bcde
0x00000000004088c8 : call 0xffffffff8988bcf4
0x00000000004088c7 : call 0xffffffff8988bcf5
0x00000000004088c8 : call 0xffffffff8988bd18
0x00000000004088c7 : call 0xffffffff8988bd19
0x000000000041e5b8 : call 0xffffffff8989e5da
0x00000000004202a9 : call 0xffffffff898a02fe
0x0000000000420343 : call 0xffffffff898a03c3
0x0000000000420403 : call 0xffffffff898a0483
0x000000000042de34 : call 0xffffffff898b1249
0x000000000042de33 : call 0xffffffff898b124a
0x000000000042de34 : call 0xffffffff898b1260
0x000000000042de33 : call 0xffffffff898b1261
0x000000000042de34 : call 0xffffffff898b127f
0x000000000042de33 : call 0xffffffff898b1280
0x0000000000436f5d : call 0xffffffff89abb004
0x0000000000436f5c : call 0xffffffff89abb005
0x0000000000436f5d : call 0xffffffff89abb01c
0x0000000000436f5c : call 0xffffffff89abb01d
0x00000000004435b0 : call 0xffffffff984435e7
0x00000000004450c8 : call 0xffffffffa84451a0
0x00000000004450c8 : call 0xffffffffa84451b0
0x0000000000405730 : call 0xffffffffb846424f
0x00000000004434f8 : call 0xffffffffbc44352c
0x00000000004434f8 : call 0xffffffffbc44355c
0x00000000004434f8 : call 0xffffffffbc44356c
0x0000000000409027 : call 0xffffffffbf031977
0x0000000000409026 : call 0xffffffffbf031978
0x0000000000409067 : call 0xffffffffbf0319b7
0x0000000000409066 : call 0xffffffffbf0319b8
0x00000000004090a7 : call 0xffffffffbf0319f7
0x00000000004090a6 : call 0xffffffffbf0319f8
0x0000000000427053 : call 0xffffffffc897fba7
0x0000000000427052 : call 0xffffffffc897fba8
0x0000000000444dd4 : call 0xffffffffd1444c66
0x000000000043805e : call 0xffffffffe0b5aafb
0x0000000000438ede : call 0xffffffffe0b5b97b
0x0000000000439bfe : call 0xffffffffe0b5c69b
0x000000000043a8be : call 0xffffffffe0b5d35b
0x000000000043b57e : call 0xffffffffe0b5e01b
0x000000000043c25e : call 0xffffffffe0b5ecfb
0x000000000043d01e : call 0xffffffffe0b5fabb
0x000000000043dd9e : call 0xffffffffe0b6083b
0x000000000043f1de : call 0xffffffffe0b61c7b
0x000000000043fffe : call 0xffffffffe0b62a9b
0x0000000000440c7e : call 0xffffffffe0b6371b
0x00000000004418fe : call 0xffffffffe0b6439b
0x000000000044285e : call 0xffffffffe0b652fb
0x0000000000407b32 : call 0xffffffffe908049e
0x0000000000407b31 : call 0xffffffffe908049f
0x0000000000407b32 : call 0xffffffffe90804c0
0x0000000000407b31 : call 0xffffffffe90804c1
0x000000000040c2b2 : call 0xffffffffe9084c0a
0x000000000040c2b1 : call 0xffffffffe9084c0b
0x000000000040c605 : call 0xffffffffe9084f5d
0x000000000040c604 : call 0xffffffffe9084f5e
0x000000000040c605 : call 0xffffffffe9084fa8
0x000000000040c604 : call 0xffffffffe9084fa9
0x0000000000410d9f : call 0xffffffffe9089715
0x0000000000410d9e : call 0xffffffffe9089716
0x0000000000410d9f : call 0xffffffffe9089723
0x0000000000410d9e : call 0xffffffffe9089724
0x0000000000410d9f : call 0xffffffffe908973d
0x0000000000410d9e : call 0xffffffffe908973e
0x00000000004274de : call 0xffffffffe909fe36
0x00000000004274dd : call 0xffffffffe909fe37
0x00000000004274de : call 0xffffffffe909fe61
0x00000000004274dd : call 0xffffffffe909fe62
0x00000000004274de : call 0xffffffffe909fe7f
0x00000000004274dd : call 0xffffffffe909fe80
0x0000000000427705 : call 0xffffffffe90a005f
0x0000000000427704 : call 0xffffffffe90a0060
0x0000000000427705 : call 0xffffffffe90a0074
0x0000000000427704 : call 0xffffffffe90a0075
0x0000000000427705 : call 0xffffffffe90a007d
0x0000000000427704 : call 0xffffffffe90a007e
0x0000000000427705 : call 0xffffffffe90a009a
0x0000000000427704 : call 0xffffffffe90a009b
0x000000000042c06d : call 0xffffffffe90a49c8
0x000000000042c06c : call 0xffffffffe90a49c9
0x000000000042c06d : call 0xffffffffe90a49da
0x000000000042c06c : call 0xffffffffe90a49db
0x000000000042c06d : call 0xffffffffe90a49e8
0x000000000042c06c : call 0xffffffffe90a49e9
0x000000000042c06d : call 0xffffffffe90a4a1b
0x000000000042c06c : call 0xffffffffe90a4a1c
0x000000000042c433 : call 0xffffffffe90a4d92
0x000000000042c432 : call 0xffffffffe90a4d93
0x000000000042c433 : call 0xffffffffe90a4da4
0x000000000042c432 : call 0xffffffffe90a4da5
0x000000000042c433 : call 0xffffffffe90a4db5
0x000000000042c432 : call 0xffffffffe90a4db6
0x000000000042c433 : call 0xffffffffe90a4dda
0x000000000042c432 : call 0xffffffffe90a4ddb
0x000000000042e5fc : call 0xffffffffe90a6f5b
0x000000000042e5fb : call 0xffffffffe90a6f5c
0x000000000042e5fc : call 0xffffffffe90a6f6d
0x000000000042e5fb : call 0xffffffffe90a6f6e
0x000000000042e5fc : call 0xffffffffe90a6f91
0x000000000042e5fb : call 0xffffffffe90a6f92
0x000000000042e5fc : call 0xffffffffe90a6fa7
0x000000000042e5fb : call 0xffffffffe90a6fa8
0x000000000042e694 : call 0xffffffffe90a6ff3
0x000000000042e693 : call 0xffffffffe90a6ff4
0x000000000042e694 : call 0xffffffffe90a7005
0x000000000042e693 : call 0xffffffffe90a7006
0x000000000042e694 : call 0xffffffffe90a7029
0x000000000042e693 : call 0xffffffffe90a702a
0x000000000042e694 : call 0xffffffffe90a703f
0x000000000042e693 : call 0xffffffffe90a7040
0x000000000042e94d : call 0xffffffffe90a72b9
0x000000000042e94c : call 0xffffffffe90a72ba
0x000000000042e94d : call 0xffffffffe90a72ee
0x000000000042e94c : call 0xffffffffe90a72ef
0x000000000042e9a5 : call 0xffffffffe90a7311
0x000000000042e9a4 : call 0xffffffffe90a7312
0x000000000042e9a5 : call 0xffffffffe90a7342
0x000000000042e9a4 : call 0xffffffffe90a7343
0x00000000004317fa : call 0xffffffffe90aa197
0x00000000004317f9 : call 0xffffffffe90aa198
0x00000000004345a2 : call 0xfffffffff3682ebd
0x00000000004345a1 : call 0xfffffffff3682ebe
0x000000000041b3ff : call 0xfffffffffbfe9d28
0x000000000041b3fe : call 0xfffffffffbfe9d29
0x000000000041b3ff : call 0xfffffffffbfe9d3d
0x000000000041b3fe : call 0xfffffffffbfe9d3e
0x000000000041b3ff : call 0xfffffffffbfe9d63
0x000000000041b3fe : call 0xfffffffffbfe9d64
0x0000000000411b0a : call 0xfffffffffd9a045f
0x0000000000411b09 : call 0xfffffffffd9a0460
0x00000000004320fd : call 0xfffffffffdad0a16
0x00000000004320fc : call 0xfffffffffdad0a17
0x0000000000418fe4 : call 0xfffffffffef5791d
0x0000000000418fe3 : call 0xfffffffffef5791e
0x0000000000418fe4 : call 0xfffffffffef57932
0x0000000000418fe3 : call 0xfffffffffef57933
0x00000000004259db : call 0xffffffffff04432c
0x00000000004259da : call 0xffffffffff04432d
0x00000000004259db : call 0xffffffffff044341
0x00000000004259da : call 0xffffffffff044342
0x00000000004042b8 : call 0xffffffffff40864b
0x000000000041deaf : call 0xffffffffff422277
0x0000000000437de9 : call qword ptr [r12 + rbx*8]
0x000000000041f30e : call qword ptr [rax + 0x48858b48]
0x0000000000443e57 : call qword ptr [rax + 0x6400004f]
0x00000000004449ef : call qword ptr [rax - 0x26ffff80]
0x00000000004447c7 : call qword ptr [rax - 0x31ffff89]
0x0000000000444807 : call qword ptr [rax - 0x39ffff88]
0x0000000000444787 : call qword ptr [rax - 0x7ffff8a]
0x000000000044366f : call qword ptr [rax]
0x00000000004475c3 : call qword ptr [rbx + 1]
0x000000000044a373 : call qword ptr [rbx]
0x00000000004139e1 : call qword ptr [rcx]
0x0000000000447783 : call qword ptr [rdi]
0x0000000000445af3 : call qword ptr [rdx]
0x000000000044a15b : call qword ptr [rip + 1]
0x000000000044e71b : call qword ptr [rip]
0x0000000000437dea : call qword ptr [rsp + rbx*8]
0x0000000000444a77 : call rax
0x0000000000448e03 : call rbx
0x000000000041de83 : call rcx
0x000000000044593b : call rdi
0x0000000000448203 : call rdx
0x000000000040637d : call rsi
0x000000000044eee3 : call rsp
0x0000000000422623 : cdq ; adc dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000040e39c : cdq ; add byte ptr [r8 - 0x75], cl ; clc ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000445011 : cdq ; add byte ptr [rax], al ; ret 0xfe96
0x000000000041fa33 : cdq ; jle 0x41fa3c ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000448328 : cdq ; jle 0x44832a ; jmp qword ptr [rsi]
0x00000000004101e0 : cdq ; or byte ptr [rax], al ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x00000000004275af : cdq ; or eax, 0x89480000 ; ret 0x8b48
0x000000000041ffce : cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41ffec ; jmp rsp
0x000000000040b61c : cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b5ec : cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5fd : cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000409b10 : cdqe ; mov rdx, qword ptr [rbp - 0x38] ; add rdx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d6c
0x00000000004249ee : cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a0c
0x0000000000424a48 : cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a66
0x0000000000424aa2 : cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ac0
0x0000000000424994 : cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249b2
0x00000000004042ae : clc ; adc byte ptr [rdi - 0x25], dh ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000427264 : clc ; add al, 0x77 ; mov rax, r8 ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x000000000041ef2f : clc ; add al, 0xf ; xchg dword ptr [rdx + rax], ecx ; add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000040b215 : clc ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000443cf8 : clc ; add byte ptr [r8], al ; movabs al, byte ptr [0xc000004a18fffcc1] ; sar esp, -1 ; cmp byte ptr [rdx], cl ; add dl, dl ; sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d91 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000443b58 : clc ; add byte ptr [r8], al ; sbb byte ptr [rax + 0x4420fffc], al ; add byte ptr [rax], al ; jle 0x443b2d ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x000000000044a52a : clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000405d0c : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xb848
0x000000000044f80b : clc ; add dword ptr [rax], eax ; ret
0x00000000004077ad : clc ; add eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x0000000000405cc6 : clc ; add eax, 0x4855c35d ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000423a77 : clc ; add eax, dword ptr [rax] ; add al, ch ; cld ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004232c2 : clc ; add eax, dword ptr [rax] ; add al, ch ; cmc ; add edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423549 : clc ; add eax, dword ptr [rax] ; add al, ch ; outsb dx, byte ptr [rsi] ; add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000408328 : clc ; add eax, dword ptr [rax] ; add cl, cl ; ret
0x000000000040504e : clc ; add ebx, dword ptr [rbp - 0x3d] ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000404bfa : clc ; add ebx, ebp ; fimul dword ptr [rax - 0x75] ; clc ; add rax, 1 ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000041102e : clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000414c63 : clc ; add ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000404c01 : clc ; add rax, 1 ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000041025f : clc ; add rax, 8 ; pop rbp ; ret
0x0000000000435b6b : clc ; dec dword ptr [rdi] ; xchg eax, esp ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x000000000041ff38 : clc ; jne 0x41ff43 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004101ff : clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041097c : clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000041020f : clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041098c : clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000041580f : clc ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004067d8 : clc ; leave ; ret
0x000000000041f670 : clc ; mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x000000000041eca7 : clc ; mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x000000000040f67b : clc ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000437b05 : clc ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000436d23 : clc ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x0000000000435e43 : clc ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435f85 : clc ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000435f8d : clc ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x000000000040b6bf : clc ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b71f ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b71f ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6be : clc ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b720 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b720 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6e6 : clc ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b70d : clc ; mov byte ptr [rax + 0x8d], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7c1 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7c1 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7c1 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b70c : clc ; mov byte ptr [rax + 0x8d], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7c2 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7c2 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7c2 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b75e : clc ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b785 : clc ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d3d1 : clc ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d3bc : clc ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d9ad : clc ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004308c0 : clc ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x00000000004308ab : clc ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041065c : clc ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x000000000041d3aa : clc ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040b742 : clc ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b750 : clc ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041f669 : clc ; mov dword ptr [rax + 4], edx ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x000000000041d3b1 : clc ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000410965 : clc ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000041db14 : clc ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000430651 : clc ; mov dword ptr [rbp - 0xc], esi ; mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x000000000040b53f : clc ; mov dword ptr [rbp - 0xc], esi ; mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b611 : clc ; mov dword ptr [rbp - 0xc], esi ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040e090 : clc ; mov eax, 0xff30002 ; pop rsi ; ror dword ptr [rax - 0x75], 0x45 ; cwde ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b6d8 : clc ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b706 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6d7 : clc ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b707 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b726 : clc ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7a8 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7a8 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b725 : clc ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7a9 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7a9 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b734 : clc ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b79a ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b733 : clc ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b79b ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041db0a : clc ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d98c : clc ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9da ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000041d98b : clc ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9db ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000437ad7 : clc ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b3f ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b3f ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b3f ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437ad6 : clc ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b40 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b40 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b40 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000040b5e8 : clc ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5f9 : clc ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5c4 : clc ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040e900 : clc ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040b618 : clc ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b475 : clc ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040e399 : clc ; mov edx, 0x4399b8 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040b546 : clc ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x00000000004274c2 : clc ; mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x000000000043162c : clc ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043165c : clc ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041db39 : clc ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004101f3 : clc ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410970 : clc ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435903 : clc ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b58 : clc ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000041d3d9 : clc ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x00000000004082d7 : clc ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000043590f : clc ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000410207 : clc ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410984 : clc ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000043591b : clc ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000410217 : clc ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410994 : clc ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435e37 : clc ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435927 : clc ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000041021f : clc ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000435f79 : clc ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000435933 : clc ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000043593f : clc ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x00000000004358f7 : clc ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b4c : clc ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x00000000004082b3 : clc ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000410afa : clc ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x00000000004358ec : clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b41 : clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000410aec : clc ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040f4db : clc ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x00000000004082a5 : clc ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000040f5a6 : clc ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406f22 : clc ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004307b7 : clc ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0x18 ; pop rbp ; ret
0x00000000004306fd : clc ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0xc ; pop rbp ; ret
0x000000000040978b : clc ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000410ad9 : clc ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000409105 : clc ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040faa5 : clc ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000041063b : clc ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000406f13 : clc ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040b40f : clc ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040594f : clc ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405059 : clc ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cd1 : clc ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000405d61 : clc ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f5ef : clc ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f49f : clc ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x0000000000410233 : clc ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f63d : clc ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000405961 : clc ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000407d69 : clc ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000043149d : clc ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314b2 : clc ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414512 : clc ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431489 : clc ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040f819 : clc ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x0000000000427438 : clc ; mov rax, qword ptr [rax + 0x180] ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x0000000000437af1 : clc ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b25 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437af0 : clc ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b26 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437ae1 : clc ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b35 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b35 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437ae0 : clc ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b36 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b36 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000041453b : clc ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414550 : clc ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414527 : clc ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004100de : clc ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d718 : clc ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d771 : clc ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d706 : clc ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d744 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d705 : clc ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d745 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d762 : clc ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d79a ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d761 : clc ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d79b ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d7fd : clc ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x18] ; add eax, 0x168 ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x0000000000431654 : clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6d7 : clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d773 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d6d6 : clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d774 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d733 : clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7c9 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d732 : clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7ca ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d483 : clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d563 : clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d68a : clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5f5 : clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db1b : clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d997 : clc ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000405cf5 : clc ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405037 : clc ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405caf : clc ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bf5 : clc ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000431474 : clc ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040f59b : clc ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405061 : clc ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cd9 : clc ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000406d35 : clc ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000405d00 : clc ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405042 : clc ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cba : clc ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410c00 : clc ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x000000000041025b : clc ; mov rax, qword ptr [rbp - 8] ; add rax, 8 ; pop rbp ; ret
0x000000000041eca3 : clc ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x0000000000436d1f : clc ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x00000000004308a7 : clc ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x0000000000410961 : clc ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000437ad3 : clc ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b43 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b43 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b43 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x00000000004101ef : clc ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000407d65 : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040f815 : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x00000000004100da : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d6d3 : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d777 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d72f : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7cd ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000405cf1 : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405033 : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cab : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bf1 : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x000000000040f597 : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d31 : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000041f643 : clc ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec91 : clc ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x0000000000436d0d : clc ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x000000000040b6ab : clc ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b733 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b733 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b771 : clc ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9bd : clc ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x0000000000405e45 : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408a53 : clc ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085b7 : clc ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000405d69 : clc ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x00000000004082bb : clc ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000040f5f7 : clc ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4a7 : clc ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x00000000004082ac : clc ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000040fc59 : clc ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x000000000040979b : clc ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000409111 : clc ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000041023b : clc ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f645 : clc ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fab1 : clc ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410647 : clc ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x00000000004097a6 : clc ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000040911c : clc ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x00000000004097b2 : clc ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000041d498 : clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d578 : clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d69f : clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d60a : clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6df : clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d76b ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d73b : clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7c1 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d48b : clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d56b : clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d692 : clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5fd : clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db23 : clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004085db : clc ; movabs rax, 0x1555555555555555 ; pop rbp ; ret
0x00000000004156ad : clc ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x0000000000411203 : clc ; movabs rax, 0x333333333333333 ; pop rbp ; ret
0x000000000041103f : clc ; movabs rax, 0x3ffffffffffffff ; pop rbp ; ret
0x0000000000408867 : clc ; movabs rax, 0x7ffffffffffffff ; pop rbp ; ret
0x000000000041da61 : clc ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000040b41f : clc ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b434 : clc ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b449 : clc ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b461 : clc ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000041d9a4 : clc ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000040b4b7 : clc ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4fb : clc ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e355 : clc ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041da58 : clc ; movss xmm0, dword ptr [rax + 0x38] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0db : clc ; movss xmm0, dword ptr [rax + 0x3c8] ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0ef : clc ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e103 : clc ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e117 : clc ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e12b : clc ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4d8 : clc ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b51c : clc ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e375 : clc ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4e6 : clc ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b52a : clc ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e383 : clc ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4ca : clc ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b50e : clc ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e368 : clc ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000411296 : clc ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041d4af : clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5df : clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d54d : clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d58f : clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d671 : clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d46a : clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041dc48 : clc ; movss xmm0, dword ptr [rip + 0x1e3e3] ; movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000041d399 : clc ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d388 : clc ; movss xmm0, dword ptr [rip + 0x1ecaf] ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x00000000004112cb : clc ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112c6 : clc ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041d6f2 : clc ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d758 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d74e : clc ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7ae ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db30 : clc ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041f647 : clc ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec95 : clc ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x0000000000436d11 : clc ; movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x000000000040b6c9 : clc ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b715 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b715 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6c8 : clc ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b716 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b716 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6af : clc ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b72f ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b72f ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6ae : clc ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b730 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b730 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b717 : clc ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7b7 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7b7 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7b7 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b716 : clc ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7b8 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7b8 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7b8 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b775 : clc ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9c1 : clc ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x000000000041d97d : clc ; movzx eax, byte ptr [rax + 1] ; xor eax, 1 ; test al, al ; je 0x41d9e9 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9e9 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000041d97c : clc ; movzx eax, byte ptr [rax + 1] ; xor eax, 1 ; test al, al ; je 0x41d9ea ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9ea ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004308b3 : clc ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041dafc : clc ; movzx eax, byte ptr [rax] ; xor eax, 1 ; test al, al ; je 0x41dbaa ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041dafb : clc ; movzx eax, byte ptr [rax] ; xor eax, 1 ; test al, al ; je 0x41dbab ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b493 : clc ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b4a1 : clc ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b485 : clc ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000041129b : clc ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041128d : clc ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112bd : clc ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112a5 : clc ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x0000000000407883 : clc ; nop ; pop rbp ; ret
0x0000000000426d1a : clc ; or eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042c798 : clc ; or eax, dword ptr [rax] ; add byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x00000000004274c8 : clc ; or eax, edx ; pop rbp ; ret
0x0000000000444608 : clc ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; or cl, al ; std ; jmp qword ptr [rax]
0x0000000000424484 : clc ; pop rbp ; ja 0x424b37 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x0000000000405e49 : clc ; pop rbp ; ret
0x0000000000420d45 : clc ; pop rsp ; ja 0x423d1e ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x00000000004439fc : clc ; push rcx ; cld ; push rax ; cmp eax, 0x52250000 ; cld ; call qword ptr [rax]
0x0000000000436fe7 : clc ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037bf
0x000000000041d3c4 : clc ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000437507 : clc ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b7
0x0000000000437497 : clc ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b7
0x0000000000443d14 : clc ; sar esp, -1 ; js 0x443d75 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000415691 : clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000044c251 : clc ; std ; call qword ptr [rcx]
0x0000000000435344 : clc ; std ; dec dword ptr [rax + 0x39] ; ret
0x000000000044c319 : clc ; std ; jmp qword ptr [rsi]
0x0000000000448e00 : clc ; xchg ah, bh ; call rbx
0x00000000004155a6 : cld ; add byte ptr [rax], al ; add cl, cl ; ret
0x000000000043745f : cld ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ef
0x000000000043745e : cld ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037f0
0x000000000040c771 : cld ; add ebp, ecx ; ret
0x000000000040c42a : cld ; add ecx, ebp ; jmp 0xffffffffe940c44a
0x000000000040c429 : cld ; add ecx, ebp ; jmp 0xffffffffe940c44b
0x0000000000443e56 : cld ; call qword ptr [rax + 0x6400004f]
0x000000000044366e : cld ; call qword ptr [rax]
0x00000000004475c2 : cld ; call qword ptr [rbx + 1]
0x00000000004462c2 : cld ; call qword ptr [rcx]
0x0000000000447782 : cld ; call qword ptr [rdi]
0x0000000000447fb2 : cld ; call qword ptr [rdx]
0x0000000000448d3a : cld ; call qword ptr [rip]
0x000000000044343e : cld ; call rax
0x0000000000448e02 : cld ; call rbx
0x0000000000447ada : cld ; call rcx
0x0000000000448202 : cld ; call rdx
0x00000000004437a6 : cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004437b6 : cld ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000443776 : cld ; dec dword ptr [rax + 0x70000033] ; cld ; ljmp ptr [rax - 0x73ffffcd] ; cld ; dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000443406 : cld ; dec dword ptr [rax - 0x29ffffdc] ; or ah, bh ; jmp rax
0x0000000000435e32 : cld ; dec dword ptr [rax - 0x75] ; clc ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435f74 : cld ; dec dword ptr [rax - 0x75] ; clc ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000436907 : cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000435a91 : cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000437dcf : cld ; dec dword ptr [rax - 0x7b] ; in eax, dx ; je 0x437e16 ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000443796 : cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000043745b : cld ; dec dword ptr [rbx - 0x3f7c03bb] ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; sal bl, 0xf ; sub al, al ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037f3
0x0000000000434693 : cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x00000000004437c6 : cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000443786 : cld ; dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000415dc0 : cld ; fdivr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000443b66 : cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443b76 : cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443db6 : cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; fadd st(5), st(0) ; cld ; jmp qword ptr [rax]
0x0000000000443b96 : cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443bfe : cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000443a7e : cld ; inc dword ptr [rax] ; add byte ptr [rax], al ; jno 0x443ae4 ; cld ; jmp qword ptr [rax]
0x0000000000437e47 : cld ; inc dword ptr [rax] ; add byte ptr [rax], al ; sub rsp, 8 ; add rsp, 8 ; ret
0x000000000044362e : cld ; inc dword ptr [rax] ; add byte ptr cs:[rax], al ; cmp spl, r15b ; jmp qword ptr [rax]
0x0000000000443416 : cld ; inc dword ptr [rax] ; and eax, 0xbd60000 ; cld ; jmp qword ptr [rax]
0x0000000000443906 : cld ; inc dword ptr [rax] ; cmp al, byte ptr [rax] ; add byte ptr [rsi + 0x4c], cl ; cld ; jmp qword ptr [rax]
0x0000000000443946 : cld ; inc dword ptr [rax] ; cmp eax, dword ptr [rax] ; add byte ptr [rcx + 0x4d], ah ; cld ; jmp qword ptr [rax]
0x0000000000444066 : cld ; inc dword ptr [rax] ; pop rax ; add byte ptr [rax], al ; pop rsp ; fdiv st(4), st(0) ; jmp qword ptr [rax]
0x0000000000443576 : cld ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000435b68 : cld ; inc dword ptr [rbx - 0x6bf00008] ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x0000000000443c5e : cld ; inc eax ; add byte ptr [r8], r8b ; sub al, 0xb2 ; cld ; jmp rax
0x0000000000443bee : cld ; inc eax ; add byte ptr [rax], r8b ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000443b86 : cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443936 : cld ; inc eax ; cmp al, byte ptr [rax] ; add byte ptr [rax], dh ; cld ; jmp rax
0x00000000004438b6 : cld ; inc eax ; cmp byte ptr [rax], al ; add byte ptr [rbx + rcx*2 - 4], cl ; jmp rax
0x00000000004438f6 : cld ; inc eax ; cmp dword ptr [rax], eax ; add byte ptr [rsi], ah ; cld ; jmp rax
0x0000000000444096 : cld ; inc eax ; pop rax ; add byte ptr [rax], al ; rcr ch, 0xfc ; jmp rax
0x000000000044361e : cld ; inc eax ; sub eax, 0x37ec0000 ; cld ; jmp rax
0x000000000044408e : cld ; jmp qword ptr [rax + 0x55000058]
0x0000000000443d9e : cld ; jmp qword ptr [rax + 0x7600004c]
0x0000000000443616 : cld ; jmp qword ptr [rax - 0x3affffd3]
0x000000000044341e : cld ; jmp qword ptr [rax]
0x0000000000446d3a : cld ; jmp qword ptr [rbx]
0x000000000044720a : cld ; jmp qword ptr [rdi]
0x00000000004468ea : cld ; jmp qword ptr [rdx]
0x0000000000447db2 : cld ; jmp qword ptr [rip]
0x00000000004461ba : cld ; jmp qword ptr [rsi]
0x000000000044340e : cld ; jmp rax
0x0000000000448e2a : cld ; jmp rsp
0x000000000044367e : cld ; lcall ptr [rax + 0x2f] ; add byte ptr [rax], al ; ret
0x0000000000443d1e : cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000443d0e : cld ; lcall ptr [rax + 0x4a] ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d7b ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000443d4e : cld ; lcall ptr [rax + 0x4b] ; add byte ptr [rax], al ; pushfq ; ret
0x0000000000447602 : cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004493da : cld ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x0000000000446a2a : cld ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x00000000004468c2 : cld ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x00000000004306f2 : cld ; leave ; ret
0x00000000004437ae : cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004437be : cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000044377e : cld ; ljmp ptr [rax - 0x73ffffcd] ; cld ; dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000044379e : cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004274bf : cld ; mov dword ptr [rbp - 8], esi ; mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x00000000004274c5 : cld ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x00000000004374da : cld ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e4
0x00000000004374d9 : cld ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e5
0x00000000004112a0 : cld ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000044638c : cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x000000000044648c : cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000443f16 : cld ; push qword ptr [rax + 0x54000052] ; salc ; cld ; call rax
0x0000000000443f56 : cld ; push qword ptr [rax + 0x66000053] ; xlatb ; cld ; call rax
0x0000000000443526 : cld ; push qword ptr [rax + 0x6a000029] ; sub esp, edi ; call rax
0x00000000004439ee : cld ; push qword ptr [rax - 0x1bffffc3] ; push rcx ; cld ; call rax
0x0000000000443a2e : cld ; push qword ptr [rax - 0x43ffffc2] ; push rbx ; cld ; call rax
0x00000000004437fe : cld ; push qword ptr [rax - 0x4cffffcb] ; cld ; call rax
0x000000000044370e : cld ; push qword ptr [rax - 0x77ffffcf] ; cld ; call rax
0x00000000004470ba : cld ; push qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x0000000000443e6e : cld ; push rax ; add byte ptr [r8], r8b ; xor bh, cl ; cld ; call qword ptr [rax]
0x0000000000443a3e : cld ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x0000000000443446 : cld ; push rax ; and eax, 0x181f0000 ; cld ; call qword ptr [rax]
0x00000000004439fe : cld ; push rax ; cmp eax, 0x52250000 ; cld ; call qword ptr [rax]
0x00000000004437ce : cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000044380e : cld ; push rax ; xor eax, 0x46f00000 ; cld ; call qword ptr [rax]
0x000000000044c7f1 : cld ; std ; call qword ptr [rcx]
0x0000000000423a3e : cld ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044cdc1 : cld ; std ; jmp qword ptr [rdx]
0x000000000044c749 : cld ; std ; jmp qword ptr [rsi]
0x000000000044ce61 : cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ceb1 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x000000000044cf29 : cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044cd99 : cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000450165 : cli ; adc al, byte ptr [rax] ; ret
0x00000000004500eb : cli ; adc byte ptr [rax], al ; xchg byte ptr [rdx], al ; add eax, 0xad00118e ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044bf70 : cli ; cmc ; std ; call qword ptr [rcx]
0x0000000000423bce : cli ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c489 : cli ; std ; jmp qword ptr [rsi]
0x0000000000430895 : cmc ; add byte ptr [rax], al ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x0000000000430884 : cmc ; add byte ptr [rax], al ; movss dword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x00000000004498e2 : cmc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x000000000042ea83 : cmc ; add dword ptr [rax], eax ; add cl, cl ; ret
0x000000000040f5e1 : cmc ; add eax, dword ptr [rax] ; add cl, cl ; ret
0x00000000004232c7 : cmc ; add edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000449771 : cmc ; cld ; call rcx
0x0000000000434692 : cmc ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000044cf28 : cmc ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000411f55 : cmc ; ret
0x000000000044bf71 : cmc ; std ; call qword ptr [rcx]
0x000000000044bec9 : cmc ; std ; jmp qword ptr [rsi]
0x0000000000445ab1 : cmc ; sti ; call qword ptr [rip]
0x0000000000445a71 : cmc ; sti ; jmp qword ptr [rax]
0x0000000000445ad1 : cmc ; sti ; jmp qword ptr [rbx + 1]
0x0000000000445a51 : cmc ; sti ; jmp qword ptr [rsi]
0x0000000000443b65 : cmp ah, 0xff ; add byte ptr [rax], r8b ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443b5d : cmp ah, 0xff ; and byte ptr [rax + rax], al ; jle 0x443b28 ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x000000000044362d : cmp ah, bh ; inc dword ptr [rax] ; add byte ptr cs:[rax], al ; cmp spl, r15b ; jmp qword ptr [rax]
0x0000000000443635 : cmp ah, bh ; jmp qword ptr [rax]
0x0000000000438b75 : cmp ah, byte ptr [rax] ; imul r12, qword ptr [rbx + 0x65], 0x2065636e ; imul esp, dword ptr [rbp + 0x79], 0x20 ; imul esi, dword ptr [rbx + 0x20], 0x61766e69 ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c2a ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000447df4 : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 0x72 ; or al, 7 ; or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; jl 0x447e72 ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044949d : cmp al, 0 ; add byte ptr [rsi - 0x40], dh ; cld ; jmp qword ptr [rbx]
0x000000000040d350 : cmp al, 0x22 ; add byte ptr [rax], al ; jmp 0x40d1e0
0x0000000000447ecc : cmp al, 0x26 ; add byte ptr [rax], al ; mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x0000000000448558 : cmp al, 0x82 ; cld ; call qword ptr [rcx]
0x0000000000437805 : cmp al, 0x83 ; call 0x7e05b112
0x0000000000437804 : cmp al, 0x83 ; call 0x7e05b113
0x0000000000437a55 : cmp al, 0x83 ; call 0x7e05b362
0x0000000000437a54 : cmp al, 0x83 ; call 0x7e05b363
0x0000000000437a55 : cmp al, 0x83 ; call 0x7e05b39b
0x0000000000437a54 : cmp al, 0x83 ; call 0x7e05b39c
0x0000000000436fde : cmp al, 0x89 ; ret 0xeac1
0x0000000000429480 : cmp al, 0xa4 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000405c9c : cmp al, 0xb ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000404f6f : cmp al, 0xe8 ; imul esp, ebp, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004436dd : cmp al, 0xfc ; jmp rax
0x0000000000423e22 : cmp al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000423e48 : cmp al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000443939 : cmp al, byte ptr [rax] ; add byte ptr [rax], dh ; cld ; jmp rax
0x0000000000443941 : cmp al, byte ptr [rax] ; add byte ptr [rbx + 0x4d], dl ; cld ; inc dword ptr [rax] ; cmp eax, dword ptr [rax] ; add byte ptr [rcx + 0x4d], ah ; cld ; jmp qword ptr [rax]
0x00000000004492f5 : cmp al, byte ptr [rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x0000000000443931 : cmp al, byte ptr [rax] ; add byte ptr [rcx*2 + 0x3ac0fffc], ah ; add byte ptr [rax], al ; xor byte ptr [rbp - 4], cl ; jmp rax
0x0000000000443909 : cmp al, byte ptr [rax] ; add byte ptr [rsi + 0x4c], cl ; cld ; jmp qword ptr [rax]
0x0000000000443b94 : cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000410be4 : cmp al, byte ptr [rdx] ; add byte ptr [rax], al ; leave ; ret
0x00000000004492f4 : cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x000000000044e741 : cmp bh, 0x44 ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 3 ; ret 0xc02
0x000000000044366d : cmp bh, ah ; call qword ptr [rax]
0x000000000044367d : cmp bh, ah ; lcall ptr [rax + 0x2f] ; add byte ptr [rax], al ; ret
0x0000000000410044 : cmp bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437c82 : cmp bh, byte ptr [rdx - 0x76b70004] ; ret
0x000000000041ffca : cmp bl, byte ptr [0xffffffff88984800] ; xchg eax, esp ; add eax, 0xfffffde0 ; cmp rax, rax ; je 0x41fff0 ; jmp rsp
0x000000000042b2df : cmp bl, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000042d782 : cmp bl, byte ptr [rdi - 3] ; dec ecx ; ret
0x000000000042af44 : cmp bl, byte ptr [rdx] ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000041da5d : cmp byte ptr [rax - 0x75], cl ; clc ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000041d979 : cmp byte ptr [rax - 0x75], cl ; clc ; movzx eax, byte ptr [rax + 1] ; xor eax, 1 ; test al, al ; je 0x41d9ed ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9ed ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004099f3 : cmp byte ptr [rax - 0x75], cl ; enter -0x7cb8, -0x40 ; push rax ; mov rdi, rax ; call 0x405cb2
0x000000000041102a : cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000424031 : cmp byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004438b9 : cmp byte ptr [rax], al ; add byte ptr [rbx + rcx*2 - 4], cl ; jmp rax
0x00000000004438b1 : cmp byte ptr [rax], al ; add byte ptr [rdx], ah ; cld ; inc eax ; cmp byte ptr [rax], al ; add byte ptr [rbx + rcx*2 - 4], cl ; jmp rax
0x0000000000406e01 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000040aa9d : cmp byte ptr [rbx + 0x6348d855], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040aac2 : cmp byte ptr [rbx + 0x6348d855], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000040ee3e : cmp byte ptr [rbx + 0x6348ec55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040ee6e : cmp byte ptr [rbx + 0x6348ec55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000040c714 : cmp byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040c6d3 : cmp byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000443d48 : cmp byte ptr [rbx], cl ; add byte ptr [rax + 0x58fffcc3], al ; add byte ptr [r8], al ; pushfq ; ret
0x0000000000411027 : cmp byte ptr [rcx - 0x7cb7c7b0], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000404fd2 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041fe5c : cmp byte ptr [rcx], bh ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000040f834 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000417412 : cmp byte ptr [rdi - 1], ch ; dec dword ptr [rax - 0x77] ; pop rbp ; loopne 0x4173e9 ; or al, 0 ; add byte ptr [rax], al ; call 0x4036cf
0x000000000041da4d : cmp byte ptr [rdi], cl ; sal dword ptr cs:[rdi + 2], -0x15 ; adc cl, byte ptr [rax - 0x75] ; clc ; movss xmm0, dword ptr [rax + 0x38] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000044a220 : cmp byte ptr [rdx - 3], al ; jmp qword ptr [rsi]
0x0000000000410b50 : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; leave ; ret
0x0000000000443d08 : cmp byte ptr [rdx], cl ; add dl, dl ; sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d81 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x000000000044a179 : cmp ch, bh ; call qword ptr [rdx]
0x000000000042ed92 : cmp cl, byte ptr [rbp + rdi*8 - 1] ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000406f3e : cmp cl, byte ptr [rbx] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000044a350 : cmp cl, byte ptr [rcx - 3] ; call qword ptr [rdx]
0x0000000000443f14 : cmp dh, dl ; cld ; push qword ptr [rax + 0x54000052] ; salc ; cld ; call rax
0x0000000000444904 : cmp dl, byte ptr [rbx - 2] ; call rax
0x000000000042bcdf : cmp dl, byte ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004067d1 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x0000000000423f54 : cmp dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000423f7a : cmp dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004438f1 : cmp dword ptr [rax], eax ; add byte ptr [rbx], cl ; cld ; inc eax ; cmp dword ptr [rax], eax ; add byte ptr [rsi], ah ; cld ; jmp rax
0x00000000004491a5 : cmp dword ptr [rax], eax ; add byte ptr [rdi - 0x41], dl ; cld ; jmp qword ptr [rsi]
0x00000000004438f9 : cmp dword ptr [rax], eax ; add byte ptr [rsi], ah ; cld ; jmp rax
0x0000000000443901 : cmp dword ptr [rax], eax ; add byte ptr [rsp + rcx*2], dh ; cld ; inc dword ptr [rax] ; cmp al, byte ptr [rax] ; add byte ptr [rsi + 0x4c], cl ; cld ; jmp qword ptr [rax]
0x0000000000437b08 : cmp dword ptr [rax], eax ; nop ; pop rbp ; ret
0x000000000041de9e : cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e115 ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000041de94 : cmp dword ptr [rbp - 0x1c], 9 ; jg 0x41e239 ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e11f ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x0000000000436d15 : cmp dword ptr [rbp - 0x3d], ebx ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x0000000000424985 : cmp dword ptr [rbp - 0x84], 3 ; jg 0x4249fe ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249c1
0x00000000004249df : cmp dword ptr [rbp - 0x88], 3 ; jg 0x424a58 ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a1b
0x0000000000424a39 : cmp dword ptr [rbp - 0x8c], 3 ; jg 0x424ab2 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a75
0x0000000000424a93 : cmp dword ptr [rbp - 0x90], 3 ; jg 0x424b0c ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424acf
0x0000000000436d26 : cmp dword ptr [rcx], eax ; nop ; pop rbp ; ret
0x0000000000449c60 : cmp dword ptr [rcx], esi ; std ; jmp qword ptr [rsi]
0x00000000004090b3 : cmp dword ptr [rdi - 0x366f0001], esp ; ret
0x000000000042d268 : cmp dword ptr [rdx], ecx ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000407e4a : cmp dword ptr [rip - 0x76b80000], eax ; ret
0x0000000000427549 : cmp dword ptr [rip - 0x76b80000], ecx ; ret 0x8b48
0x00000000004042ad : cmp eax, 0x10 ; ja 0x40429c ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000041d70e : cmp eax, 0x167 ; jle 0x41d73c ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x00000000004380b3 : cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000041eb3f : cmp eax, 0x48fffe4f ; add esp, 0x70 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004439e9 : cmp eax, 0x513d0000 ; cld ; push qword ptr [rax - 0x1bffffc3] ; push rcx ; cld ; call rax
0x00000000004439f1 : cmp eax, 0x51e40000 ; cld ; call rax
0x00000000004439f9 : cmp eax, 0x51f80000 ; cld ; push rax ; cmp eax, 0x52250000 ; cld ; call qword ptr [rax]
0x0000000000443a01 : cmp eax, 0x52250000 ; cld ; call qword ptr [rax]
0x0000000000420d44 : cmp eax, 0x5c ; ja 0x423d1f ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x0000000000424483 : cmp eax, 0x5d ; ja 0x424b38 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x00000000004142df : cmp eax, 0x90fffef5 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004439ec : cmp eax, 0xb0fffc51 ; cmp eax, 0x51e40000 ; cld ; call rax
0x0000000000449745 : cmp eax, 0xc2d20000 ; cld ; call rax
0x0000000000403c0d : cmp eax, 0xe ; mov rbp, rsp ; jbe 0x403c48 ; mov eax, 0 ; test rax, rax ; je 0x403c48 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000419b0f : cmp eax, 0xf000218 ; push rdi ; ret 0x8b48
0x000000000044976d : cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000041e52d : cmp eax, 4 ; ja 0x41e7ef ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e858 : cmp eax, 4 ; ja 0x41ea04 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cdb0] ; jmp rax
0x000000000041ef2e : cmp eax, 4 ; ja 0x41f156 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000041f177 : cmp eax, 4 ; ja 0x41f323 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db78] ; jmp rax
0x0000000000427263 : cmp eax, 4 ; ja 0x4272c3 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x0000000000423d56 : cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004493fd : cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x00000000004493d5 : cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x0000000000423d7c : cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000443949 : cmp eax, dword ptr [rax] ; add byte ptr [rcx + 0x4d], ah ; cld ; jmp qword ptr [rax]
0x000000000041ffd8 : cmp eax, eax ; je 0x41ffe2 ; jmp rsp
0x00000000004458c7 : cmp ebp, dword ptr [rdx] ; xor esp, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458ea ; jmp rcx
0x000000000044a779 : cmp ebp, edi ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000040f583 : cmp ebx, eax ; setne al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000437df2 : cmp ebx, ebp ; jne 0x437df2 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042d6bf : cmp ecx, dword ptr [rax] ; add byte ptr [rax], al ; leave ; ret
0x0000000000435bc3 : cmp edi, ebx ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040f603 : cmp edx, eax ; sete al ; pop rbp ; ret
0x000000000040f4b3 : cmp edx, eax ; setne al ; pop rbp ; ret
0x0000000000435173 : cmp edx, ebp ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000418481 : cmp esi, dword ptr [rdx - 0x76b70002] ; ret
0x0000000000443b7d : cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x00000000004485e1 : cmp esp, 0xff ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000042917b : cmp esp, dword ptr [rbx] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; leave ; ret
0x000000000044c748 : cmp esp, edi ; std ; jmp qword ptr [rsi]
0x00000000004493d4 : cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x0000000000403c0c : cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c49 ; mov eax, 0 ; test rax, rax ; je 0x403c49 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x000000000041ffd7 : cmp rax, rax ; je 0x41ffe3 ; jmp rsp
0x000000000040f582 : cmp rbx, rax ; setne al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000437df1 : cmp rbx, rbp ; jne 0x437df3 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f602 : cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4b2 : cmp rdx, rax ; setne al ; pop rbp ; ret
0x0000000000443b7c : cmp rsp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443634 : cmp spl, r15b ; jmp qword ptr [rax]
0x0000000000412516 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000044cdc0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000041d39e : cmpsb byte ptr [rsi], byte ptr [rdi] ; in al, dx ; add dword ptr [rax], eax ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000412916 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, 0x8948ffff ; ret
0x000000000040729e : cmpsb byte ptr [rsi], byte ptr [rdi] ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431e16 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000425e54 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044457d : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x000000000041859a : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, 0xff30002 ; pop rsi ; ret 0xff3
0x00000000004070a7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042913d : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000444585 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rax
0x0000000000444584 : cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x0000000000436fed : cvtpi2ps xmm0, mm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b9
0x0000000000437468 : cvtpi2ps xmm0, mm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e6
0x0000000000432036 : cvtpi2ps xmm0, mm0 ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e396
0x0000000000412027 : cvtpi2ps xmm0, mm0 ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3a6
0x0000000000412052 : cvtpi2ps xmm0, mm0 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e37b
0x000000000041d6ec : cvtpi2ps xmm0, mm2 ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d75e ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d748 : cvtpi2ps xmm0, mm2 ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7b4 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db42 : cvtpi2ps xmm0, mm2 ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043205e : cvtpi2ps xmm0, qword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e36e
0x00000000004374d7 : cvtpi2ps xmm0, qword ptr [rbp - 4] ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e7
0x000000000043750d : cvtpi2ps xmm1, mm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b1
0x000000000043749d : cvtpi2ps xmm1, mm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b1
0x000000000043205d : cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e36f
0x00000000004374d6 : cvtsi2ss xmm0, dword ptr [rbp - 4] ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e8
0x0000000000436fec : cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ba
0x0000000000437467 : cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e7
0x0000000000432035 : cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e397
0x0000000000412026 : cvtsi2ss xmm0, eax ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3a7
0x0000000000412051 : cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e37c
0x000000000041d6eb : cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d75f ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d747 : cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7b5 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db41 : cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043750c : cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b2
0x000000000043749c : cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b2
0x000000000041d6fd : cvttps2pi mm2, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d74d ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d759 : cvttps2pi mm2, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7a3 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041de71 : cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041d6fc : cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d74e ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d758 : cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7a4 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041de70 : cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000436b2b : cwde ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040b737 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x482775c0], al ; mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b753 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000443d20 : cwde ; add byte ptr [rax], al ; ret 0xfffc
0x00000000004114e4 : cwde ; and eax, 0x8d48ffff ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000444508 : cwde ; imul eax, dword ptr [rax], 0 ; rcr dword ptr [rbp + 0x6bc0fffd], cl ; add byte ptr [rax], al ; add al, 0x9e ; std ; jmp rax
0x0000000000444be0 : cwde ; mov byte ptr [rax], al ; add byte ptr [rsp + rdi*2 - 0x77470002], cl ; add byte ptr [rax], al ; push rsi ; jge 0x444bfc ; jmp rax
0x000000000041ffcf : cwde ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41ffeb ; jmp rsp
0x000000000040b61d : cwde ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b5ed : cwde ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5fe : cwde ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000041e523 : cwde ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7f9 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e522 : cwde ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7fa ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e51c : cwde ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e800 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e51b : cwde ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e801 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x0000000000409b11 : cwde ; mov rdx, qword ptr [rbp - 0x38] ; add rdx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d6b
0x000000000040e067 : cwde ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e09b : cwde ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e04b : cwde ; movss xmm0, dword ptr [rax + 0x3e8] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e07f : cwde ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x00000000004249ef : cwde ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a0b
0x0000000000424a49 : cwde ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a65
0x0000000000424aa3 : cwde ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424abf
0x0000000000424995 : cwde ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249b1
0x000000000040e073 : cwde ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040fa57 : cwde ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000042b5a8 : cwde ; ret 0xffff
0x0000000000421d24 : cwde ; sbb esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000443560 : cwde ; sub al, byte ptr [rax] ; add byte ptr [rdx - 0x470003d6], ah ; sub al, byte ptr [rax] ; add byte ptr [rsi - 0x270003d6], bh ; sub al, byte ptr [rax] ; add byte ptr [rax], dh ; sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x00000000004275d8 : dec byte ptr [rax + rax] ; add bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000432a2e : dec byte ptr [rbx] ; std ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000406d6b : dec dword ptr [rax + 0x29] ; ret
0x00000000004437a7 : dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000404cf8 : dec dword ptr [rax + 0x39] ; ret
0x00000000004437b7 : dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004249ab : dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0xf36c
0x000000000044437f : dec dword ptr [rax + 0x65] ; add byte ptr [rax], al ; sub al, 0x92 ; std ; ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044438f : dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000443777 : dec dword ptr [rax + 0x70000033] ; cld ; ljmp ptr [rax - 0x73ffffcd] ; cld ; dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000040b212 : dec dword ptr [rax + 5] ; clc ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000443407 : dec dword ptr [rax - 0x29ffffdc] ; or ah, bh ; jmp rax
0x00000000004249ed : dec dword ptr [rax - 0x68] ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a0d
0x0000000000424a47 : dec dword ptr [rax - 0x68] ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a67
0x0000000000424aa1 : dec dword ptr [rax - 0x68] ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ac1
0x0000000000424993 : dec dword ptr [rax - 0x68] ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249b3
0x00000000004114e7 : dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000412037 : dec dword ptr [rax - 0x75] ; adc bl, sil ; movups xmm1, xmmword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e396
0x000000000040fcc8 : dec dword ptr [rax - 0x75] ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000040ff54 : dec dword ptr [rax - 0x75] ; adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000409b33 : dec dword ptr [rax - 0x75] ; adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000409b97 : dec dword ptr [rax - 0x75] ; adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000409bfb : dec dword ptr [rax - 0x75] ; adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000409c5e : dec dword ptr [rax - 0x75] ; adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000409cc2 : dec dword ptr [rax - 0x75] ; adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4805
0x0000000000409d26 : dec dword ptr [rax - 0x75] ; adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000000000409d89 : dec dword ptr [rax - 0x75] ; adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4807
0x0000000000409ded : dec dword ptr [rax - 0x75] ; adc byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000412062 : dec dword ptr [rax - 0x75] ; adc byte ptr [rbx - 0x37d7f100], cl ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e36b
0x0000000000406e59 : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040ff62 : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000406e47 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042725c : dec dword ptr [rax - 0x75] ; add byte ptr [rbx - 0x77cf3c0], cl ; add al, 0x77 ; mov rax, r8 ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x00000000004089e1 : dec dword ptr [rax - 0x75] ; add cl, cl ; ret
0x000000000040a255 : dec dword ptr [rax - 0x75] ; and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040a2ba : dec dword ptr [rax - 0x75] ; and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000040a31f : dec dword ptr [rax - 0x75] ; and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4803
0x000000000040a383 : dec dword ptr [rax - 0x75] ; and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000040a3e8 : dec dword ptr [rax - 0x75] ; and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4805
0x000000000040a44d : dec dword ptr [rax - 0x75] ; and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000000000040a4b1 : dec dword ptr [rax - 0x75] ; and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4807
0x000000000040a516 : dec dword ptr [rax - 0x75] ; and byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000040c93e : dec dword ptr [rax - 0x75] ; call 0xffffffff8850d992
0x0000000000407de8 : dec dword ptr [rax - 0x75] ; call 0xffffffff8988b609
0x0000000000407de8 : dec dword ptr [rax - 0x75] ; call 0xffffffff8988b620
0x000000000040c2ae : dec dword ptr [rax - 0x75] ; call 0xffffffffe9084c0e
0x000000000040c601 : dec dword ptr [rax - 0x75] ; call 0xffffffffe9084f61
0x000000000040c601 : dec dword ptr [rax - 0x75] ; call 0xffffffffe9084fac
0x000000000041580b : dec dword ptr [rax - 0x75] ; clc ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000435e33 : dec dword ptr [rax - 0x75] ; clc ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435f75 : dec dword ptr [rax - 0x75] ; clc ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x000000000040fc55 : dec dword ptr [rax - 0x75] ; clc ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x000000000041568d : dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000040aa99 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rbx + 0x6348d855], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040aabe : dec dword ptr [rax - 0x75] ; cmp byte ptr [rbx + 0x6348d855], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000040ee3a : dec dword ptr [rax - 0x75] ; cmp byte ptr [rbx + 0x6348ec55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040ee6a : dec dword ptr [rax - 0x75] ; cmp byte ptr [rbx + 0x6348ec55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004074bb : dec dword ptr [rax - 0x75] ; enter -0x74b8, 0x40 ; adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000408406 : dec dword ptr [rax - 0x75] ; loopne 0x408461 ; add esp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041139c : dec dword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x0000000000408a4f : dec dword ptr [rax - 0x75] ; push rbp ; clc ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085b3 : dec dword ptr [rax - 0x75] ; push rbp ; clc ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042f309 : dec dword ptr [rax - 0x75] ; push rdx ; or byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000409eb1 : dec dword ptr [rax - 0x75] ; sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000409f16 : dec dword ptr [rax - 0x75] ; sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000409f7b : dec dword ptr [rax - 0x75] ; sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000409fdf : dec dword ptr [rax - 0x75] ; sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000040a044 : dec dword ptr [rax - 0x75] ; sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4805
0x000000000040a0a9 : dec dword ptr [rax - 0x75] ; sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000000000040a10d : dec dword ptr [rax - 0x75] ; sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4807
0x000000000040a172 : dec dword ptr [rax - 0x75] ; sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000040aa28 : dec dword ptr [rax - 0x75] ; sub byte ptr [rbx + 0x6348d855], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040aa50 : dec dword ptr [rax - 0x75] ; sub byte ptr [rbx + 0x6348d855], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000040ed88 : dec dword ptr [rax - 0x75] ; sub byte ptr [rbx + 0x6348ec55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040edde : dec dword ptr [rax - 0x75] ; sub byte ptr [rbx + 0x6348ec55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000411f50 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; cmc ; ret
0x000000000043223b : dec dword ptr [rax - 0x77] ; fucompi st(0) ; or al, cl ; std ; dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; outsb dx, byte ptr [rsi] ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411fe6 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; pop rdi ; ret
0x0000000000437b51 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; salc ; mov edx, 0x28bffffc ; add byte ptr [rax], al ; add al, ch ; pop rsp ; mov ebx, 0x8948fffc ; ret
0x0000000000437ba1 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; xchg byte ptr [rdx + 0x28bffffc], bh ; add al, byte ptr [rax] ; add al, ch ; or al, 0xbb ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000041747b : dec dword ptr [rax - 0x77] ; pop rbp ; fdivr dword ptr [rdi + 0xc] ; call 0x4036cc
0x0000000000417415 : dec dword ptr [rax - 0x77] ; pop rbp ; loopne 0x4173e6 ; or al, 0 ; add byte ptr [rax], al ; call 0x4036cc
0x0000000000432270 : dec dword ptr [rax - 0x77] ; pop rbp ; mov eax, 0x38bf ; add al, ch ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000004324b2 : dec dword ptr [rax - 0x77] ; pop rbp ; mov eax, 0x38bf ; add al, ch ; call qword ptr [rcx]
0x0000000000431e0b : dec dword ptr [rax - 0x77] ; pop rbp ; mov eax, 0x38bf ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004320a9 : dec dword ptr [rax - 0x77] ; pop rbp ; mov eax, 0x38bf ; add al, ch ; or byte ptr [rsi], dl ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432243 : dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; outsb dx, byte ptr [rsi] ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431dde : dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; rcr dword ptr [rax], cl ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432485 : dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; sub al, 0x12 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432080 : dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; xor dword ptr [rsi], edx ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004099ef : dec dword ptr [rax - 0x77] ; push rax ; cmp byte ptr [rax - 0x75], cl ; enter -0x7cb8, -0x40 ; push rax ; mov rdi, rax ; call 0x405cb6
0x0000000000409a26 : dec dword ptr [rax - 0x77] ; push rax ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb6
0x00000000004099b8 : dec dword ptr [rax - 0x77] ; push rax ; xor byte ptr [rax - 0x75], cl ; enter -0x7cb8, -0x40 ; push rax ; mov rdi, rax ; call 0x405cb6
0x00000000004043ba : dec dword ptr [rax - 0x77] ; ret
0x00000000004202b3 : dec dword ptr [rax - 0x77] ; ret 0x858b
0x00000000004075cf : dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000040616c : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000407ed2 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000405643 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0x6dbe
0x0000000000437dd0 : dec dword ptr [rax - 0x7b] ; in eax, dx ; je 0x437e15 ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000405746 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000042432b : dec dword ptr [rax - 0x7d] ; ret 0x4830
0x00000000004240b4 : dec dword ptr [rax - 0x7d] ; ret 0x4848
0x0000000000405828 : dec dword ptr [rax - 0x7d] ; ret 0x4850
0x0000000000424047 : dec dword ptr [rax - 0x7d] ; ret 0x4860
0x0000000000423f04 : dec dword ptr [rax - 0x7f] ; ret 0x108
0x0000000000423f6a : dec dword ptr [rax - 0x7f] ; ret 0x120
0x0000000000423fd0 : dec dword ptr [rax - 0x7f] ; ret 0x138
0x0000000000424195 : dec dword ptr [rax - 0x7f] ; ret 0x150
0x0000000000424123 : dec dword ptr [rax - 0x7f] ; ret 0x90
0x0000000000423d6c : dec dword ptr [rax - 0x7f] ; ret 0xa8
0x0000000000423dd2 : dec dword ptr [rax - 0x7f] ; ret 0xc0
0x0000000000423e38 : dec dword ptr [rax - 0x7f] ; ret 0xd8
0x0000000000423e9e : dec dword ptr [rax - 0x7f] ; ret 0xf0
0x000000000044418f : dec dword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; push rsi ; sbb al, 0xfd ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x44422b ; std ; call qword ptr [rax]
0x0000000000443797 : dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000042482d : dec dword ptr [rbx + 0x63488055] ; ror byte ptr [rax - 0x7d], cl ; ret 0xf370
0x00000000004247de : dec dword ptr [rbx + 0x63488455] ; ror byte ptr [rax - 0x7d], cl ; ret 0xf370
0x0000000000424793 : dec dword ptr [rbx + 0x63488855] ; ror byte ptr [rax - 0x7d], cl ; ret 0x6670
0x0000000000436427 : dec dword ptr [rbx + 0x6348e855] ; ror byte ptr [rax - 0x7d], cl ; ret 0x8b18
0x00000000004362e8 : dec dword ptr [rbx + 0x6348ec55] ; ror byte ptr [rax - 0x7d], cl ; ret 0x8b20
0x000000000040eae0 : dec dword ptr [rbx + 0x68ba7440] ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000043745c : dec dword ptr [rbx - 0x3f7c03bb] ; add dword ptr [rsi + 0xf], esp ; out dx, eax ; sal bl, 0xf ; sub al, al ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037f2
0x0000000000412b60 : dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000418ee2 : dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000419046 : dec dword ptr [rbx - 0x74b71bbb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x00000000004249a5 : dec dword ptr [rbx - 0x836b] ; dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0xf36c
0x00000000004249ff : dec dword ptr [rbx - 0x876b] ; dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0xf36c
0x0000000000424a59 : dec dword ptr [rbx - 0x8b6b] ; dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0xf36c
0x0000000000424ab3 : dec dword ptr [rbx - 0x8f6b] ; dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0xf36c
0x000000000041ef27 : dec dword ptr [rbx - 0xbb7b] ; inc dword ptr [rbx - 0x78f0fb08] ; or al, 2 ; add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x0000000000409021 : dec dword ptr [rcx + 0x458b48c1] ; call 0xffffffffbf03197d
0x0000000000409061 : dec dword ptr [rcx + 0x458b48c1] ; call 0xffffffffbf0319bd
0x00000000004090a1 : dec dword ptr [rcx + 0x458b48c1] ; call 0xffffffffbf0319fd
0x000000000041f663 : dec dword ptr [rcx + 0x458b48c2] ; clc ; mov dword ptr [rax + 4], edx ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x0000000000404e16 : dec dword ptr [rcx] ; ret 0xb60f
0x0000000000420d3a : dec dword ptr [rdi] ; mov dh, 0 ; movsx eax, al ; sub eax, 0x20 ; cmp eax, 0x5c ; ja 0x423d29 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x0000000000424479 : dec dword ptr [rdi] ; mov dh, 0 ; movsx eax, al ; sub eax, 0x21 ; cmp eax, 0x5d ; ja 0x424b42 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x0000000000404e67 : dec dword ptr [rdi] ; mov esi, 0x95b60fc0 ; jmp 0x404e7d
0x0000000000435b6c : dec dword ptr [rdi] ; xchg eax, esp ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x000000000044439f : dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x00000000004437c7 : dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000443787 : dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000040803b : dec ecx ; ret
0x000000000040e061 : divps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e095 : divps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000043163d : divps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004112d5 : divps xmm0, xmm1 ; pop rbp ; ret
0x00000000004374b2 : divps xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40379c
0x0000000000437002 : divps xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a4
0x000000000040e060 : divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e094 : divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000043163c : divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004112d4 : divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004374b1 : divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40379d
0x0000000000437001 : divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a5
0x00000000004448fc : enter -0x1ae, -1 ; test al, 0x7c ; add byte ptr [rax], al ; cmp dl, byte ptr [rbx - 2] ; call rax
0x00000000004281b4 : enter -0x248, -1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004387ac : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4387dc ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438832 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004387ab : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4387dd ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438833 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043962c : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43965c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396b2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043962b : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43965d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396b3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a34c : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43a37c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3d2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a34b : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43a37d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3d3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b00c : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43b03c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b092 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b00b : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43b03d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b093 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bccc : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43bcfc ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd52 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bccb : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43bcfd ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd53 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9ac : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43c9dc ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca32 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9ab : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43c9dd ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca33 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d76c : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43d79c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7f2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d76b : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43d79d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7f3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4ec : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43e51c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e572 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4eb : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43e51d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e573 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f92c : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43f95c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9b2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f92b : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43f95d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9b3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044074c : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x44077c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407d2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044074b : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x44077d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407d3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413cc : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4413fc ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441452 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413cb : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4413fd ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441453 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044204c : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x44207c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420d2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044204b : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x44207d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420d3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fac : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x442fdc ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443032 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fab : enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x442fdd ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443033 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004074bf : enter -0x74b8, 0x40 ; adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000040bb7d : enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040bbb7 : enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000437046 : enter -0x74b8, 0x45 ; call 0x40538051
0x0000000000437090 : enter -0x74b8, 0x45 ; call 0x4053809b
0x0000000000407652 : enter -0x74b8, 8 ; mov rdx, qword ptr [rbp - 0x28] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040766e : enter -0x76b8, 0x50 ; or byte ptr [rax - 0x75], cl ; enter -0x7cb8, -0x3c ; and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040b477 : enter -0x77c0, 0x75 ; hlt ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x0000000000407676 : enter -0x7cb8, -0x3c ; and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004099c0 : enter -0x7cb8, -0x40 ; push rax ; mov rdi, rax ; call 0x405cae
0x00000000004099bf : enter -0x7cb8, -0x40 ; push rax ; mov rdi, rax ; call 0x405caf
0x0000000000412058 : enter 0x280f, -0x3f ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e375
0x000000000041d59c : enter 0x280f, -0x3f ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d67e : enter 0x280f, -0x3f ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d477 : enter 0x280f, -0x3f ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000411285 : enter 0x280f, -0x3f ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112b5 : enter 0x280f, -0x3f ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000045011c : enter 0x504, -0x24 ; adc dword ptr [rax], eax ; xlatb ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000040b5da : enter 0x548, -0x5c ; add byte ptr [rax], al ; add bl, dh ; movups xmmword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5ad : enter 0x548, -0x60 ; add byte ptr [rax], al ; add bl, dh ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x00000000004443a0 : enter 0x65, 0 ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000405d98 : enter 0xd, 0 ; nop ; leave ; ret
0x000000000040ea15 : enter 0xff3, 0x5c ; sal ebx, 0xf ; pop rcx ; ret 0xff3
0x000000000040e0e0 : enter 3, 0 ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e044 : enter 3, 0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3e8] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0a0 : fadd dword ptr [rbx] ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x000000000042499c : fadd qword ptr [rbx] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249aa
0x00000000004249f6 : fadd qword ptr [rbx] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a04
0x0000000000424a50 : fadd qword ptr [rbx] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a5e
0x0000000000424aaa : fadd qword ptr [rbx] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ab8
0x0000000000424aa9 : fadd qword ptr [rbx] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ab9
0x0000000000445a6c : fadd qword ptr [rcx] ; add byte ptr [rax], al ; loop 0x445a6e ; sti ; jmp qword ptr [rax]
0x0000000000443dbc : fadd st(5), st(0) ; cld ; jmp qword ptr [rax]
0x0000000000417edd : fbstp dword ptr [rdi - 0x76b70002] ; ret
0x00000000004468e8 : fcom qword ptr [rax] ; cld ; jmp qword ptr [rdx]
0x000000000045011f : fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044c038 : fcomi st(6) ; std ; jmp qword ptr [rsi]
0x0000000000411034 : fcomp dword ptr [r13 - 0x3d] ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x3ffffffffffffff ; pop rbp ; ret
0x0000000000411035 : fcomp dword ptr [rbp - 0x3d] ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x3ffffffffffffff ; pop rbp ; ret
0x00000000004114eb : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004114ea : fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000409a50 : fcomp qword ptr [rbp - 0x76b70001] ; ret 0x8b48
0x000000000042a7ff : fcos ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000044a138 : fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x00000000004374f3 : fdiv st(3) ; addps xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037cb
0x0000000000437483 : fdiv st(3) ; addps xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037cb
0x0000000000431495 : fdiv st(3) ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414533 : fdiv st(3) ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e10f : fdiv st(3) ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000435eb6 : fdiv st(4), st(0) ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000444065 : fdiv st(4), st(0) ; inc dword ptr [rax] ; pop rax ; add byte ptr [rax], al ; pop rsp ; fdiv st(4), st(0) ; jmp qword ptr [rax]
0x000000000044406d : fdiv st(4), st(0) ; jmp qword ptr [rax]
0x0000000000427378 : fdiv st(5), st(0) ; dec dword ptr [rax + 0x39] ; ret
0x0000000000415a68 : fdiv st(6), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000435c60 : fdivp st(4) ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000427215 : fdivp st(5) ; dec dword ptr [rax + 0x39] ; ret
0x000000000042a3fc : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0x000000000042a475 : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000437574 : fdivr dword ptr [rdi + 0x50bffffc] ; or eax, dword ptr [rax] ; add al, ch ; sahf ; sar ah, 0xff ; mov edi, 0x1701 ; call 0x403875
0x000000000041747f : fdivr dword ptr [rdi + 0xc] ; call 0x4036c8
0x000000000041feb8 : fdivr qword ptr [rax] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004458b1 : fdivr st(3) ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445900 ; jmp rcx
0x0000000000445a50 : fdivr st(5), st(0) ; sti ; jmp qword ptr [rsi]
0x0000000000415dc1 : fdivr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x000000000042a8c7 : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000043226d : ffree st(0) ; std ; dec dword ptr [rax - 0x77] ; pop rbp ; mov eax, 0x38bf ; add al, ch ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000004120a6 : fiadd word ptr [rbp - 0x76b7fffe] ; fucompi st(0) ; pushfq ; ret 0xffff
0x00000000004059be : fiadd word ptr [rbx] ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004087e8 : fiadd word ptr [rcx] ; add byte ptr [rax], al ; leave ; ret
0x000000000040ba99 : fiadd word ptr [rdx] ; add byte ptr [rdi], cl ; push rdi ; ret
0x000000000040ba72 : fiadd word ptr [rdx] ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x00000000004475c0 : ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x00000000004444c4 : ficomp dword ptr [rbx + 0x6a90fffd] ; add byte ptr [rax], al ; hlt ; wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x00000000004441ac : ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x44420e ; std ; call qword ptr [rax]
0x00000000004110d1 : fild dword ptr [rax] ; add byte ptr [rax], al ; leave ; ret
0x000000000041ef3e : fild dword ptr [rbx] ; jmp rax
0x00000000004087ce : fild dword ptr [rcx] ; add byte ptr [rax], al ; leave ; ret
0x000000000044a05c : fild word ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add bl, dl ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x000000000040ba46 : fild word ptr [rdx] ; add byte ptr [rdi], cl ; push rdi ; ret
0x000000000040b9f7 : fild word ptr [rdx] ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x000000000042dc77 : fild word ptr [rsi] ; add byte ptr [rax], al ; leave ; ret
0x0000000000404bfd : fimul dword ptr [rax - 0x75] ; clc ; add rax, 1 ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x0000000000406d71 : fimul dword ptr [rax - 0x75] ; ror byte ptr [r8 + 0x39], 1 ; ret 0x920f
0x000000000044a06a : fimul dword ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x0000000000410146 : fimul word ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000040f784 : fimul word ptr [rax] ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004038f3 : fisub dword ptr [rax + rax] ; push 0x75 ; jmp 0x40319f
0x000000000040c43e : fisub dword ptr [rcx] ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004187de : fisubr word ptr [rsi - 0x76b70002] ; ret
0x000000000041511e : fld dword ptr [rdx] ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000040bb74 : fld qword ptr [rdx] ; add byte ptr [rdi], cl ; push rdi ; ror dword ptr [rax - 0x75], 0x45 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040bbae : fld qword ptr [rdx] ; add byte ptr [rdi], cl ; push rdi ; ror dword ptr [rax - 0x75], 0x45 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000403af3 : fldenv dword ptr [rax + rax] ; push 0x95 ; jmp 0x40319f
0x0000000000408ff3 : fldenv dword ptr [rdi - 0x366f0001] ; ret
0x00000000004085cd : fmul dword ptr [r8 + 1] ; ror cl, 1 ; ret
0x0000000000407374 : fmul dword ptr [r8 - 0x77] ; push rax ; or bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000406d13 : fmul dword ptr [r8 - 0x77] ; ret 0x8948
0x000000000040aa2f : fmul dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040aa57 : fmul dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004085ce : fmul dword ptr [rax + 1] ; ror cl, 1 ; ret
0x0000000000406e62 : fmul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax - 0x77] ; ret 0xb848
0x00000000004077aa : fmul dword ptr [rax - 0x3f] ; clc ; add eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x00000000004317f6 : fmul dword ptr [rax - 0x75] ; call 0xffffffffe90aa19b
0x000000000043204c : fmul dword ptr [rax - 0x75] ; mov byte ptr [r8 - 0x75], r9b ; sbb bl, sil ; movups xmm1, xmmword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e380
0x0000000000407375 : fmul dword ptr [rax - 0x77] ; push rax ; or bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000406d14 : fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000408596 : fmul dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000407659 : fmul dword ptr [rax - 0x77] ; ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004058d0 : fmul dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000412b43 : fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000418ec5 : fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000419029 : fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x000000000042c9b4 : fmul dword ptr [rdx] ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000437dec : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000412043 : fmul qword ptr [rcx + 0x2e0c1d0] ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e38a
0x000000000044a36c : fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x000000000044666c : fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x00000000004087a9 : fmul st(1) ; ret
0x0000000000432048 : fpatan ; addps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e384
0x00000000004032f3 : frstor dword ptr [rax + rax] ; push 0x15 ; jmp 0x40319f
0x0000000000415ce2 : fsin ; dec dword ptr [rax - 0x77] ; ret
0x00000000004456bd : fsin ; jmp rax
0x000000000042b599 : fst dword ptr [rsi] ; add byte ptr [rax], al ; mov rbx, rax ; mov rax, qword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x427854
0x000000000042ac0a : fstp dword ptr [rbx] ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000444574 : fsub dword ptr [rbp + 0x6da0fffd] ; add byte ptr [rax], al ; jp 0x444537 ; std ; inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x00000000004034f3 : fsub qword ptr [rax + rax] ; push 0x35 ; jmp 0x40319f
0x0000000000429b78 : fsub qword ptr [rax] ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000447e6c : fsub qword ptr [rip + 0x77780000] ; cld ; jmp qword ptr [rdx]
0x000000000044bf6c : fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x0000000000444600 : fsubr dword ptr [rdi] ; add ah, cl ; mov edx, 0x6ff8fffd ; add byte ptr [rax], al ; or cl, al ; std ; jmp qword ptr [rax]
0x0000000000443570 : fsubr dword ptr [rdx] ; add byte ptr [rax], al ; xor byte ptr [rbx], ch ; cld ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x00000000004375e5 : fsubr st(0) ; xchg eax, ebp ; sar esp, -1 ; mov edi, 0x1700 ; call 0x40386d
0x00000000004375e4 : fsubr st(0) ; xchg eax, ebp ; sar esp, -1 ; mov edi, 0x1700 ; call 0x40386e
0x0000000000411f53 : fucompi st(0) ; cmc ; ret
0x0000000000417410 : fucompi st(0) ; cmp byte ptr [rdi - 1], ch ; dec dword ptr [rax - 0x77] ; pop rbp ; loopne 0x4173eb ; or al, 0 ; add byte ptr [rax], al ; call 0x4036d1
0x000000000043226b : fucompi st(0) ; ffree st(0) ; std ; dec dword ptr [rax - 0x77] ; pop rbp ; mov eax, 0x38bf ; add al, ch ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000004162df : fucompi st(0) ; imul eax, dword ptr [rax - 0x76b70001], 0xcbfd05d ; add byte ptr [rax], al ; add al, ch ; int 0xd3
0x0000000000411a7b : fucompi st(0) ; int 0xc8
0x000000000042197b : fucompi st(0) ; int 0xc9
0x000000000042135d : fucompi st(0) ; jmp 0x421345
0x000000000042135d : fucompi st(0) ; jmp 0x421369
0x000000000042135d : fucompi st(0) ; jmp 0x421372
0x000000000042135d : fucompi st(0) ; jmp 0x42137b
0x000000000043158e : fucompi st(0) ; mov edx, 0x48fffdcd ; mov eax, dword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x20], rbx ; mov rax, qword ptr [rbp - 0x18] ; pxor xmm0, xmm0 ; movss dword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004320a4 : fucompi st(0) ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfffd
0x000000000043223e : fucompi st(0) ; or al, cl ; std ; dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; outsb dx, byte ptr [rsi] ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411fe9 : fucompi st(0) ; pop rdi ; ret
0x00000000004120ac : fucompi st(0) ; pushfq ; ret 0xffff
0x0000000000425467 : fucompi st(0) ; ret
0x0000000000437b54 : fucompi st(0) ; salc ; mov edx, 0x28bffffc ; add byte ptr [rax], al ; add al, ch ; pop rsp ; mov ebx, 0x8948fffc ; ret
0x0000000000417476 : fucompi st(0) ; shr byte ptr [rsi - 1], cl ; dec dword ptr [rax - 0x77] ; pop rbp ; fdivr dword ptr [rdi + 0xc] ; call 0x4036d1
0x0000000000437b9c : fucompi st(0) ; sub bh, byte ptr [rbx - 2] ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; xchg byte ptr [rdx + 0x28bffffc], bh ; add al, byte ptr [rax] ; add al, ch ; or al, 0xbb ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000004324ad : fucompi st(0) ; wait ; mov esi, 0x8948fffd ; pop rbp ; mov eax, 0x38bf ; add al, ch ; call qword ptr [rcx]
0x0000000000437ba4 : fucompi st(0) ; xchg byte ptr [rdx + 0x28bffffc], bh ; add al, byte ptr [rax] ; add al, ch ; or al, 0xbb ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000436aa3 : fxch st(7) ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000004154c2 : hlt ; add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000449752 : hlt ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000040e544 : hlt ; add ebx, ebp ; xchg eax, esp ; nop ; leave ; ret
0x00000000004256a0 : hlt ; and byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000040b61b : hlt ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x0000000000434716 : hlt ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000044976c : hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000044c484 : hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x000000000044ce84 : hlt ; jne 0x44ce8e ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x000000000040b489 : hlt ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b47b : hlt ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x00000000004180c8 : hlt ; mov ch, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000040b549 : hlt ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x0000000000430654 : hlt ; mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x000000000040b542 : hlt ; mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b614 : hlt ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b4cf : hlt ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b513 : hlt ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e36d : hlt ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4bc : hlt ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b500 : hlt ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e35a : hlt ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000403bf9 : hlt ; nop word ptr [rax + rax] ; mov eax, 0x651567 ; push rbp ; sub rax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c5c ; mov eax, 0 ; test rax, rax ; je 0x403c5c ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x000000000044be01 : hlt ; std ; call qword ptr [rcx]
0x000000000044bd59 : hlt ; std ; jmp qword ptr [rsi]
0x0000000000448284 : hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x00000000004444cc : hlt ; wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x0000000000428da3 : idiv bh ; dec dword ptr [rax - 0x75] ; clc ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x0000000000428d89 : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000405641 : idiv bh ; dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0x6dbe
0x0000000000405744 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000405826 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4850
0x000000000044c039 : idiv ch ; jmp qword ptr [rsi]
0x000000000044c0e1 : idiv ebp ; call qword ptr [rcx]
0x0000000000424442 : idiv ebp ; dec dword ptr [rax + 0x39] ; ret
0x000000000044c1a9 : idiv ebp ; jmp qword ptr [rsi]
0x00000000004088a4 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004086f8 : idiv edi ; dec ecx ; ret
0x000000000042f3e1 : idiv esi ; inc dword ptr [rbx - 0x16fe13bb] ; jmp 0x42f414
0x000000000042a569 : imul eax, dword ptr [rax + rax], 0x934ee800 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004162e1 : imul eax, dword ptr [rax - 0x76b70001], 0xcbfd05d ; add byte ptr [rax], al ; add al, ch ; int 0xd3
0x0000000000444511 : imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x0000000000444501 : imul eax, dword ptr [rax], 0 ; jnp 0x4444b9 ; std ; lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x000000000044c485 : imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x0000000000444509 : imul eax, dword ptr [rax], 0 ; rcr dword ptr [rbp + 0x6bc0fffd], cl ; add byte ptr [rax], al ; add al, 0x9e ; std ; jmp rax
0x000000000044c425 : imul eax, dword ptr [rax], 0 ; ret
0x000000000044c3bd : imul eax, dword ptr [rax], 0 ; sub bh, cl ; std ; call qword ptr [rcx]
0x0000000000444489 : imul eax, dword ptr [rax], 0xfd9b1000 ; push qword ptr [rax + 0x42000069] ; wait ; std ; call rax
0x0000000000444491 : imul eax, dword ptr [rax], 0xfd9b4200 ; call rax
0x0000000000444499 : imul eax, dword ptr [rax], 0xfd9b5200 ; push rax ; imul eax, dword ptr [rax], 0xfd9b5e00 ; call qword ptr [rax]
0x00000000004444a1 : imul eax, dword ptr [rax], 0xfd9b5e00 ; call qword ptr [rax]
0x000000000044c1a5 : imul eax, dword ptr [rax], 0xfdf7eb00 ; jmp qword ptr [rsi]
0x000000000044c24d : imul eax, dword ptr [rax], 0xfdf81a00 ; call qword ptr [rcx]
0x0000000000406e75 : imul eax, edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d1c : imul eax, edx ; pop rbp ; ret
0x0000000000421b53 : imul ebx, dword ptr [rbx], 0x8948fffe ; ret
0x0000000000411b53 : imul ebx, dword ptr [rbx], 0x8948ffff ; ret
0x000000000042ec63 : imul ecx, dword ptr [rbp - 3], 0x458b48ff ; clc ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004481f1 : imul ecx, dword ptr [rdi + rax], 8 ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x448211 ; call rdx
0x000000000041e851 : imul ecx, dword ptr [rdi - 2], -1 ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41ea0b ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cdb0] ; jmp rax
0x000000000042c207 : imul ecx, dword ptr [rdi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000416e53 : imul ecx, eax, 0x8948fffe ; ret
0x0000000000448268 : imul edi, dword ptr [rsi - 4], -1 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000432100 : imul edi, ebp, 0xcbfffff ; add byte ptr [rax], al ; add al, ch ; mov dl, 0x15 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000041d0c3 : imul edi, esi, 0x458b48ff ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000432653 : imul edx, dword ptr [rax], 0x8948fffd ; ret
0x0000000000438b98 : imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000438b83 : imul esi, dword ptr [rbx + 0x20], 0x61766e69 ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c1c ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000438b99 : imul esi, dword ptr [rbx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000438b97 : imul esi, dword ptr gs:[ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000438b7f : imul esp, dword ptr [rbp + 0x79], 0x20 ; imul esi, dword ptr [rbx + 0x20], 0x61766e69 ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c20 ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000438b78 : imul esp, dword ptr [rbx + 0x65], 0x2065636e ; imul esp, dword ptr [rbp + 0x79], 0x20 ; imul esi, dword ptr [rbx + 0x20], 0x61766e69 ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c27 ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000438b8b : imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c14 ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000404f71 : imul esp, ebp, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000438b77 : imul r12, qword ptr [rbx + 0x65], 0x2065636e ; imul esp, dword ptr [rbp + 0x79], 0x20 ; imul esi, dword ptr [rbx + 0x20], 0x61766e69 ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c28 ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000406e74 : imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d1b : imul rax, rdx ; pop rbp ; ret
0x000000000040c422 : in al, -0x18 ; mov byte ptr [rdi - 1], dh ; inc dword ptr [rbx - 0x16fe03bb] ; jmp 0xffffffffe940c452
0x000000000040c421 : in al, -0x18 ; mov byte ptr [rdi - 1], dh ; inc dword ptr [rbx - 0x16fe03bb] ; jmp 0xffffffffe940c453
0x000000000040c0e7 : in al, -0x18 ; ret
0x0000000000446d74 : in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000042ae0e : in al, 0x1a ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000044a074 : in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x000000000044a174 : in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x000000000041deaa : in al, 0x48 ; mov eax, dword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000040e903 : in al, 0x48 ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000044a874 : in al, 0x4f ; add byte ptr [rax], al ; jle 0x44a851 ; std ; jmp qword ptr [rax]
0x00000000004439f4 : in al, 0x51 ; cld ; call rax
0x000000000044a458 : in al, 0x51 ; std ; call qword ptr [rdx]
0x0000000000443a44 : in al, 0x53 ; cld ; call qword ptr [rax]
0x000000000044ba74 : in al, 0x61 ; add byte ptr [rax], al ; movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x000000000044bd74 : in al, 0x64 ; add byte ptr [rax], al ; ret 0xfdf4
0x0000000000410a3c : in al, 2 ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000410788 : in al, 3 ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000041dea0 : in al, 8 ; ja 0x41e113 ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000041de96 : in al, 9 ; jg 0x41e237 ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e11d ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x0000000000426826 : in al, dx ; adc byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044a27c : in al, dx ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000041d38e : in al, dx ; add dword ptr [rax], eax ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d39f : in al, dx ; add dword ptr [rax], eax ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000409825 : in al, dx ; add ebx, ebp ; call 0x68c623b4
0x000000000042f3e6 : in al, dx ; add ecx, ebp ; jmp 0x42f40f
0x000000000042f3e5 : in al, dx ; add ecx, ebp ; jmp 0x42f410
0x00000000004142d7 : in al, dx ; add ecx, ebp ; mov esp, 0xe8fffff9 ; cmp eax, 0x90fffef5 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000040b5eb : in al, dx ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5fc : in al, dx ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000434ee8 : in al, dx ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000044c67c : in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044d47c : in al, dx ; jnp 0x44d4a6 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000040b4a5 : in al, dx ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x00000000004184d0 : in al, dx ; mov cl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000044e77c : in al, dx ; mov es, word ptr [rax] ; add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x000000000040b4c6 : in al, dx ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b50a : in al, dx ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e364 : in al, dx ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b481 : in al, dx ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b4eb : in al, dx ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b52f : in al, dx ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e388 : in al, dx ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b5c7 : in al, dx ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000437dc6 : in al, dx ; or byte ptr [rax - 0x3f], cl ; std ; add ebp, eax ; lahf ; mov bl, 0xfc ; dec dword ptr [rax - 0x7b] ; in eax, dx ; je 0x437e1f ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040d66c : in al, dx ; ret 2
0x0000000000421bd0 : in al, dx ; sbb bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004327c2 : in al, dx ; sbb byte ptr [rbx + 0x41], 0x5c ; pop rbp ; ret
0x00000000004202b0 : in al, dx ; xor edi, esi ; dec dword ptr [rax - 0x77] ; ret 0x858b
0x00000000004274bc : in eax, -0x77 ; jge 0x4274cc ; mov dword ptr [rbp - 8], esi ; mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x00000000004076b1 : in eax, -1 ; dec dword ptr [rax + 0x29] ; ret
0x0000000000404f72 : in eax, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000429d53 : in eax, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000408822 : in eax, 0x48 ; mov dword ptr [rbp - 0x10], edi ; mov qword ptr [rbp - 0x20], rsi ; nop ; pop rbp ; ret
0x00000000004087af : in eax, 0x48 ; mov dword ptr [rbp - 0x10], edi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043064d : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov dword ptr [rbp - 0xc], esi ; mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x000000000040b53b : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov dword ptr [rbp - 0xc], esi ; mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b60d : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov dword ptr [rbp - 0xc], esi ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b471 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040e395 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov edx, 0x4399b8 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004307b3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0x18 ; pop rbp ; ret
0x00000000004306f9 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0xc ; pop rbp ; ret
0x0000000000409787 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000410ad5 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000409101 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040faa1 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410637 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000406f0f : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040b40b : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040594b : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405055 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405ccd : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000405d5d : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f5eb : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f49b : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x000000000041022f : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f639 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040595d : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410257 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; add rax, 8 ; pop rbp ; ret
0x000000000041ec9f : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x0000000000436d1b : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x00000000004308a3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041095d : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000437acf : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b47 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b47 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b47 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x00000000004101eb : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000407d61 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040f811 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x00000000004100d6 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d6cf : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d77b ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d72b : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7d1 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000405ced : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040502f : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405ca7 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bed : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x000000000040f593 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d2d : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000041f63f : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec8d : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x0000000000436d09 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x000000000040b6a7 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b737 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b737 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b76d : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9b9 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x0000000000405e41 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004085d7 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; movabs rax, 0x1555555555555555 ; pop rbp ; ret
0x00000000004156a9 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x00000000004111ff : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; movabs rax, 0x333333333333333 ; pop rbp ; ret
0x000000000041103b : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; movabs rax, 0x3ffffffffffffff ; pop rbp ; ret
0x0000000000408863 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; movabs rax, 0x7ffffffffffffff ; pop rbp ; ret
0x000000000040b4b3 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4f7 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e351 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040787f : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; nop ; pop rbp ; ret
0x0000000000403c53 : in eax, 0x48 ; mov eax, esi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c98 ; mov eax, 0 ; test rax, rax ; je 0x403c98 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c12 : in eax, 0x76 ; sbb edi, dword ptr [rax] ; test rax, rax ; je 0x403c43 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000400970 : in eax, 0xa ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004500f9 : in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000434e64 : in eax, dx ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000437dd3 : in eax, dx ; je 0x437e12 ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004098b3 : in eax, dx ; ret
0x00000000004324a8 : inc byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; wait ; mov esi, 0x8948fffd ; pop rbp ; mov eax, 0x38bf ; add al, ch ; call qword ptr [rcx]
0x0000000000403c4f : inc byte ptr [rbx] ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c9c ; mov eax, 0 ; test rax, rax ; je 0x403c9c ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000410e36 : inc byte ptr [rcx] ; add byte ptr [rax], al ; leave ; ret
0x000000000044551f : inc dword ptr [rax + 0x10000ae] ; mov cl, 0xfe ; ljmp ptr [rax + 0x4d0000ae] ; mov cl, 0xfe ; call rax
0x0000000000443b67 : inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443b77 : inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000444617 : inc dword ptr [rax + 0x70] ; add byte ptr [rax], al ; ret 0xfffd
0x00000000004458b3 : inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458fe ; jmp rcx
0x0000000000444337 : inc dword ptr [rax - 0x17ffff9c] ; mov bh, ch ; jmp qword ptr [rax - 0x4effff9c]
0x0000000000444627 : inc dword ptr [rax - 0x77ffff90] ; ret 0xfffd
0x0000000000443db7 : inc dword ptr [rax] ; add byte ptr [r8], r8b ; fadd st(5), st(0) ; cld ; jmp qword ptr [rax]
0x0000000000443b97 : inc dword ptr [rax] ; add byte ptr [r8], r8b ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443bff : inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000424980 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8343], al ; inc dword ptr [rbx] ; jg 0x424a03 ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249c6
0x00000000004249da : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8743], al ; inc dword ptr [rbx] ; jg 0x424a5d ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a20
0x0000000000424a34 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424ab7 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a7a
0x0000000000424a8e : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8f43], al ; inc dword ptr [rbx] ; jg 0x424b11 ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ad4
0x0000000000443a7f : inc dword ptr [rax] ; add byte ptr [rax], al ; jno 0x443ae3 ; cld ; jmp qword ptr [rax]
0x0000000000437e48 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub rsp, 8 ; add rsp, 8 ; ret
0x000000000044362f : inc dword ptr [rax] ; add byte ptr cs:[rax], al ; cmp spl, r15b ; jmp qword ptr [rax]
0x0000000000443417 : inc dword ptr [rax] ; and eax, 0xbd60000 ; cld ; jmp qword ptr [rax]
0x0000000000443907 : inc dword ptr [rax] ; cmp al, byte ptr [rax] ; add byte ptr [rsi + 0x4c], cl ; cld ; jmp qword ptr [rax]
0x0000000000443947 : inc dword ptr [rax] ; cmp eax, dword ptr [rax] ; add byte ptr [rcx + 0x4d], ah ; cld ; jmp qword ptr [rax]
0x000000000044559f : inc dword ptr [rax] ; mov cl, 0 ; add byte ptr [rsi], al ; mov dh, 0xfe ; jmp qword ptr [rax]
0x00000000004455df : inc dword ptr [rax] ; mov dl, 0 ; add dl, al ; mov bh, 0xfe ; jmp qword ptr [rax]
0x0000000000444d67 : inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x0000000000444067 : inc dword ptr [rax] ; pop rax ; add byte ptr [rax], al ; pop rsp ; fdiv st(4), st(0) ; jmp qword ptr [rax]
0x000000000044414f : inc dword ptr [rax] ; pop rsp ; add byte ptr [rax], al ; adc al, 0x18 ; std ; jmp qword ptr [rax]
0x0000000000443577 : inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000444abf : inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444acd ; jmp qword ptr [rax]
0x0000000000444aff : inc dword ptr [rax] ; test dword ptr [rax], eax ; add byte ptr [rdx], dh ; ja 0x444b0d ; jmp qword ptr [rax]
0x0000000000444b7f : inc dword ptr [rax] ; xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444b8d ; jmp qword ptr [rax]
0x0000000000404298 : inc dword ptr [rbp - 0x3f6af040] ; test al, al ; je 0x404477 ; movzx eax, byte ptr [rbp - 0x30] ; movzx eax, al ; cmp eax, 0x10 ; ja 0x4042b1 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000040c76e : inc dword ptr [rbx - 0x16fc03bb] ; ret
0x000000000040c427 : inc dword ptr [rbx - 0x16fe03bb] ; jmp 0xffffffffe940c44d
0x000000000042f3e3 : inc dword ptr [rbx - 0x16fe13bb] ; jmp 0x42f412
0x00000000004142d4 : inc dword ptr [rbx - 0x16fe13bb] ; mov esp, 0xe8fffff9 ; cmp eax, 0x90fffef5 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004320fa : inc dword ptr [rbx - 0x16fe17bb] ; imul edi, ebp, 0xcbfffff ; add byte ptr [rax], al ; add al, ch ; mov dl, 0x15 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000435b69 : inc dword ptr [rbx - 0x6bf00008] ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x000000000041ef2d : inc dword ptr [rbx - 0x78f0fb08] ; or al, 2 ; add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000042498a : inc dword ptr [rbx] ; jg 0x4249f9 ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249bc
0x00000000004249e4 : inc dword ptr [rbx] ; jg 0x424a53 ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a16
0x0000000000424a3e : inc dword ptr [rbx] ; jg 0x424aad ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a70
0x0000000000424a98 : inc dword ptr [rbx] ; jg 0x424b07 ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424aca
0x0000000000411048 : inc dword ptr [rbx] ; pop rbp ; ret
0x0000000000450116 : inc dword ptr [rbx] ; xor eax, 0xc80011f0 ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000437de8 : inc dword ptr [rcx - 1] ; adc al, 0xdc ; add rbx, 1 ; cmp rbx, rbp ; jne 0x437dfc ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004249be : inc dword ptr [rcx] ; jmp 0x424988
0x0000000000424a18 : inc dword ptr [rcx] ; jmp 0x4249e2
0x0000000000424a72 : inc dword ptr [rcx] ; jmp 0x424a3c
0x0000000000424acc : inc dword ptr [rcx] ; jmp 0x424a96
0x0000000000408870 : inc dword ptr [rdi] ; pop rbp ; ret
0x0000000000443c5f : inc eax ; add byte ptr [r8], r8b ; sub al, 0xb2 ; cld ; jmp rax
0x0000000000443bef : inc eax ; add byte ptr [rax], r8b ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000443b87 : inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000444aaf : inc eax ; add dword ptr [rax], 0 ; movabs dword ptr [0xca000083e0fffe75], eax ; jne 0x444ad5 ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444add ; jmp qword ptr [rax]
0x0000000000443937 : inc eax ; cmp al, byte ptr [rax] ; add byte ptr [rax], dh ; cld ; jmp rax
0x00000000004438b7 : inc eax ; cmp byte ptr [rax], al ; add byte ptr [rbx + rcx*2 - 4], cl ; jmp rax
0x00000000004438f7 : inc eax ; cmp dword ptr [rax], eax ; add byte ptr [rsi], ah ; cld ; jmp rax
0x000000000044450f : inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x000000000044457f : inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x00000000004446d7 : inc eax ; jae 0x4446e3 ; add byte ptr [rsp + rax*2 - 2], dl ; jmp rax
0x0000000000444717 : inc eax ; je 0x444723 ; add byte ptr [rbp + rax*2 - 2], ch ; jmp rax
0x0000000000444637 : inc eax ; jo 0x444641 ; add ah, bl ; ret 0xfffd
0x0000000000444d57 : inc eax ; mov es, word ptr [rax] ; add byte ptr [rsi - 0x1f000179], bh ; mov es, word ptr [rax] ; add cl, dh ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x0000000000444097 : inc eax ; pop rax ; add byte ptr [rax], al ; rcr ch, 0xfc ; jmp rax
0x0000000000444237 : inc eax ; pop rdi ; add byte ptr [rax], al ; xor al, 0x20 ; std ; jmp rax
0x000000000044361f : inc eax ; sub eax, 0x37ec0000 ; cld ; jmp rax
0x0000000000444aef : inc eax ; test byte ptr [rax], al ; add dh, dl ; jbe 0x444afd ; jmp rax
0x0000000000444b2f : inc eax ; test dword ptr [rax], eax ; add byte ptr [rdx], ah ; js 0x444b3d ; jmp rax
0x0000000000444b6f : inc eax ; xchg byte ptr [rax], al ; add byte ptr [rsi - 0x1f000187], cl ; xchg byte ptr [rax], al ; add ah, cl ; jns 0x444b95 ; inc dword ptr [rax] ; xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444b9d ; jmp qword ptr [rax]
0x0000000000444baf : inc eax ; xchg dword ptr [rax], eax ; add byte ptr [rbx + rdi*2 - 2], bl ; jmp rax
0x000000000041f321 : inc edi ; add al, 0 ; add byte ptr [rax], al ; add cl, ch ; rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000424a22 : inc esi ; or byte ptr [rbp + 1], 0xe9 ; test byte ptr [rax], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424ac9 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a8c
0x0000000000444531 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; mov eax, 0xa0fffda1 ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; movabs byte ptr [0xa2dc00006cc0fffd], al ; std ; jmp rax
0x0000000000444539 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; movabs byte ptr [0xa2dc00006cc0fffd], al ; std ; jmp rax
0x00000000004498fc : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x000000000040b602 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; nop ; pop rbp ; ret
0x0000000000447781 : insb byte ptr [rdi], dx ; cld ; call qword ptr [rdi]
0x00000000004493fc : insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x0000000000438b8a : insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c15 ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x000000000044d3fc : insb byte ptr [rdi], dx ; jnp 0x44d406 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000437600 : insb byte ptr [rdi], dx ; mov esp, 0x17e8fffc ; ret 0xfffc
0x000000000040b526 : insb byte ptr [rdi], dx ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x00000000004249b2 : insb byte ptr [rdi], dx ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x424994
0x0000000000424a0c : insb byte ptr [rdi], dx ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x4249ee
0x0000000000424a66 : insb byte ptr [rdi], dx ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a48
0x0000000000424ac0 : insb byte ptr [rdi], dx ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424aa2
0x000000000042ce4b : insb byte ptr [rdi], dx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042b5d4 : insb byte ptr [rdi], dx ; ret 0xffff
0x000000000044a7b8 : insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a7d8 : insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004475fc : insb byte ptr [rdi], dx ; sbb eax, 0x19540000 ; cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x000000000042ad16 : insb byte ptr [rdi], dx ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x00000000004485fc : insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x0000000000444581 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x0000000000444571 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; fsub dword ptr [rbp + 0x6da0fffd] ; add byte ptr [rax], al ; jp 0x44453a ; std ; inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x0000000000444579 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; jp 0x444532 ; std ; inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x000000000044c67d : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044c5d5 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x00000000004387b0 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4387d8 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43882e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004387af : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4387d9 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43882f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439630 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x439658 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396ae ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043962f : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x439659 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396af ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a350 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43a378 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3ce ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a34f : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43a379 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3cf ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b010 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43b038 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b08e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b00f : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43b039 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b08f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcd0 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43bcf8 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd4e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bccf : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43bcf9 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd4f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9b0 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43c9d8 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca2e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9af : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43c9d9 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca2f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d770 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43d798 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7ee ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d76f : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43d799 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7ef ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4f0 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43e518 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e56e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4ef : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43e519 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e56f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f930 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43f958 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9ae ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f92f : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43f959 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9af ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440750 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x440778 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407ce ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044074f : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x440779 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407cf ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413d0 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4413f8 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44144e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413cf : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4413f9 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44144f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442050 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x442078 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420ce ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044204f : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x442079 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420cf ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fb0 : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x442fd8 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44302e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442faf : insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x442fd9 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44302f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000404bf9 : insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; fimul dword ptr [rax - 0x75] ; clc ; add rax, 1 ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000041102d : insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000435a8f : insd dword ptr [rdi], dx ; loopne 0x435a94 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004329bf : insd dword ptr [rdi], dx ; or al, 0xfd ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000044c8a9 : insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x0000000000446381 : insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x00000000004492e9 : insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x000000000044c479 : insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x00000000004485f1 : insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5c9 : insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x000000000044c739 : insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x000000000044c029 : insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044c309 : insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044beb9 : insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000040722d : insd dword ptr [rdi], dx ; or dword ptr [rax], eax ; add cl, cl ; ret
0x0000000000413634 : insd dword ptr [rdi], dx ; ror byte ptr [rbx - 0x74b713bb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041b134 : insd dword ptr [rdi], dx ; ror byte ptr [rbx - 0x74b717bb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000041b687 : insd dword ptr [rdi], dx ; ror byte ptr [rbx - 0x74b71bbb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x0000000000433313 : int 0x18
0x00000000004212ef : int 0x23
0x00000000004203ef : int 0x33
0x000000000041f6af : int 0x3e
0x0000000000438ba6 : int 0x80
0x0000000000445584 : int 0xb4
0x0000000000409af9 : int 0xc1
0x0000000000411a7d : int 0xc8
0x000000000042197d : int 0xc9
0x00000000004166ef : int 0xcf
0x00000000004162ef : int 0xd3
0x00000000004054cf : int 0xde
0x0000000000404ebf : int 0xe6
0x00000000004264eb : int 0xfd
0x000000000041e752 : int 0xfe
0x0000000000415452 : int1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000423e21 : int1 ; cmp al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000423e47 : int1 ; cmp al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004228cb : int1 ; or eax, 0x8948fffe ; ret
0x0000000000412c3b : int1 ; or edi, edi ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000042e50e : int1 ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000403cb9 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004244ca : int1 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044b7d9 : int1 ; std ; jmp qword ptr [rsi]
0x000000000041b6bb : int1 ; test bh, dh ; dec dword ptr [rbx - 0x74b71bbb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x0000000000444d64 : int1 ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x000000000042d718 : invd ; add byte ptr [rax], al ; leave ; ret
0x000000000040c984 : iretd ; add al, byte ptr [rax] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403962
0x0000000000443e75 : iretd ; cld ; call qword ptr [rax]
0x0000000000443e6d : iretd ; cld ; push rax ; add byte ptr [r8], r8b ; xor bh, cl ; cld ; call qword ptr [rax]
0x00000000004042b0 : ja 0x404299 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000040c425 : ja 0x40c445 ; inc dword ptr [rbx - 0x16fe03bb] ; jmp 0xffffffffe940c44f
0x000000000041dea2 : ja 0x41e111 ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000041e3f9 : ja 0x41e406 ; add byte ptr [rax + 0x48c48348], dl ; pop rbx ; pop rbp ; ret
0x000000000041e530 : ja 0x41e7ec ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e85b : ja 0x41ea01 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cdb0] ; jmp rax
0x000000000041ef31 : ja 0x41f153 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000041f17a : ja 0x41f320 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db78] ; jmp rax
0x000000000041fee5 : ja 0x41feee ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041fefa : ja 0x41ff03 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000420d47 : ja 0x423d1c ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x0000000000424486 : ja 0x424b35 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x0000000000427266 : ja 0x4272c0 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x00000000004294bf : ja 0x4294ec ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000435343 : ja 0x435343 ; std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000436905 : ja 0x4368de ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000004387ba : ja 0x438820 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x4387ce ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438824 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000438a8a : ja 0x438a5c ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000043963a : ja 0x4396a0 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43964e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396a4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043990a : ja 0x4398dc ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000043a35a : ja 0x43a3c0 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43a36e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3c4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a62a : ja 0x43a5fc ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000043b01a : ja 0x43b080 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43b02e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b084 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b2ea : ja 0x43b2bc ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000043bcda : ja 0x43bd40 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43bcee ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd44 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bfaa : ja 0x43bf7c ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000043c9ba : ja 0x43ca20 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43c9ce ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca24 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043cc8a : ja 0x43cc5c ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000043d77a : ja 0x43d7e0 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43d78e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7e4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043da4a : ja 0x43da1c ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000043e4fa : ja 0x43e560 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43e50e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e564 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e7ca : ja 0x43e79c ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000043f93a : ja 0x43f9a0 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43f94e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9a4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043fc0a : ja 0x43fbdc ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000044075a : ja 0x4407c0 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x44076e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407c4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440a2a : ja 0x4409fc ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x00000000004413da : ja 0x441440 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x4413ee ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441444 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004416aa : ja 0x44167c ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000044205a : ja 0x4420c0 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x44206e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420c4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044232a : ja 0x4422fc ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x0000000000442fba : ja 0x443020 ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x442fce ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443024 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044328a : ja 0x44325c ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x0000000000444afd : ja 0x444b07 ; inc dword ptr [rax] ; test dword ptr [rax], eax ; add byte ptr [rdx], dh ; ja 0x444b0f ; jmp qword ptr [rax]
0x0000000000444b05 : ja 0x444b07 ; jmp qword ptr [rax]
0x0000000000444b2d : ja 0x444b37 ; inc eax ; test dword ptr [rax], eax ; add byte ptr [rdx], ah ; js 0x444b3f ; jmp rax
0x00000000004458c1 : ja 0x4458e5 ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458f0 ; jmp rcx
0x0000000000447d51 : ja 0x447d51 ; jmp qword ptr [rdx]
0x0000000000447d50 : ja 0x447d52 ; jmp qword ptr [rdx]
0x0000000000447e11 : ja 0x447e11 ; jmp qword ptr [rax]
0x0000000000447db1 : ja 0x447e11 ; jmp qword ptr [rip]
0x0000000000447e31 : ja 0x447e31 ; call qword ptr [rcx]
0x0000000000447e71 : ja 0x447e71 ; jmp qword ptr [rdx]
0x0000000000447e51 : ja 0x447e71 ; jmp qword ptr [rip]
0x0000000000447ed1 : ja 0x447ef1 ; jmp qword ptr [rip]
0x0000000000447ef1 : ja 0x447ef1 ; jmp qword ptr [rsi]
0x000000000044d015 : ja 0x44d01d ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x00000000004151ad : jae 0x4151bb ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000041c318 : jae 0x41c31d ; dec dword ptr [rax - 0x77] ; ret
0x000000000041cbe5 : jae 0x41cbf3 ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000427143 : jae 0x427149 ; dec dword ptr [rax + 0x39] ; ret
0x000000000042cfed : jae 0x42cffe ; add byte ptr [rax], al ; leave ; ret
0x0000000000438b93 : jae 0x438c0c ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000438b9a : jae 0x438c1b ; jb 0x438bd8 ; add byte ptr [rdx - 0x760002c0], bh ; ret
0x00000000004446d9 : jae 0x4446e1 ; add byte ptr [rsp + rax*2 - 2], dl ; jmp rax
0x00000000004470bc : jae 0x4470e5 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000040c2ac : jb 0x40c2be ; dec dword ptr [rax - 0x75] ; call 0xffffffffe9084c10
0x000000000040c5ff : jb 0x40c611 ; dec dword ptr [rax - 0x75] ; call 0xffffffffe9084f63
0x000000000040c5ff : jb 0x40c65c ; dec dword ptr [rax - 0x75] ; call 0xffffffffe9084fae
0x0000000000423c4a : jb 0x423c4c ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000428524 : jb 0x428552 ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000438b9d : jb 0x438bd5 ; add byte ptr [rdx - 0x760002c0], bh ; ret
0x0000000000438b9c : jb 0x438bd6 ; add byte ptr [rdx - 0x760002c0], bh ; ret
0x0000000000438b96 : jb 0x438c0c ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000447e50 : jb 0x447eec ; cld ; jmp qword ptr [rip]
0x00000000004498e1 : jb 0x44993a ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x000000000044a7f8 : jb 0x44a7cd ; std ; jmp qword ptr [rax]
0x000000000044a818 : jb 0x44a7ed ; std ; jmp qword ptr [rsi]
0x0000000000403c13 : jbe 0x403c42 ; mov eax, 0 ; test rax, rax ; je 0x403c42 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000415380 : jbe 0x415389 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000041cdb8 : jbe 0x41cdc1 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000041de7a : jbe 0x41dea5 ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041e179 : jbe 0x41e1a4 ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041e1f0 : jbe 0x41e21b ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041e2d4 : jbe 0x41e2ff ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041fdfe : jbe 0x41fe0a ; add cl, ch ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041ff0f : jbe 0x41ff18 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041ff24 : jbe 0x41ff2d ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000042883a : jbe 0x428868 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000042afce : jbe 0x42af7f ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042c8b6 : jbe 0x42c8c9 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000042dc46 : jbe 0x42dca7 ; std ; dec ecx ; ret
0x0000000000435b66 : jbe 0x435b53 ; cld ; inc dword ptr [rbx - 0x6bf00008] ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x0000000000435b66 : jbe 0x435b59 ; cld ; inc dword ptr [rbx - 0x6bf00008] ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x0000000000438b88 : jbe 0x438c08 ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c17 ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000443e64 : jbe 0x443e37 ; cld ; call rax
0x0000000000444779 : jbe 0x444799 ; add byte ptr [rdi + rax*2 + 0x7670fffe], ch ; add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x0000000000444779 : jbe 0x4447a9 ; add byte ptr [rdi + rax*2 + 0x7670fffe], ch ; add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x0000000000444779 : jbe 0x4447d9 ; add byte ptr [rdi + rax*2 + 0x7670fffe], ch ; add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x0000000000444aed : jbe 0x444af7 ; inc eax ; test byte ptr [rax], al ; add dh, dl ; jbe 0x444aff ; jmp rax
0x0000000000444af5 : jbe 0x444af7 ; jmp rax
0x00000000004494a0 : jbe 0x449465 ; cld ; jmp qword ptr [rbx]
0x000000000044cf4d : jbe 0x44cf55 ; add byte ptr [rsi], ah ; std ; std ; jmp qword ptr [rdx]
0x000000000044cf25 : jbe 0x44cf55 ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044d400 : jbe 0x44d403 ; std ; jmp qword ptr [rdx]
0x0000000000403c1d : je 0x403c38 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c6b : je 0x403c80 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c61 : je 0x403c8a ; mov eax, 0 ; test rax, rax ; je 0x403c8a ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403cb8 : je 0x403cb1 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004042a0 : je 0x40446f ; movzx eax, byte ptr [rbp - 0x30] ; movzx eax, al ; cmp eax, 0x10 ; ja 0x4042a9 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000406cba : je 0x406ce0 ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x0000000000407008 : je 0x40702e ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x0000000000407e9c : je 0x407ea9 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000040b54c : je 0x40b4e1 ; pop rbp ; ret
0x000000000040b6d3 : je 0x40b70b ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b70b ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b721 : je 0x40b7ad ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7ad ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7ad ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040c76c : je 0x40c775 ; inc dword ptr [rbx - 0x16fc03bb] ; ret
0x000000000040c76b : je 0x40c776 ; inc dword ptr [rbx - 0x16fc03bb] ; ret
0x000000000040c76c : je 0x40c78c ; inc dword ptr [rbx - 0x16fc03bb] ; ret
0x000000000040c76b : je 0x40c78d ; inc dword ptr [rbx - 0x16fc03bb] ; ret
0x000000000040eae3 : je 0x40eaa6 ; push 0x29000001 ; ret 0xd089
0x000000000040eae2 : je 0x40eaa7 ; push 0x29000001 ; ret 0xd089
0x000000000040eb15 : je 0x40ead8 ; push 0x29000001 ; ret 0xd089
0x000000000040eb14 : je 0x40ead9 ; push 0x29000001 ; ret 0xd089
0x000000000040eb63 : je 0x40eb26 ; push 0x29000001 ; ret 0xd089
0x000000000040eb62 : je 0x40eb27 ; push 0x29000001 ; ret 0xd089
0x000000000040eba0 : je 0x40eb63 ; push 0x29000001 ; ret 0xd089
0x000000000040eb9f : je 0x40eb64 ; push 0x29000001 ; ret 0xd089
0x0000000000410700 : je 0x41078a ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411100 : je 0x41116a ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000411169 : je 0x4111f3 ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000041514e : je 0x415168 ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000041c23b : je 0x41c240 ; dec dword ptr [rax - 0x77] ; ret
0x000000000041cb86 : je 0x41cba0 ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000041d987 : je 0x41d9df ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9df ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000041db05 : je 0x41dba1 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041de87 : je 0x41e246 ; mov dword ptr [rbp - 0x1c], 0 ; cmp dword ptr [rbp - 0x1c], 9 ; jg 0x41e246 ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e12c ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000041ffda : je 0x41ffe0 ; jmp rsp
0x0000000000426fc9 : je 0x426fcf ; dec dword ptr [rax + 0x39] ; ret
0x000000000042709a : je 0x4270a0 ; dec dword ptr [rax + 0x39] ; ret
0x000000000042b280 : je 0x42b29a ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042b500 : je 0x42b51a ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042b780 : je 0x42b79a ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042ba00 : je 0x42ba1a ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042bc80 : je 0x42bc9a ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042bf00 : je 0x42bf1a ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042c16e : je 0x42c188 ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042c3ee : je 0x42c408 ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042e464 : je 0x42e468 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431670 : je 0x431681 ; add dword ptr [rax], eax ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000437aec : je 0x437b2a ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b2a ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437adc : je 0x437b3a ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b3a ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b3a ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437dd4 : je 0x437e11 ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000438b9b : je 0x438c0c ; jb 0x438bd7 ; add byte ptr [rdx - 0x760002c0], bh ; ret
0x0000000000444719 : je 0x444721 ; add byte ptr [rbp + rax*2 - 2], ch ; jmp rax
0x0000000000444711 : je 0x444721 ; add byte ptr [rbp + rax*2 - 2], cl ; inc eax ; je 0x444729 ; add byte ptr [rbp + rax*2 - 2], ch ; jmp rax
0x0000000000449e04 : je 0x449e52 ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x000000000044ab04 : je 0x44ab7f ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044ab04 : je 0x44ab9f ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000040b69d : jg 0x40b6c4 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000041de98 : jg 0x41e235 ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e11b ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000042393d : jg 0x423942 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423a3d : jg 0x423a41 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042498c : jg 0x4249f7 ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249ba
0x00000000004249e6 : jg 0x424a51 ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a14
0x0000000000424a40 : jg 0x424aab ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a6e
0x0000000000424a9a : jg 0x424b05 ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ac8
0x000000000042650f : jg 0x426515 ; dec dword ptr [rax + 0x39] ; ret
0x000000000042ceed : jg 0x42cefe ; add byte ptr [rax], al ; leave ; ret
0x000000000042d549 : jg 0x42d558 ; add byte ptr [rax], al ; leave ; ret
0x00000000004387cc : jg 0x438812 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004387cb : jg 0x438813 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043964c : jg 0x439692 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043964b : jg 0x439693 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a36c : jg 0x43a3b2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a36b : jg 0x43a3b3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b02c : jg 0x43b072 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b02b : jg 0x43b073 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcec : jg 0x43bd32 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bceb : jg 0x43bd33 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9cc : jg 0x43ca12 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9cb : jg 0x43ca13 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d78c : jg 0x43d7d2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d78b : jg 0x43d7d3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e50c : jg 0x43e552 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e50b : jg 0x43e553 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f94c : jg 0x43f992 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f94b : jg 0x43f993 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044076c : jg 0x4407b2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044076b : jg 0x4407b3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413ec : jg 0x441432 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413eb : jg 0x441433 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044206c : jg 0x4420b2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044206b : jg 0x4420b3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fcc : jg 0x443012 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fcb : jg 0x443013 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000405032 : jge 0x40504b ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405058 : jge 0x40506b ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x000000000040594e : jge 0x405953 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405960 : jge 0x405962 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000405caa : jge 0x405cc3 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000405cd0 : jge 0x405ce3 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cf0 : jge 0x405d18 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405cf0 : jge 0x405d1a ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405d28 : jge 0x405d50 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405d28 : jge 0x405d52 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405d60 : jge 0x405d7c ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x0000000000405e44 : jge 0x405e45 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000405f26 : jge 0x405f27 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040638e : jge 0x40638f ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406cd6 : jge 0x406cd7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d30 : jge 0x406d34 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000406f12 : jge 0x406f22 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000407024 : jge 0x407025 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040707e : jge 0x407082 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000407260 : jge 0x407270 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004073a8 : jge 0x4073a9 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407402 : jge 0x407406 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000407848 : jge 0x407858 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000407882 : jge 0x407880 ; nop ; pop rbp ; ret
0x00000000004078bb : jge 0x4078bd ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x00000000004078e6 : jge 0x4078e4 ; nop ; pop rbp ; ret
0x0000000000407a72 : jge 0x407a74 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000407a9e : jge 0x407a9c ; nop ; pop rbp ; ret
0x0000000000407ad7 : jge 0x407ad9 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000407bd6 : jge 0x407bd8 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000407be5 : jge 0x407be6 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407bf4 : jge 0x407bf5 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000407d64 : jge 0x407d8c ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000407d64 : jge 0x407d8e ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000407f94 : jge 0x407f92 ; nop ; pop rbp ; ret
0x0000000000407fc4 : jge 0x407fc2 ; nop ; pop rbp ; ret
0x0000000000407ff3 : jge 0x407ff4 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040801c : jge 0x40801d ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000408090 : jge 0x408091 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040811a : jge 0x408118 ; nop ; pop rbp ; ret
0x0000000000408149 : jge 0x40814a ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004082e6 : jge 0x4082f6 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000408334 : jge 0x408335 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004084b2 : jge 0x4084b3 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004085da : jge 0x4085e1 ; movabs rax, 0x1555555555555555 ; pop rbp ; ret
0x00000000004086c2 : jge 0x4086c9 ; movabs rax, 0x1555555555555555 ; pop rbp ; ret
0x00000000004087b2 : jge 0x4087ab ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000408825 : jge 0x40881f ; mov qword ptr [rbp - 0x20], rsi ; nop ; pop rbp ; ret
0x0000000000408866 : jge 0x40886d ; movabs rax, 0x7ffffffffffffff ; pop rbp ; ret
0x0000000000408958 : jge 0x40895a ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000408b88 : jge 0x408b89 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000409104 : jge 0x409121 ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040978a : jge 0x4097b7 ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000040b40e : jge 0x40b466 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b474 : jge 0x40b4a8 ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b4b6 : jge 0x40b4ed ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4fa : jge 0x40b531 ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040b53e : jge 0x40b549 ; mov dword ptr [rbp - 0xc], esi ; mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b610 : jge 0x40b622 ; mov dword ptr [rbp - 0xc], esi ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b6aa : jge 0x40b6ea ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b734 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b734 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b770 : jge 0x40b788 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000040e354 : jge 0x40e38a ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e398 : jge 0x40e3a2 ; mov edx, 0x4399b8 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f424 : jge 0x40f440 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f49e : jge 0x40f4b3 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x000000000040f596 : jge 0x40f5a9 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f5b6 : jge 0x40f5ba ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000040f5ee : jge 0x40f603 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f63c : jge 0x40f67b ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040f814 : jge 0x40f819 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x000000000040f8d0 : jge 0x40f8d1 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f9b4 : jge 0x40f9c4 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f9d2 : jge 0x40f9d3 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040faa4 : jge 0x40fae6 ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x00000000004100ce : jge 0x4100cc ; nop ; pop rbp ; ret
0x00000000004100d9 : jge 0x4100de ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x00000000004100eb : jge 0x4100f0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x00000000004101ee : jge 0x410224 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410232 : jge 0x41023f ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041024c : jge 0x41024d ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041025a : jge 0x41025f ; mov rax, qword ptr [rbp - 8] ; add rax, 8 ; pop rbp ; ret
0x000000000041050c : jge 0x410511 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041051e : jge 0x41052b ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041063a : jge 0x41065c ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x000000000041066a : jge 0x41067a ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041079a : jge 0x41079e ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000410960 : jge 0x410995 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000410a4a : jge 0x410a48 ; nop ; pop rbp ; ret
0x0000000000410a83 : jge 0x410a85 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410ad8 : jge 0x410afb ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000410bf0 : jge 0x410c09 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000410c72 : jge 0x410c74 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410c82 : jge 0x410c80 ; nop ; pop rbp ; ret
0x0000000000410cde : jge 0x410ce0 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410d1c : jge 0x410d1d ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410d2a : jge 0x410d28 ; nop ; pop rbp ; ret
0x0000000000410dcf : jge 0x410dd0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410e42 : jge 0x410e43 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410ec4 : jge 0x410ec5 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410ef2 : jge 0x410ef0 ; nop ; pop rbp ; ret
0x0000000000410f21 : jge 0x410f22 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041103e : jge 0x411045 ; movabs rax, 0x3ffffffffffffff ; pop rbp ; ret
0x00000000004110a8 : jge 0x4110a6 ; nop ; pop rbp ; ret
0x000000000041113d : jge 0x41113e ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411202 : jge 0x411209 ; movabs rax, 0x333333333333333 ; pop rbp ; ret
0x0000000000414bc4 : jge 0x414bdd ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000414bea : jge 0x414bfd ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000414cb4 : jge 0x414cb5 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415164 : jge 0x415165 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004151be : jge 0x4151c2 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000041538e : jge 0x41539e ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004153c8 : jge 0x4153c6 ; nop ; pop rbp ; ret
0x0000000000415401 : jge 0x415403 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000415500 : jge 0x415502 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000415510 : jge 0x41550e ; nop ; pop rbp ; ret
0x000000000041553f : jge 0x415540 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004155b2 : jge 0x4155b3 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004156ac : jge 0x4156b3 ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x000000000041c5fc : jge 0x41c615 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x000000000041c622 : jge 0x41c635 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x000000000041c6ec : jge 0x41c6ed ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041cb9c : jge 0x41cb9d ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041cbf6 : jge 0x41cbfa ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000041cdc6 : jge 0x41cdd6 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041ce00 : jge 0x41cdfe ; nop ; pop rbp ; ret
0x000000000041ce39 : jge 0x41ce3b ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000041cf38 : jge 0x41cf3a ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000041cf48 : jge 0x41cf46 ; nop ; pop rbp ; ret
0x000000000041cf77 : jge 0x41cf78 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041cfea : jge 0x41cfeb ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041d0e4 : jge 0x41d0eb ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x000000000041d6d2 : jge 0x41d720 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d778 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d72e : jge 0x41d779 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7ce ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d9bc : jge 0x41d9c1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x000000000041de9f : jge 0x41de99 ; or byte ptr [rdi], cl ; xchg dword ptr [rax + 2], ebx ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000041e45e : jge 0x41e477 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x000000000041e484 : jge 0x41e497 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x000000000041e4a4 : jge 0x41e4bd ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x000000000041e4ca : jge 0x41e4dd ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x000000000041ec90 : jge 0x41ec95 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x000000000041eca2 : jge 0x41eca8 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x000000000041f642 : jge 0x41f647 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041fb4b : jge 0x41fb52 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041fba8 : jge 0x41fbaf ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041fc05 : jge 0x41fc0c ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004274be : jge 0x4274ca ; mov dword ptr [rbp - 8], esi ; mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x0000000000427804 : jge 0x42781d ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x000000000042782a : jge 0x42783d ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x000000000042784a : jge 0x427863 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000427870 : jge 0x427883 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000427890 : jge 0x4278a9 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x00000000004278b6 : jge 0x4278c9 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x00000000004278d6 : jge 0x4278ef ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x00000000004278fc : jge 0x42790f ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x000000000042791c : jge 0x427935 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000427942 : jge 0x427955 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000427c86 : jge 0x427c9f ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000427cac : jge 0x427cbf ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x00000000004281c6 : jge 0x4281c7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042828c : jge 0x42828d ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000428352 : jge 0x428353 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000428418 : jge 0x428419 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004284de : jge 0x4284df ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004285a4 : jge 0x4285a5 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042866a : jge 0x42866b ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000428730 : jge 0x428731 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004288f2 : jge 0x4288f3 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042a222 : jge 0x42a226 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000042b016 : jge 0x42b017 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042b070 : jge 0x42b074 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000042b240 : jge 0x42b250 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042b296 : jge 0x42b297 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042b2f0 : jge 0x42b2f4 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000042b4c0 : jge 0x42b4d0 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042b516 : jge 0x42b517 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042b570 : jge 0x42b574 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000042b740 : jge 0x42b750 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042b796 : jge 0x42b797 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042b7f0 : jge 0x42b7f4 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000042b9c0 : jge 0x42b9d0 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042ba16 : jge 0x42ba17 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042ba70 : jge 0x42ba74 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000042bc40 : jge 0x42bc50 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042bc96 : jge 0x42bc97 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042bcf0 : jge 0x42bcf4 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000042bec0 : jge 0x42bed0 ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042bf16 : jge 0x42bf17 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042c12e : jge 0x42c13e ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042c184 : jge 0x42c185 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042c1de : jge 0x42c1e2 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000042c3ae : jge 0x42c3be ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042c404 : jge 0x42c405 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042c45e : jge 0x42c462 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000042c62e : jge 0x42c63e ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042c64c : jge 0x42c64a ; nop ; pop rbp ; ret
0x000000000042c685 : jge 0x42c687 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042c694 : jge 0x42c692 ; nop ; pop rbp ; ret
0x000000000042c6cd : jge 0x42c6cf ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042c6dc : jge 0x42c6da ; nop ; pop rbp ; ret
0x000000000042c715 : jge 0x42c717 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042c724 : jge 0x42c722 ; nop ; pop rbp ; ret
0x000000000042c75d : jge 0x42c75f ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042c76c : jge 0x42c76a ; nop ; pop rbp ; ret
0x000000000042c7a5 : jge 0x42c7a7 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042c7b4 : jge 0x42c7b2 ; nop ; pop rbp ; ret
0x000000000042c7ed : jge 0x42c7ef ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042c7fc : jge 0x42c7fa ; nop ; pop rbp ; ret
0x000000000042c835 : jge 0x42c837 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042c844 : jge 0x42c842 ; nop ; pop rbp ; ret
0x000000000042c87d : jge 0x42c87f ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042c988 : jge 0x42c986 ; nop ; pop rbp ; ret
0x000000000042cbfa : jge 0x42cbfc ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042ccfa : jge 0x42ccfc ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042cdfa : jge 0x42cdfc ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042cefa : jge 0x42cefc ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042cffa : jge 0x42cffc ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042d0fa : jge 0x42d0fc ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042d1fa : jge 0x42d1fc ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042d2fa : jge 0x42d2fc ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042d42a : jge 0x42d428 ; nop ; pop rbp ; ret
0x000000000042d436 : jge 0x42d434 ; nop ; pop rbp ; ret
0x000000000042d442 : jge 0x42d440 ; nop ; pop rbp ; ret
0x000000000042d44e : jge 0x42d44c ; nop ; pop rbp ; ret
0x000000000042d45a : jge 0x42d458 ; nop ; pop rbp ; ret
0x000000000042d466 : jge 0x42d464 ; nop ; pop rbp ; ret
0x000000000042d472 : jge 0x42d470 ; nop ; pop rbp ; ret
0x000000000042d47e : jge 0x42d47c ; nop ; pop rbp ; ret
0x000000000042d48a : jge 0x42d488 ; nop ; pop rbp ; ret
0x000000000042d4b9 : jge 0x42d4ba ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d4e2 : jge 0x42d4e3 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d556 : jge 0x42d557 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d5d7 : jge 0x42d5d8 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d64a : jge 0x42d64b ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d6cb : jge 0x42d6cc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d73e : jge 0x42d73f ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d7bf : jge 0x42d7c0 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d832 : jge 0x42d833 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d8b3 : jge 0x42d8b4 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d926 : jge 0x42d927 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042d9a7 : jge 0x42d9a8 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042da1a : jge 0x42da1b ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042da9b : jge 0x42da9c ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042db0e : jge 0x42db0f ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042db8f : jge 0x42db90 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042dc02 : jge 0x42dc03 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042dc83 : jge 0x42dc84 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042dcf6 : jge 0x42dcf7 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000042ddd2 : jge 0x42ddd9 ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x000000000042def0 : jge 0x42def7 ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x000000000042dfaa : jge 0x42dfb1 ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x000000000042e064 : jge 0x42e06b ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x000000000042e11e : jge 0x42e125 ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x000000000042e1d8 : jge 0x42e1df ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x000000000042e292 : jge 0x42e299 ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x000000000042e34c : jge 0x42e353 ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x000000000042e406 : jge 0x42e40d ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x0000000000430650 : jge 0x430654 ; mov dword ptr [rbp - 0xc], esi ; mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x00000000004306fc : jge 0x430702 ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0xc ; pop rbp ; ret
0x00000000004307b6 : jge 0x4307bc ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0x18 ; pop rbp ; ret
0x00000000004308a6 : jge 0x4308c0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x0000000000436d0c : jge 0x436d11 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x0000000000436d1e : jge 0x436d24 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x0000000000437ad2 : jge 0x437b06 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b44 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b44 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b44 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000444bed : jge 0x444bef ; jmp rax
0x0000000000444bfd : jge 0x444bff ; jmp qword ptr [rax]
0x000000000044ef31 : jge 0x44ef33 ; call qword ptr [rdx]
0x000000000044ef51 : jge 0x44ef53 ; call qword ptr [rbx]
0x000000000044ef71 : jge 0x44ef73 ; jmp rax
0x000000000040b439 : jl 0x40b4b6 ; mov eax, dword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b438 : jl 0x40b4b7 ; mov eax, dword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000041de9a : jl 0x41deb8 ; add byte ptr [rax], al ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e119 ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000041fc62 : jl 0x41fc69 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041fcbf : jl 0x41fcc6 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042875b : jl 0x428788 ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000428872 : jl 0x4288a0 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000042cd92 : jl 0x42cda3 ; add byte ptr [rax], al ; leave ; ret
0x000000000042df25 : jl 0x42df31 ; add byte ptr [rax], al ; leave ; ret
0x00000000004441cc : jl 0x4441ee ; std ; call qword ptr [rax]
0x00000000004448e9 : jl 0x444909 ; add byte ptr [rdx + 0x68fffe52], al ; jl 0x444911 ; add byte ptr [rdx + rdx*2 + 0x7c88fffe], ch ; add byte ptr [rax], al ; enter -0x1ae, -1 ; test al, 0x7c ; add byte ptr [rax], al ; cmp dl, byte ptr [rbx - 2] ; call rax
0x00000000004448f1 : jl 0x444909 ; add byte ptr [rdx + rdx*2 + 0x7c88fffe], ch ; add byte ptr [rax], al ; enter -0x1ae, -1 ; test al, 0x7c ; add byte ptr [rax], al ; cmp dl, byte ptr [rbx - 2] ; call rax
0x00000000004448e8 : jl 0x44490a ; add byte ptr [rdx + 0x68fffe52], al ; jl 0x444912 ; add byte ptr [rdx + rdx*2 + 0x7c88fffe], ch ; add byte ptr [rax], al ; enter -0x1ae, -1 ; test al, 0x7c ; add byte ptr [rax], al ; cmp dl, byte ptr [rbx - 2] ; call rax
0x0000000000447e0c : jl 0x447e5a ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000449400 : jl 0x4493c5 ; cld ; jmp qword ptr [rdx]
0x000000000044ef09 : jl 0x44ef0b ; call rsp
0x000000000041d713 : jle 0x41d737 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041f92a : jle 0x41f931 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041f982 : jle 0x41f989 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041f9da : jle 0x41f9e1 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041fa34 : jle 0x41fa3b ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041fa91 : jle 0x41fa98 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041faee : jle 0x41faf5 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042aec8 : jle 0x42af0d ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000443b64 : jle 0x443b21 ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000444c2d : jle 0x444c2f ; jmp rax
0x0000000000448269 : jle 0x448269 ; call qword ptr [rdx]
0x0000000000448289 : jle 0x448289 ; call qword ptr [rdx]
0x0000000000448329 : jle 0x448329 ; jmp qword ptr [rsi]
0x00000000004483a9 : jle 0x4483a9 ; call qword ptr [rdx]
0x000000000044a878 : jle 0x44a84d ; std ; jmp qword ptr [rax]
0x000000000044a898 : jle 0x44a86d ; std ; jmp qword ptr [rsi]
0x000000000044d69d : jle 0x44d6a5 ; add al, dh ; std ; std ; jmp qword ptr [rbx]
0x00000000004032fb : jmp 0x403197
0x0000000000404ad1 : jmp 0x404aeb
0x0000000000404ad0 : jmp 0x404aec
0x0000000000404ad1 : jmp 0x404b07
0x0000000000404ad0 : jmp 0x404b08
0x0000000000404e6e : jmp 0x404e76
0x000000000040d354 : jmp 0x40d1dc
0x000000000040f391 : jmp 0x40f3e3
0x000000000040f391 : jmp 0x40f3fe
0x000000000040f391 : jmp 0x40f41b
0x0000000000413fc1 : jmp 0x413fcb
0x0000000000413fc1 : jmp 0x413ff2
0x0000000000413fc1 : jmp 0x414019
0x0000000000416028 : jmp 0x416038
0x0000000000416028 : jmp 0x41608b
0x0000000000416cd1 : jmp 0x416ca2
0x0000000000416cd1 : jmp 0x416cf2
0x0000000000418ef5 : jmp 0x418ecf
0x0000000000418ef5 : jmp 0x418ef4
0x000000000041aff5 : jmp 0x41afaf
0x000000000041aff5 : jmp 0x41afd5
0x000000000042135f : jmp 0x421343
0x000000000042135f : jmp 0x421367
0x000000000042135f : jmp 0x421370
0x000000000042135f : jmp 0x421379
0x00000000004249c0 : jmp 0x424986
0x0000000000424a1a : jmp 0x4249e0
0x0000000000424a74 : jmp 0x424a3a
0x0000000000424ace : jmp 0x424a94
0x000000000042f3e9 : jmp 0x42f40c
0x00000000004346f5 : jmp 0x434728
0x00000000004346f5 : jmp 0x43474f
0x0000000000437df3 : jmp 0x437e7b
0x0000000000437df3 : jmp 0x437e88
0x0000000000437df3 : jmp 0x437ecb
0x0000000000444b5c : jmp 0x444bf1
0x0000000000444b5c : jmp 0x444c01
0x0000000000444b5c : jmp 0x444c31
0x000000000044a334 : jmp 0x44a358
0x000000000044a334 : jmp 0x44a378
0x0000000000424768 : jmp 0xffffffff898a47e4
0x00000000004247b7 : jmp 0xffffffff898a482f
0x0000000000424806 : jmp 0xffffffff898a487e
0x0000000000420d54 : jmp 0xffffffffe1410d9f
0x000000000040c42d : jmp 0xffffffffe940c447
0x00000000004450b7 : jmp qword ptr [rax + 0x2d00009c]
0x000000000044474f : jmp qword ptr [rax + 0x30000075]
0x00000000004446cf : jmp qword ptr [rax + 0x34000073]
0x000000000044470f : jmp qword ptr [rax + 0x4c000074]
0x0000000000444137 : jmp qword ptr [rax + 0x5200005b]
0x000000000044408f : jmp qword ptr [rax + 0x55000058]
0x0000000000443d9f : jmp qword ptr [rax + 0x7600004c]
0x00000000004441ef : jmp qword ptr [rax + 0xc00005e]
0x0000000000443617 : jmp qword ptr [rax - 0x3affffd3]
0x000000000044433f : jmp qword ptr [rax - 0x4effff9c]
0x0000000000444847 : jmp qword ptr [rax - 0x5bffff87]
0x0000000000425839 : jmp qword ptr [rax]
0x0000000000445ad3 : jmp qword ptr [rbx + 1]
0x0000000000446d3b : jmp qword ptr [rbx]
0x0000000000404de4 : jmp qword ptr [rcx]
0x0000000000420ebd : jmp qword ptr [rdi]
0x00000000004468eb : jmp qword ptr [rdx]
0x000000000044c40b : jmp qword ptr [rip]
0x0000000000445a53 : jmp qword ptr [rsi]
0x000000000044e783 : jmp qword ptr [rsp + rdx + 0x41000000]
0x0000000000403c25 : jmp rax
0x00000000004458db : jmp rcx
0x000000000044a07b : jmp rdx
0x000000000044ebe3 : jmp rsi
0x000000000041ffdc : jmp rsp
0x00000000004038f7 : jne 0x403904 ; add byte ptr [rax], al ; jmp 0x40319b
0x000000000040505c : jne 0x405063 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405952 : jne 0x40594b ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405964 : jne 0x40595a ; nop ; pop rbp ; ret
0x0000000000405cd4 : jne 0x405cdb ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000405d64 : jne 0x405d74 ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x0000000000406f16 : jne 0x406f1a ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000407264 : jne 0x407268 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040784c : jne 0x407850 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004078bf : jne 0x4078b5 ; nop ; pop rbp ; ret
0x0000000000407a76 : jne 0x407a6c ; nop ; pop rbp ; ret
0x0000000000407adb : jne 0x407ad1 ; nop ; pop rbp ; ret
0x0000000000407bda : jne 0x407bd0 ; nop ; pop rbp ; ret
0x00000000004082ea : jne 0x4082ee ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000408829 : jne 0x40880f ; nop ; pop rbp ; ret
0x000000000040895c : jne 0x408952 ; nop ; pop rbp ; ret
0x0000000000409108 : jne 0x409119 ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040978e : jne 0x4097af ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000040b412 : jne 0x40b45e ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b47a : jne 0x40b4a4 ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b541 : jne 0x40b545 ; mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b613 : jne 0x40b61e ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b6e1 : jne 0x40b6fd ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b73d : jne 0x40b791 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b72f : jne 0x40b79f ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b79f ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040e8ff : jne 0x40e935 ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040f428 : jne 0x40f438 ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f4a2 : jne 0x40f4ab ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x000000000040f5f2 : jne 0x40f5fb ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f640 : jne 0x40f673 ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040f9b8 : jne 0x40f9bc ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040faa8 : jne 0x40fade ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410236 : jne 0x410237 ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000410510 : jne 0x410509 ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000410522 : jne 0x410523 ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041063e : jne 0x410654 ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x000000000041066e : jne 0x410672 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000410a87 : jne 0x410a7d ; nop ; pop rbp ; ret
0x0000000000410adc : jne 0x410af3 ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000410c76 : jne 0x410c6c ; nop ; pop rbp ; ret
0x0000000000410ce2 : jne 0x410cd8 ; nop ; pop rbp ; ret
0x0000000000414bee : jne 0x414bf5 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000415392 : jne 0x415396 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000415405 : jne 0x4153fb ; nop ; pop rbp ; ret
0x0000000000415504 : jne 0x4154fa ; nop ; pop rbp ; ret
0x000000000041c626 : jne 0x41c62d ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x000000000041cdca : jne 0x41cdce ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041ce3d : jne 0x41ce33 ; nop ; pop rbp ; ret
0x000000000041cf3c : jne 0x41cf32 ; nop ; pop rbp ; ret
0x000000000041d992 : jne 0x41d9d4 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000041de76 : jne 0x41de3d ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041e175 : jne 0x41e13c ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041e1ec : jne 0x41e1b3 ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041e2d0 : jne 0x41e297 ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041e488 : jne 0x41e48f ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x000000000041e4ce : jne 0x41e4d5 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x000000000041ff39 : jne 0x41ff42 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004274c1 : jne 0x4274c6 ; mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x000000000042782e : jne 0x427835 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000427874 : jne 0x42787b ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x00000000004278ba : jne 0x4278c1 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000427900 : jne 0x427907 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000427946 : jne 0x42794d ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000427cb0 : jne 0x427cb7 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x000000000042b244 : jne 0x42b248 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042b4c4 : jne 0x42b4c8 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042b744 : jne 0x42b748 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042b9c4 : jne 0x42b9c8 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042bc44 : jne 0x42bc48 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042bec4 : jne 0x42bec8 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042c132 : jne 0x42c136 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042c3b2 : jne 0x42c3b6 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042c632 : jne 0x42c636 ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042c689 : jne 0x42c67f ; nop ; pop rbp ; ret
0x000000000042c6d1 : jne 0x42c6c7 ; nop ; pop rbp ; ret
0x000000000042c719 : jne 0x42c70f ; nop ; pop rbp ; ret
0x000000000042c761 : jne 0x42c757 ; nop ; pop rbp ; ret
0x000000000042c7a9 : jne 0x42c79f ; nop ; pop rbp ; ret
0x000000000042c7f1 : jne 0x42c7e7 ; nop ; pop rbp ; ret
0x000000000042c839 : jne 0x42c82f ; nop ; pop rbp ; ret
0x000000000042c881 : jne 0x42c877 ; nop ; pop rbp ; ret
0x000000000042cbfe : jne 0x42cbf4 ; nop ; pop rbp ; ret
0x000000000042ccfe : jne 0x42ccf4 ; nop ; pop rbp ; ret
0x000000000042cd68 : jne 0x42cd80 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000042cdfe : jne 0x42cdf4 ; nop ; pop rbp ; ret
0x000000000042cefe : jne 0x42cef4 ; nop ; pop rbp ; ret
0x000000000042cffe : jne 0x42cff4 ; nop ; pop rbp ; ret
0x000000000042d0fe : jne 0x42d0f4 ; nop ; pop rbp ; ret
0x000000000042d1fe : jne 0x42d1f4 ; nop ; pop rbp ; ret
0x000000000042d2fe : jne 0x42d2f4 ; nop ; pop rbp ; ret
0x0000000000430653 : jne 0x430650 ; mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x0000000000430700 : jne 0x4306fa ; mov eax, 0xc ; pop rbp ; ret
0x00000000004307ba : jne 0x4307b4 ; mov eax, 0x18 ; pop rbp ; ret
0x0000000000432347 : jne 0x432362 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437b00 : jne 0x437b16 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437df4 : jne 0x437df0 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004444e4 : jne 0x444485 ; std ; call qword ptr [rax]
0x0000000000444ab5 : jne 0x444ab7 ; jmp rax
0x0000000000444abd : jne 0x444ac7 ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444acf ; jmp qword ptr [rax]
0x0000000000444aad : jne 0x444ac7 ; inc eax ; add dword ptr [rax], 0 ; movabs dword ptr [0xca000083e0fffe75], eax ; jne 0x444ad7 ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444adf ; jmp qword ptr [rax]
0x0000000000444ac5 : jne 0x444ac7 ; jmp qword ptr [rax]
0x000000000044cd98 : jne 0x44cdc1 ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044cd95 : jne 0x44cdc5 ; add byte ptr [rbp - 4], dh ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044ce85 : jne 0x44ce8d ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x000000000042acd4 : jno 0x42acf7 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000042e750 : jno 0x42e760 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000443a84 : jno 0x443ade ; cld ; jmp qword ptr [rax]
0x000000000044eec1 : jno 0x44eee3 ; call qword ptr [rip]
0x000000000044eee1 : jno 0x44eee3 ; call rsp
0x000000000044eec1 : jno 0x44ef0b ; call qword ptr [rip]
0x0000000000408196 : jnp 0x4081a1 ; add byte ptr [rax], al ; leave ; ret
0x0000000000437b9f : jnp 0x437bb6 ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; xchg byte ptr [rdx + 0x28bffffc], bh ; add al, byte ptr [rax] ; add al, ch ; or al, 0xbb ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000438845 : jnp 0x438805 ; mov esi, 0xbebfcc5c ; ret
0x00000000004396c5 : jnp 0x439685 ; mov esi, 0xbebfcc5c ; ret
0x000000000043a3e5 : jnp 0x43a3a5 ; mov esi, 0xbebfcc5c ; ret
0x000000000043b0a5 : jnp 0x43b065 ; mov esi, 0xbebfcc5c ; ret
0x000000000043bd65 : jnp 0x43bd25 ; mov esi, 0xbebfcc5c ; ret
0x000000000043ca45 : jnp 0x43ca05 ; mov esi, 0xbebfcc5c ; ret
0x000000000043d805 : jnp 0x43d7c5 ; mov esi, 0xbebfcc5c ; ret
0x000000000043e585 : jnp 0x43e545 ; mov esi, 0xbebfcc5c ; ret
0x000000000043f9c5 : jnp 0x43f985 ; mov esi, 0xbebfcc5c ; ret
0x00000000004407e5 : jnp 0x4407a5 ; mov esi, 0xbebfcc5c ; ret
0x0000000000441465 : jnp 0x441425 ; mov esi, 0xbebfcc5c ; ret
0x00000000004420e5 : jnp 0x4420a5 ; mov esi, 0xbebfcc5c ; ret
0x0000000000443045 : jnp 0x443005 ; mov esi, 0xbebfcc5c ; ret
0x00000000004437c4 : jnp 0x44381e ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000444504 : jnp 0x4444b6 ; std ; lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x0000000000444bad : jnp 0x444bb7 ; inc eax ; xchg dword ptr [rax], eax ; add byte ptr [rbx + rdi*2 - 2], bl ; jmp rax
0x0000000000444bb5 : jnp 0x444bb7 ; jmp rax
0x0000000000444bac : jnp 0x444bb8 ; inc eax ; xchg dword ptr [rax], eax ; add byte ptr [rbx + rdi*2 - 2], bl ; jmp rax
0x0000000000444bc5 : jnp 0x444bc7 ; jmp qword ptr [rax]
0x000000000044d3d5 : jnp 0x44d405 ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d42d ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044d3fd : jnp 0x44d405 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044d3d4 : jnp 0x44d406 ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d42e ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044d47d : jnp 0x44d4a5 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044d45d : jnp 0x44d4a5 ; add byte ptr [rsi + rdi*8 + 0xffffd], dl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4c5 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000407a66 : jns 0x407a73 ; add byte ptr [rax], al ; leave ; ret
0x0000000000412d26 : jns 0x412d2f ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x0000000000412d25 : jns 0x412d30 ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x0000000000412d4e : jns 0x412d57 ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x0000000000412d76 : jns 0x412d7f ; add byte ptr [rdi], cl ; push rdi ; ret
0x000000000041d76c : jns 0x41d790 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041fe18 : jns 0x41fe21 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041fe2f : jns 0x41fe38 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041fe2e : jns 0x41fe39 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041fe46 : jns 0x41fe4f ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041fe45 : jns 0x41fe50 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041fe5d : jns 0x41fe66 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041fe74 : jns 0x41fe7d ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041fe8b : jns 0x41fe94 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000042acfa : jns 0x42ad1d ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000438b81 : jns 0x438bc7 ; imul esi, dword ptr [rbx + 0x20], 0x61766e69 ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c1e ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000438b80 : jns 0x438bc8 ; imul esi, dword ptr [rbx + 0x20], 0x61766e69 ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c1f ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000444b75 : jns 0x444b77 ; jmp rax
0x0000000000444b7d : jns 0x444b87 ; inc dword ptr [rax] ; xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444b8f ; jmp qword ptr [rax]
0x0000000000444b6d : jns 0x444b87 ; inc eax ; xchg byte ptr [rax], al ; add byte ptr [rsi - 0x1f000187], cl ; xchg byte ptr [rax], al ; add ah, cl ; jns 0x444b97 ; inc dword ptr [rax] ; xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444b9f ; jmp qword ptr [rax]
0x000000000044d1a5 : jns 0x44d1ad ; add dh, cl ; std ; std ; jmp qword ptr [rdx]
0x0000000000406af5 : jo 0x406b57 ; pop r12 ; pop rbp ; ret
0x0000000000408b1c : jo 0x408b2a ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040b534 : jo 0x40b4c9 ; pop rbp ; ret
0x000000000040b533 : jo 0x40b4ca ; pop rbp ; ret
0x000000000041eb46 : jo 0x41eba8 ; pop r12 ; pop rbp ; ret
0x0000000000429e4c : jo 0x429dee ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042ce92 : jo 0x42cea3 ; add byte ptr [rax], al ; leave ; ret
0x000000000042ee5c : jo 0x42eec1 ; std ; dec dword ptr [rax - 0x75] ; clc ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042f10c : jo 0x42f15d ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044377c : jo 0x44381d ; cld ; ljmp ptr [rax - 0x73ffffcd] ; cld ; dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004441a8 : jo 0x44422e ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444212 ; std ; call qword ptr [rax]
0x00000000004444c0 : jo 0x444543 ; add byte ptr [rax], al ; ficomp dword ptr [rbx + 0x6a90fffd] ; add byte ptr [rax], al ; hlt ; wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x0000000000444500 : jo 0x444584 ; add byte ptr [rax], al ; jnp 0x4444ba ; std ; lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x0000000000444611 : jo 0x44461f ; add byte ptr [rdx - 0x3f], al ; std ; inc dword ptr [rax + 0x70] ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000444611 : jo 0x444627 ; add byte ptr [rdx - 0x3f], al ; std ; inc dword ptr [rax + 0x70] ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000444611 : jo 0x44462f ; add byte ptr [rdx - 0x3f], al ; std ; inc dword ptr [rax + 0x70] ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000444621 : jo 0x44462f ; add byte ptr [rsi - 0x3e], bl ; std ; inc dword ptr [rax - 0x77ffff90] ; ret 0xfffd
0x0000000000444629 : jo 0x444637 ; add byte ptr [rax - 0x5f00023e], cl ; jo 0x44463f ; add dh, al ; ret 0xfffd
0x0000000000444611 : jo 0x444637 ; add byte ptr [rdx - 0x3f], al ; std ; inc dword ptr [rax + 0x70] ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000444621 : jo 0x444637 ; add byte ptr [rsi - 0x3e], bl ; std ; inc dword ptr [rax - 0x77ffff90] ; ret 0xfffd
0x0000000000444631 : jo 0x444637 ; add dh, al ; ret 0xfffd
0x0000000000444639 : jo 0x44463f ; add ah, bl ; ret 0xfffd
0x0000000000444611 : jo 0x44463f ; add byte ptr [rdx - 0x3f], al ; std ; inc dword ptr [rax + 0x70] ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000444780 : jo 0x44480f ; add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x0000000000444780 : jo 0x44481f ; add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x0000000000444780 : jo 0x44484f ; add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x0000000000444dc0 : jo 0x444d69 ; add byte ptr [rax], al ; movabs dword ptr [0xca00009090fffe8a], eax ; mov bh, dh ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x000000000044c8b5 : jo 0x44c8bd ; add byte ptr [rcx - 3], cl ; std ; jmp qword ptr [rsi]
0x0000000000407252 : jp 0x407263 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000042cdbc : jp 0x42cdcd ; add byte ptr [rax], al ; leave ; ret
0x000000000042d017 : jp 0x42d028 ; add byte ptr [rax], al ; leave ; ret
0x000000000042e43b : jp 0x42e444 ; add byte ptr [rax], al ; leave ; ret
0x000000000044457c : jp 0x44452f ; std ; inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x0000000000444b85 : jp 0x444b87 ; jmp qword ptr [rax]
0x0000000000445899 : jp 0x44592f ; add byte ptr [rcx], al ; js 0x4458f1 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458cc ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445918 ; jmp rcx
0x0000000000448201 : jp 0x448201 ; call rdx
0x0000000000449770 : jp 0x44976a ; cld ; call rcx
0x000000000041568b : jrcxz 0x4156a4 ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000041568a : jrcxz 0x4156a5 ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000041dc4d : jrcxz 0x41dc3d ; add dword ptr [rax], eax ; movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000041dc4e : jrcxz 0x41dc5b ; add bl, dh ; movups xmmword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000041dcb5 : jrcxz 0x41dcbd ; add byte ptr [rdi], cl ; push rdi ; ret 0x2e0f
0x0000000000425583 : jrcxz 0x425575 ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004458d9 : jrcxz 0x4458d8 ; jmp rcx
0x0000000000445881 : jrcxz 0x4458d8 ; ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445909 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458e4 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445930 ; jmp rcx
0x00000000004500e2 : jrcxz 0x45012b ; add eax, 0xf700118e ; add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000040b424 : js 0x40b4b6 ; mov eax, dword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b423 : js 0x40b4b7 ; mov eax, dword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x0000000000412da3 : js 0x412dac ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x0000000000412dcb : js 0x412dd4 ; add byte ptr [rdi], cl ; push rdi ; ret
0x000000000041fea2 : js 0x41feab ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041fea1 : js 0x41feac ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041feb9 : js 0x41fec2 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041fed0 : js 0x41fed9 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000042f13e : js 0x42f19e ; pop rbp ; ret
0x00000000004302b0 : js 0x430305 ; std ; dec dword ptr [rax + 0x39] ; ret
0x000000000044343c : js 0x443458 ; cld ; call rax
0x0000000000443d18 : js 0x443d71 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000444130 : js 0x4441a4 ; add byte ptr [rax], al ; sub al, 0x17 ; std ; jmp qword ptr [rax + 0x5200005b]
0x0000000000444130 : js 0x4441b4 ; add byte ptr [rax], al ; sub al, 0x17 ; std ; jmp qword ptr [rax + 0x5200005b]
0x0000000000444b35 : js 0x444b37 ; jmp rax
0x0000000000444b45 : js 0x444b47 ; jmp qword ptr [rax]
0x000000000044589d : js 0x4458ed ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458c8 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445914 ; jmp rcx
0x0000000000447e70 : js 0x447eec ; cld ; jmp qword ptr [rdx]
0x0000000000447fb1 : js 0x447fb1 ; call qword ptr [rdx]
0x000000000044a838 : js 0x44a80d ; std ; jmp qword ptr [rax]
0x000000000044a858 : js 0x44a82d ; std ; jmp qword ptr [rsi]
0x000000000041e751 : lahf ; int 0xfe
0x0000000000437dcd : lahf ; mov bl, 0xfc ; dec dword ptr [rax - 0x7b] ; in eax, dx ; je 0x437e18 ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000424f2d : lahf ; out 0xfd, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000042ed2d : lahf ; std ; dec dword ptr [rax - 0x75] ; clc ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000044367f : lcall ptr [rax + 0x2f] ; add byte ptr [rax], al ; ret
0x0000000000443d1f : lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000443d0f : lcall ptr [rax + 0x4a] ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d7a ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000443d4f : lcall ptr [rax + 0x4b] ; add byte ptr [rax], al ; pushfq ; ret
0x0000000000447603 : lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000444507 : lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x000000000044ce63 : lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ceaf ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493db : lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3db : lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d427 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a2b : lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf2b : lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468c3 : lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044cd9b : lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044cff3 : lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x0000000000403c91 : lcall ptr [rbp - 0x3a] ; add eax, 0x24db16 ; add ebx, esi ; ret
0x000000000041e454 : lcall ptr [rbp - 0x3d] ; nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x00000000004274b6 : lcall ptr [rbp - 0x3d] ; push rbp ; mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; mov dword ptr [rbp - 8], esi ; mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x0000000000405029 : lcall ptr [rbp - 0x3d] ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x000000000040e34b : lcall ptr [rbp - 0x3d] ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000044a523 : lcall ptr [rcx + rax] ; add byte ptr [rax], al ; add al, 0 ; clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x00000000004156b6 : lcall ptr [rdi] ; pop rbp ; ret
0x0000000000444d21 : lea eax, dword ptr [rax] ; add al, ch ; test edi, esi ; push rax ; lea eax, dword ptr [rax] ; add byte ptr [rax], ah ; xchg dh, bh ; call qword ptr [rax]
0x0000000000444d29 : lea eax, dword ptr [rax] ; add byte ptr [rax], ah ; xchg dh, bh ; call qword ptr [rax]
0x000000000040b710 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7be ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7be ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7be ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b71b : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; test al, al ; je 0x40b7b3 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7b3 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7b3 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000444d11 : lea eax, dword ptr [rax] ; add byte ptr [rbx - 0x4f00017b], ah ; lea eax, dword ptr [rax] ; add dl, cl ; test edi, esi ; call rax
0x0000000000444d19 : lea eax, dword ptr [rax] ; add dl, cl ; test edi, esi ; call rax
0x000000000041de89 : lea eax, dword ptr [rbx] ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x1c], 0 ; cmp dword ptr [rbp - 0x1c], 9 ; jg 0x41e244 ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e12a ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x0000000000424a25 : lea eax, dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; test byte ptr [rax], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424ac6 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a89
0x000000000042ea21 : lea eax, dword ptr [rcx] ; add byte ptr [rax], al ; leave ; ret
0x000000000042d99b : lea eax, dword ptr [rdi] ; add byte ptr [rax], al ; leave ; ret
0x000000000042cb68 : lea ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000043835a : lea edi, dword ptr [rsi - 0x417b7bf2] ; stosb byte ptr [rdi], al ; mov edx, 0x59d1be77 ; mov si, 0xe725 ; push rsp ; mov esi, 0xbe4363b2 ; or edx, ecx ; xor dword ptr [rsi - 0x41dfcf81], edi ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x000000000041782f : lea edi, dword ptr [rsi - 0x76b70002] ; ret
0x000000000040f5a0 : lea edx, dword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041ffbf : lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x251c44], edx ; mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fffb ; jmp rsp
0x000000000041db0e : lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000410201 : lea edx, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041097e : lea edx, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000410211 : lea edx, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041098e : lea edx, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004106c9 : lea edx, dword ptr [rax - 1] ; mov rax, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000415811 : lea edx, dword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000407668 : lea edx, dword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082d1 : lea edx, dword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000411b48 : lea esi, dword ptr [rdx + rax + 0xcbf0000] ; add byte ptr [rax], al ; add al, ch ; imul ebx, dword ptr [rbx], 0x8948ffff ; ret
0x0000000000425756 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004114e9 : lea esp, dword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040f59f : lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410200 : lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041097d : lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000410210 : lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041098d : lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004106c8 : lea rdx, qword ptr [rax - 1] ; mov rax, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000415810 : lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000407667 : lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082d0 : lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000425755 : lea rsp, qword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004114e8 : lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004250e4 : leave ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043750b : leave ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b3
0x000000000043749b : leave ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b3
0x0000000000403fa5 : leave ; ret
0x000000000042b099 : leave ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004437af : ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000445527 : ljmp ptr [rax + 0x4d0000ae] ; mov cl, 0xfe ; call rax
0x0000000000444387 : ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x00000000004437bf : ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000444e47 : ljmp ptr [rax - 0x3bffff6e] ; mov dr1, esi ; call rax
0x000000000044377f : ljmp ptr [rax - 0x73ffffcd] ; cld ; dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000444397 : ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044379f : ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000042f748 : ljmp ptr [rcx] ; ret 0xd089
0x0000000000445883 : ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445907 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458e2 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44592e ; jmp rcx
0x0000000000450119 : lock adc dword ptr [rax], eax ; enter 0x504, -0x24 ; adc dword ptr [rax], eax ; xlatb ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000450125 : lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000443e70 : lock add byte ptr [r8], r8b ; xor bh, cl ; cld ; call qword ptr [rax]
0x0000000000418ce1 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x0000000000443a40 : lock add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x00000000004443a8 : lock add byte ptr gs:[rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000041db01 : lock add dword ptr [rax + rax*8 - 0x74b7b48c], eax ; clc ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d983 : lock add dword ptr [rax + rax*8 - 0x74b7d68c], eax ; clc ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9e3 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000040b6b8 : lock add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b726 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b726 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b706 : lock add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 0x8d], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7c8 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7c8 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7c8 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b77e : lock add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x00000000004308b9 : lock add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000044a23c : lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000042f08b : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044993c : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; mov dh, 0x2c ; std ; jmp qword ptr [rsi]
0x00000000004483a8 : lodsb al, byte ptr [rsi] ; jle 0x4483aa ; call qword ptr [rdx]
0x0000000000417910 : lodsb al, byte ptr [rsi] ; mov ebp, 0x8948fffe ; ret
0x0000000000428c55 : lodsb al, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042340f : lodsd eax, dword ptr [rsi] ; add bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004500f4 : lodsd eax, dword ptr [rsi] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004042a2 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x4042a7 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000042350f : lodsd eax, dword ptr [rsi] ; add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000041f9d9 : lodsd eax, dword ptr [rsi] ; jle 0x41f9e2 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000407e0f : lodsd eax, dword ptr [rsi] ; mov edx, 0x8948ffff ; ret
0x000000000040506b : loop 0x405076 ; add rax, rdx ; pop rbp ; ret
0x0000000000405ce3 : loop 0x405cf0 ; add rax, rdx ; pop rbp ; ret
0x00000000004078d8 : loop 0x4078e6 ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000414bfd : loop 0x414c08 ; add rax, rdx ; pop rbp ; ret
0x000000000041c635 : loop 0x41c640 ; add rax, rdx ; pop rbp ; ret
0x000000000041e497 : loop 0x41e4a2 ; add rax, rdx ; pop rbp ; ret
0x000000000041e4dd : loop 0x41e4e8 ; add rax, rdx ; pop rbp ; ret
0x000000000042783d : loop 0x427848 ; add rax, rdx ; pop rbp ; ret
0x0000000000427883 : loop 0x42788e ; add rax, rdx ; pop rbp ; ret
0x00000000004278c9 : loop 0x4278d4 ; add rax, rdx ; pop rbp ; ret
0x000000000042790f : loop 0x42791a ; add rax, rdx ; pop rbp ; ret
0x0000000000427955 : loop 0x427960 ; add rax, rdx ; pop rbp ; ret
0x0000000000427cbf : loop 0x427cca ; add rax, rdx ; pop rbp ; ret
0x00000000004387c0 : loop 0x4387c8 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43881e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004387bf : loop 0x4387c9 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43881f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004387be : loop 0x4387ca ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438820 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439640 : loop 0x439648 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43969e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043963f : loop 0x439649 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43969f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043963e : loop 0x43964a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396a0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a360 : loop 0x43a368 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3be ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a35f : loop 0x43a369 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3bf ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a35e : loop 0x43a36a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3c0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b020 : loop 0x43b028 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b07e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b01f : loop 0x43b029 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b07f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b01e : loop 0x43b02a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b080 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bce0 : loop 0x43bce8 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd3e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcdf : loop 0x43bce9 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd3f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcde : loop 0x43bcea ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd40 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9c0 : loop 0x43c9c8 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca1e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9bf : loop 0x43c9c9 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca1f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9be : loop 0x43c9ca ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca20 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d780 : loop 0x43d788 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7de ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d77f : loop 0x43d789 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7df ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d77e : loop 0x43d78a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7e0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e500 : loop 0x43e508 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e55e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4ff : loop 0x43e509 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e55f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4fe : loop 0x43e50a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e560 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f940 : loop 0x43f948 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f99e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f93f : loop 0x43f949 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f99f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f93e : loop 0x43f94a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9a0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440760 : loop 0x440768 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407be ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044075f : loop 0x440769 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407bf ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044075e : loop 0x44076a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407c0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413e0 : loop 0x4413e8 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44143e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413df : loop 0x4413e9 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44143f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413de : loop 0x4413ea ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441440 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442060 : loop 0x442068 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420be ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044205f : loop 0x442069 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420bf ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044205e : loop 0x44206a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420c0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fc0 : loop 0x442fc8 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44301e ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fbf : loop 0x442fc9 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44301f ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fbe : loop 0x442fca ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443020 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000445a70 : loop 0x445a6a ; sti ; jmp qword ptr [rax]
0x0000000000415809 : loope 0x415820 ; dec dword ptr [rax - 0x75] ; clc ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042e463 : loope 0x42e4df ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044380c : loope 0x44385f ; cld ; push rax ; xor eax, 0x46f00000 ; cld ; call qword ptr [rax]
0x0000000000450110 : loope 0x45012d ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000403c26 : loopne 0x403c99 ; nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000405d7c : loopne 0x405d86 ; add rax, rcx ; pop rbp ; ret
0x0000000000407665 : loopne 0x407687 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082ce : loopne 0x4082e2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000040840a : loopne 0x40845d ; add esp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000408409 : loopne 0x40845e ; add esp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004085c3 : loopne 0x4085d7 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004086ab : loopne 0x4086bf ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000040882a : loopne 0x4087bf ; pop rbp ; ret
0x0000000000408a5f : loopne 0x408a70 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000408c39 : loopne 0x408c4a ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004097b6 : loopne 0x409807 ; mov dword ptr [rax + 0x10], edx ; nop ; pop rbp ; ret
0x0000000000409797 : loopne 0x409807 ; mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000409796 : loopne 0x409808 ; mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000040b5a9 : loopne 0x40b60d ; add rax, rcx ; add rax, 0xa0 ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5d6 : loopne 0x40b60d ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040c97b : loopne 0x40c99b ; add byte ptr [rax], al ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40396b
0x000000000040e0fb : loopne 0x40e133 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0fa : loopne 0x40e134 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e108 : loopne 0x40e143 ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e8e2 : loopne 0x40e93f ; add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e912 : loopne 0x40e93f ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040f440 : loopne 0x40f44a ; add rax, rcx ; pop rbp ; ret
0x000000000040f807 : loopne 0x40f7f9 ; scasb al, byte ptr [rdi] ; nop ; leave ; ret
0x000000000040f806 : loopne 0x40f7fa ; scasb al, byte ptr [rdi] ; nop ; leave ; ret
0x000000000041201c : loopne 0x412083 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3b1
0x0000000000412047 : loopne 0x412083 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e386
0x000000000041451f : loopne 0x414559 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041451e : loopne 0x41455a ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004155f7 : loopne 0x4155fb ; dec ecx ; ret
0x0000000000415694 : loopne 0x4156a9 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000417419 : loopne 0x4173e2 ; or al, 0 ; add byte ptr [rax], al ; call 0x4036c8
0x000000000041ba0d : loopne 0x41ba47 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041ba0c : loopne 0x41ba48 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041d0cc : loopne 0x41d0e1 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000427bba : loopne 0x427bd2 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000042a247 : loopne 0x42a24d ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000042a261 : loopne 0x42a273 ; dec dword ptr [rax - 0x75] ; clc ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x000000000042ded8 : loopne 0x42deed ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042df92 : loopne 0x42dfa7 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042e04c : loopne 0x42e061 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042e106 : loopne 0x42e11b ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042e1c0 : loopne 0x42e1d5 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042e27a : loopne 0x42e28f ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042e334 : loopne 0x42e349 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042e3ee : loopne 0x42e403 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000431481 : loopne 0x4314bb ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431480 : loopne 0x4314bc ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000435549 : loopne 0x435583 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000435548 : loopne 0x435584 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000435a90 : loopne 0x435a93 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000443404 : loopne 0x443418 ; cld ; dec dword ptr [rax - 0x29ffffdc] ; or ah, bh ; jmp rax
0x0000000000443410 : loopne 0x443445 ; add byte ptr [rax], al ; mov bh, 0xb ; cld ; inc dword ptr [rax] ; and eax, 0xbd60000 ; cld ; jmp qword ptr [rax]
0x0000000000443628 : loopne 0x443666 ; add byte ptr [rax], al ; sub bh, byte ptr [rax] ; cld ; inc dword ptr [rax] ; add byte ptr cs:[rax], al ; cmp spl, r15b ; jmp qword ptr [rax]
0x0000000000443900 : loopne 0x44394a ; add byte ptr [rax], al ; xor al, 0x4c ; cld ; inc dword ptr [rax] ; cmp al, byte ptr [rax] ; add byte ptr [rsi + 0x4c], cl ; cld ; jmp qword ptr [rax]
0x0000000000443940 : loopne 0x44398b ; add byte ptr [rax], al ; push rbx ; cld ; inc dword ptr [rax] ; cmp eax, dword ptr [rax] ; add byte ptr [rcx + 0x4d], ah ; cld ; jmp qword ptr [rax]
0x0000000000443b90 : loopne 0x443be5 ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443bf8 : loopne 0x443c4f ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000443db0 : loopne 0x443e0d ; add byte ptr [rax], al ; mov esi, 0xfffcc5 ; add byte ptr [r8], r8b ; fadd st(5), st(0) ; cld ; jmp qword ptr [rax]
0x0000000000444060 : loopne 0x4440c8 ; add byte ptr [rax], al ; fdiv st(4), st(0) ; inc dword ptr [rax] ; pop rax ; add byte ptr [rax], al ; pop rsp ; fdiv st(4), st(0) ; jmp qword ptr [rax]
0x0000000000444ab8 : loopne 0x444a4c ; add byte ptr [rax], al ; retf -0x18b ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ad4 ; jmp qword ptr [rax]
0x0000000000444af8 : loopne 0x444a8d ; add byte ptr [rax], al ; or esi, dword ptr [rdi - 2] ; inc dword ptr [rax] ; test dword ptr [rax], eax ; add byte ptr [rdx], dh ; ja 0x444b14 ; jmp qword ptr [rax]
0x0000000000444d60 : loopne 0x444cff ; add byte ptr [rax], al ; int1 ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x00000000004455d8 : loopne 0x44559a ; add byte ptr [rax], al ; pop rbp ; mov bh, 0xfe ; inc dword ptr [rax] ; mov dl, 0 ; add dl, al ; mov bh, 0xfe ; jmp qword ptr [rax]
0x00000000004456cd : loopne 0x4456cf ; jmp qword ptr [rax]
0x00000000004458b0 : loopne 0x4458b5 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445901 ; jmp rcx
0x0000000000445641 : mov ah, 0 ; add byte ptr [rcx - 0x4f00012e], ch ; mov ah, 0 ; add byte ptr [rsi - 0x2f00012e], bh ; mov bl, 0 ; add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x0000000000445649 : mov ah, 0 ; add byte ptr [rsi - 0x2f00012e], bh ; mov bl, 0 ; add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x0000000000428443 : mov ah, 0x26 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000041d4a9 : mov ah, 0x43 ; add byte ptr [rax - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5d9 : mov ah, 0x43 ; add byte ptr [rax - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d589 : mov ah, 0x43 ; add byte ptr [rax - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d66b : mov ah, 0x43 ; add byte ptr [rax - 0x75], cl ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000044ab44 : mov ah, 0x52 ; add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044c744 : mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x0000000000443b9c : mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000429b08 : mov ah, 0x9d ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432a78 : mov ah, 0xb ; std ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000044f8f2 : mov ah, 0xc ; add eax, 0x1a0be ; ret
0x00000000004440bc : mov ah, 0xdf ; cld ; call rax
0x000000000044b668 : mov ah, 0xeb ; std ; call qword ptr [rcx]
0x00000000004181d7 : mov ah, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004085b1 : mov ah, 0xff ; dec dword ptr [rax - 0x75] ; push rbp ; clc ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004081fc : mov ah, 0xff ; dec ecx ; ret
0x0000000000407912 : mov ah, 6 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000040e077 : mov ah, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; cwde ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x0000000000445599 : mov al, 0 ; add ch, dl ; mov ch, 0xfe ; inc dword ptr [rax] ; mov cl, 0 ; add byte ptr [rsi], al ; mov dh, 0xfe ; jmp qword ptr [rax]
0x0000000000443528 : mov al, 0x29 ; add byte ptr [rax], al ; push 0x29 ; cld ; call rax
0x000000000044353c : mov al, 0x29 ; cld ; call qword ptr [rax]
0x0000000000443710 : mov al, 0x31 ; add byte ptr [rax], al ; mov byte ptr [rsi], bh ; cld ; call rax
0x0000000000443800 : mov al, 0x35 ; add byte ptr [rax], al ; mov bl, 0x46 ; cld ; call rax
0x00000000004439f0 : mov al, 0x3d ; add byte ptr [rax], al ; in al, 0x51 ; cld ; call rax
0x0000000000443a30 : mov al, 0x3e ; add byte ptr [rax], al ; mov esp, 0xd0fffc53 ; add byte ptr ds:[rax], al ; retf -0x3ad ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x0000000000443e60 : mov al, 0x4f ; add byte ptr [rax], al ; jbe 0x443e3b ; cld ; call rax
0x0000000000443f18 : mov al, 0x52 ; add byte ptr [rax], al ; push rsp ; salc ; cld ; call rax
0x0000000000443f58 : mov al, 0x53 ; add byte ptr [rax], al ; xlatb ; cld ; call rax
0x00000000004441b8 : mov al, 0x5d ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444202 ; std ; call qword ptr [rax]
0x0000000000444490 : mov al, 0x69 ; add byte ptr [rax], al ; wait ; std ; call rax
0x00000000004444d0 : mov al, 0x6a ; add byte ptr [rax], al ; add bl, byte ptr [rbp + rdi*8 + 0x6ad0ff] ; add byte ptr [rsp + rbx*4 - 3], al ; push rax ; push 0 ; add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x0000000000444888 : mov al, 0x7a ; add byte ptr [rax], al ; xor byte ptr [rax - 2], dl ; call rax
0x00000000004449f8 : mov al, 0x80 ; add byte ptr [rax], al ; or byte ptr [rcx - 2], ah ; call rax
0x0000000000444d18 : mov al, 0x8d ; add byte ptr [rax], al ; retf -0x17b ; call rax
0x0000000000444dd0 : mov al, 0x90 ; add byte ptr [rax], al ; call 0xffffffffd1444c6a
0x000000000042c828 : mov al, 0xb ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000445648 : mov al, 0xb4 ; add byte ptr [rax], al ; mov esi, 0xd0fffed2 ; mov bl, 0 ; add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x0000000000445505 : mov al, 0xfe ; call qword ptr [rax]
0x00000000004185c2 : mov al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000044551d : mov al, 0xfe ; inc dword ptr [rax + 0x10000ae] ; mov cl, 0xfe ; ljmp ptr [rax + 0x4d0000ae] ; mov cl, 0xfe ; call rax
0x000000000040e92a : mov al, 2 ; add bl, dh ; mulps xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040f934 : mov al, 8 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000040c97a : mov al, ah ; add eax, dword ptr [rax] ; add bl, dh ; movups xmm0, xmmword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40396c
0x000000000040b4a8 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004042b9 : mov al, byte ptr [rbx] ; jmp rax
0x0000000000408859 : mov al, byte ptr [rcx] ; add byte ptr [rax], al ; leave ; ret
0x000000000040c960 : mov al, ch ; add eax, dword ptr [rax] ; add bl, dh ; movups xmm0, xmmword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403986
0x000000000040e043 : mov al, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; cwde ; movss xmm0, dword ptr [rax + 0x3e8] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040c946 : mov al, dh ; add eax, dword ptr [rax] ; add bl, dh ; movups xmm0, xmmword ptr [rip + 0x2d01d] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4039a0
0x0000000000445739 : mov bh, 0 ; add al, cl ; adc edi, edi ; call qword ptr [rax]
0x0000000000443414 : mov bh, 0xb ; cld ; inc dword ptr [rax] ; and eax, 0xbd60000 ; cld ; jmp qword ptr [rax]
0x0000000000437e46 : mov bh, 0xfc ; inc dword ptr [rax] ; add byte ptr [rax], al ; sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004445cd : mov bh, 0xfd ; call qword ptr [rax]
0x0000000000417ede : mov bh, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004455dd : mov bh, 0xfe ; inc dword ptr [rax] ; mov dl, 0 ; add dl, al ; mov bh, 0xfe ; jmp qword ptr [rax]
0x00000000004455e5 : mov bh, 0xfe ; jmp qword ptr [rax]
0x00000000004455d5 : mov bh, 0xfe ; jmp rax
0x0000000000425a21 : mov bh, bh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000417b32 : mov bh, byte ptr [rbx - 0x76b70002] ; ret
0x000000000044433d : mov bh, ch ; jmp qword ptr [rax - 0x4effff9c]
0x0000000000444dd5 : mov bh, dh ; call rax
0x000000000041b0e5 : mov bh, dh ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000444dcd : mov bh, dh ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x0000000000444dbd : mov bh, dh ; push qword ptr [rax - 0x70] ; add byte ptr [rax], al ; movabs dword ptr [0xca00009090fffe8a], eax ; mov bh, dh ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x0000000000445659 : mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x0000000000445651 : mov bl, 0 ; add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x0000000000429803 : mov bl, 0x21 ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000443804 : mov bl, 0x46 ; cld ; call rax
0x000000000043751d : mov bl, 0xbe ; add byte ptr [rax], al ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a1
0x0000000000437dce : mov bl, 0xfc ; dec dword ptr [rax - 0x7b] ; in eax, dx ; je 0x437e17 ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000044556d : mov bl, 0xfe ; call qword ptr [rax]
0x00000000004183a5 : mov bl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000408699 : mov bl, 0xff ; dec dword ptr [rax - 0x75] ; push rbp ; clc ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042dcd0 : mov bl, 6 ; add byte ptr [rax], al ; leave ; ret
0x000000000042e042 : mov bl, byte ptr [rcx - 3] ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000427eae : mov bl, byte ptr [rcx] ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000432065 : mov bl, dh ; movups xmm2, xmmword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e367
0x000000000043203c : mov bl, dh ; movups xmm2, xmmword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e390
0x000000000041817c : mov bpl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432020 : mov byte ptr [r8 - 0x75], r9b ; sbb bl, sil ; movups xmm1, xmmword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3ac
0x000000000043204f : mov byte ptr [r8 - 0x75], r9b ; sbb bl, sil ; movups xmm1, xmmword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e37d
0x000000000041f671 : mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x000000000041eca8 : mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x000000000040f67c : mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000437b06 : mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000436d24 : mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x0000000000435e44 : mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435f86 : mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000435f8e : mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000424796 : mov byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x6670
0x000000000040b48a : mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b498 : mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b4a6 : mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b6c0 : mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b71e ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b71e ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6e7 : mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b70e : mov byte ptr [rax + 0x8d], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7c0 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7c0 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7c0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b75f : mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b786 : mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d3d2 : mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d3bd : mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d9ae : mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004308c1 : mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x00000000004308ac : mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041065d : mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000443408 : mov byte ptr [rax + rax], ah ; add dh, dl ; or ah, bh ; jmp rax
0x00000000004448f8 : mov byte ptr [rax + rax], bh ; enter -0x1ae, -1 ; test al, 0x7c ; add byte ptr [rax], al ; cmp dl, byte ptr [rbx - 2] ; call rax
0x000000000042c678 : mov byte ptr [rax + rax], cl ; add byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x00000000004437b8 : mov byte ptr [rax + rax], dh ; add byte ptr [rcx + 0x45], ah ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000432021 : mov byte ptr [rax - 0x75], cl ; sbb bl, sil ; movups xmm1, xmmword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3ab
0x0000000000432050 : mov byte ptr [rax - 0x75], cl ; sbb bl, sil ; movups xmm1, xmmword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e37c
0x0000000000404c06 : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000041d3ab : mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040b48c : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b281 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000444be1 : mov byte ptr [rax], al ; add byte ptr [rsp + rdi*2 - 0x77470002], cl ; add byte ptr [rax], al ; push rsi ; jge 0x444bfb ; jmp rax
0x000000000041ffd0 : mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41ffea ; jmp rsp
0x000000000040b47c : mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b47f : mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b479 : mov byte ptr [rbp - 0xc], dh ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b478 : mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x0000000000444390 : mov byte ptr [rbp], ah ; add byte ptr [rax - 0x6e], ch ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000443778 : mov byte ptr [rbx], dh ; add byte ptr [rax], al ; jo 0x443821 ; cld ; ljmp ptr [rax - 0x73ffffcd] ; cld ; dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000044eec0 : mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x000000000040c424 : mov byte ptr [rdi - 1], dh ; inc dword ptr [rbx - 0x16fe03bb] ; jmp 0xffffffffe940c450
0x000000000040b61e : mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b5ee : mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5ff : mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000042cc92 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; leave ; ret
0x0000000000403c93 : mov byte ptr [rip + 0x24db16], 1 ; ret
0x0000000000428776 : mov byte ptr [rip - 0x36700000], ah ; ret
0x0000000000443714 : mov byte ptr [rsi], bh ; cld ; call rax
0x00000000004456b9 : mov ch, 0 ; add ah, bl ; fsin ; jmp rax
0x0000000000424f07 : mov ch, 0xe7 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004351f7 : mov ch, 0xe9 ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x00000000004180c9 : mov ch, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000044559d : mov ch, 0xfe ; inc dword ptr [rax] ; mov cl, 0 ; add byte ptr [rsi], al ; mov dh, 0xfe ; jmp qword ptr [rax]
0x00000000004080de : mov ch, 0xff ; dec ecx ; ret
0x00000000004455a1 : mov cl, 0 ; add byte ptr [rsi], al ; mov dh, 0xfe ; jmp qword ptr [rax]
0x000000000042bc0d : mov cl, 0x12 ; add byte ptr [rax], al ; leave ; ret
0x000000000042b70d : mov cl, 0x15 ; add byte ptr [rax], al ; leave ; ret
0x00000000004387ad : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4387db ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438831 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043962d : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43965b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396b1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a34d : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43a37b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3d1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b00d : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43b03b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b091 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bccd : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43bcfb ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd51 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9ad : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43c9db ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca31 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d76d : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43d79b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7f1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4ed : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43e51b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e571 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f92d : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43f95b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9b1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044074d : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x44077b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407d1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413cd : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4413fb ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441451 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044204d : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x44207b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420d1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fad : mov cl, 0x95 ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x442fdb ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443031 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000427377 : mov cl, 0xdc ; std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000443c5d : mov cl, 0xfc ; inc eax ; add byte ptr [r8], r8b ; sub al, 0xb2 ; cld ; jmp rax
0x000000000044552d : mov cl, 0xfe ; call rax
0x00000000004184d1 : mov cl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000044553d : mov cl, 0xfe ; jmp qword ptr [rax]
0x0000000000445525 : mov cl, 0xfe ; ljmp ptr [rax + 0x4d0000ae] ; mov cl, 0xfe ; call rax
0x00000000004084f7 : mov cl, 0xff ; dec ecx ; ret
0x0000000000420d3c : mov dh, 0 ; movsx eax, al ; sub eax, 0x20 ; cmp eax, 0x5c ; ja 0x423d27 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x000000000042447b : mov dh, 0 ; movsx eax, al ; sub eax, 0x21 ; cmp eax, 0x5d ; ja 0x424b40 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x000000000041dafe : mov dh, 0 ; xor eax, 1 ; test al, al ; je 0x41dba8 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040fae1 : mov dh, 0x10 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410657 : mov dh, 0x10 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000449940 : mov dh, 0x2c ; std ; jmp qword ptr [rsi]
0x00000000004308b5 : mov dh, 0x40 ; add al, 0x83 ; lock add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041d97f : mov dh, 0x40 ; add dword ptr [rbx - 0x3f7bfe10], eax ; je 0x41d9e7 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9e7 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000436d13 : mov dh, 0x40 ; cmp dword ptr [rbp - 0x3d], ebx ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x000000000041ec97 : mov dh, 0x40 ; sbb al, 0x5d ; ret
0x00000000004042a7 : mov dh, 0x45 ; ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x4042a2 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000040f675 : mov dh, 0x50 ; sub byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040b487 : mov dh, 0x55 ; hlt ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b4a3 : mov dh, 0x55 ; in al, dx ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b719 : mov dh, 0x80 ; lea eax, dword ptr [rax] ; add byte ptr [rax], al ; test al, al ; je 0x40b7b5 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7b5 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7b5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b6cb : mov dh, 0x80 ; mov eax, dword ptr [rax] ; add byte ptr [rax], al ; test al, al ; je 0x40b713 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b713 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6b1 : mov dh, 0x80 ; mov eax, dword ptr [rax] ; add byte ptr [rax], al ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b72d ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b72d ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b777 : mov dh, 0x80 ; pop qword ptr [rax] ; add byte ptr [rax], al ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x0000000000404e6c : mov dh, 0x95 ; jmp 0x404e78
0x000000000042cb17 : mov dh, 0xa ; add byte ptr [rax], al ; leave ; ret
0x00000000004042ab : mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x40429e ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000417fec : mov dh, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004455a5 : mov dh, 0xfe ; jmp qword ptr [rax]
0x0000000000410a76 : mov dh, 2 ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004084a6 : mov dh, 3 ; add byte ptr [rax], al ; leave ; ret
0x0000000000404678 : mov dh, 5 ; ret 0x24ce
0x000000000041b2f5 : mov dh, bh ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000444d6d : mov dh, bh ; jmp qword ptr [rax]
0x000000000044d4a0 : mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000042c4c2 : mov di, bp ; dec dword ptr [rax - 0x77] ; ret
0x00000000004455e1 : mov dl, 0 ; add dl, al ; mov bh, 0xfe ; jmp qword ptr [rax]
0x000000000043250a : mov dl, 0x11 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043210a : mov dl, 0x15 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043200a : mov dl, 0x16 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004380b6 : mov dl, 0x3d ; ret 0x8edc
0x0000000000438a94 : mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x00000000004387c4 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43881a ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004387c3 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43881b ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439644 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43969a ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439643 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43969b ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a364 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3ba ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a363 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3bb ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b024 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b07a ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b023 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b07b ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bce4 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd3a ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bce3 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd3b ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9c4 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca1a ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9c3 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca1b ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d784 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7da ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d783 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7db ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e504 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e55a ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e503 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e55b ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f944 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f99a ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f943 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f99b ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440764 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407ba ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440763 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407bb ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413e4 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44143a ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413e3 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44143b ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442064 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420ba ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442063 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420bb ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fc4 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44301a ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fc3 : mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44301b ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000447ed0 : mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x000000000044f8ee : mov dl, 0xaa ; add dword ptr [rax], eax ; mov ah, 0xc ; add eax, 0x1a0be ; ret
0x0000000000438386 : mov dl, 0xbd ; ret 0x8edc
0x0000000000443c65 : mov dl, 0xfc ; jmp rax
0x0000000000444634 : mov dl, 0xfd ; inc eax ; jo 0x444644 ; add ah, bl ; ret 0xfffd
0x00000000004183ff : mov dl, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000445a2c : mov dl, 3 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; movsd dword ptr [rdi], dword ptr [rsi] ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x0000000000443bf4 : mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000444e4d : mov dr1, esi ; call rax
0x000000000041ad1e : mov dr1, esi ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000444b74 : mov dr1, word ptr [rcx - 2] ; jmp rax
0x00000000004101f5 : mov dword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410972 : mov dword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435905 : mov dword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b5a : mov dword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000041d3db : mov dword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000410719 : mov dword ptr [rax + 0x10], ecx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411119 : mov dword ptr [rax + 0x10], ecx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f65d : mov dword ptr [rax + 0x10], ecx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fac9 : mov dword ptr [rax + 0x10], ecx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x00000000004082d9 : mov dword ptr [rax + 0x10], edx ; nop ; leave ; ret
0x00000000004097b8 : mov dword ptr [rax + 0x10], edx ; nop ; pop rbp ; ret
0x000000000041d71d : mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d776 : mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d700 : mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d74a ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d75c : mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7a0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000435911 : mov dword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000410721 : mov dword ptr [rax + 0x18], ecx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411121 : mov dword ptr [rax + 0x18], ecx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f665 : mov dword ptr [rax + 0x18], ecx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fad1 : mov dword ptr [rax + 0x18], ecx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000041e527 : mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7f5 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x0000000000410209 : mov dword ptr [rax + 0x18], edx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410986 : mov dword ptr [rax + 0x18], edx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000043591d : mov dword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000431599 : mov dword ptr [rax + 0x20], ebx ; mov rax, qword ptr [rbp - 0x18] ; pxor xmm0, xmm0 ; movss dword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000410729 : mov dword ptr [rax + 0x20], ecx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411129 : mov dword ptr [rax + 0x20], ecx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f66d : mov dword ptr [rax + 0x20], edx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fad9 : mov dword ptr [rax + 0x20], edx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410219 : mov dword ptr [rax + 0x20], edx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410996 : mov dword ptr [rax + 0x20], edx ; nop ; pop rbp ; ret
0x0000000000435e39 : mov dword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435929 : mov dword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000410221 : mov dword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041c4c7 : mov dword ptr [rax + 0x28], ebx ; nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000410731 : mov dword ptr [rax + 0x28], ecx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x00000000004106d1 : mov dword ptr [rax + 0x28], edx ; nop ; leave ; ret
0x0000000000435f7b : mov dword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000435935 : mov dword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000414a8f : mov dword ptr [rax + 0x30], ebx ; nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000410739 : mov dword ptr [rax + 0x30], ecx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x00000000004099ba : mov dword ptr [rax + 0x30], edx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb4
0x0000000000435941 : mov dword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x00000000004099f1 : mov dword ptr [rax + 0x38], edx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb4
0x0000000000410741 : mov dword ptr [rax + 0x38], edx ; nop ; leave ; ret
0x0000000000409a28 : mov dword ptr [rax + 0x40], edx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb4
0x0000000000409a5f : mov dword ptr [rax + 0x48], edx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb4
0x000000000040b54a : mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b743 : mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b751 : mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041f66a : mov dword ptr [rax + 4], edx ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x000000000041d3b2 : mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000410966 : mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004358f9 : mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b4e : mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000410711 : mov dword ptr [rax + 8], ecx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411111 : mov dword ptr [rax + 8], ecx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f655 : mov dword ptr [rax + 8], ecx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fac1 : mov dword ptr [rax + 8], ecx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000407670 : mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041db15 : mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004082b5 : mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x00000000004097ac : mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000406cc9 : mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x0000000000409122 : mov dword ptr [rax + 8], edx ; nop ; pop rbp ; ret
0x00000000004358ee : mov dword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b43 : mov dword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000040b49a : mov dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x0000000000406cc4 : mov dword ptr [rax], ecx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x000000000041070a : mov dword ptr [rax], ecx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000041110a : mov dword ptr [rax], ecx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f64e : mov dword ptr [rax], ecx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040faba : mov dword ptr [rax], ecx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410aee : mov dword ptr [rax], edx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000410650 : mov dword ptr [rax], edx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x000000000041e51e : mov dword ptr [rax], edx ; mov rax, qword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7fe ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000040f4dd : mov dword ptr [rax], edx ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x00000000004082a7 : mov dword ptr [rax], edx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x00000000004097a1 : mov dword ptr [rax], edx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000409117 : mov dword ptr [rax], edx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040f5a8 : mov dword ptr [rax], edx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415158 : mov dword ptr [rax], edx ; nop ; leave ; ret
0x0000000000406f24 : mov dword ptr [rax], edx ; nop ; pop rbp ; ret
0x0000000000408824 : mov dword ptr [rbp - 0x10], edi ; mov qword ptr [rbp - 0x20], rsi ; nop ; pop rbp ; ret
0x00000000004087b1 : mov dword ptr [rbp - 0x10], edi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000430655 : mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x00000000004307b9 : mov dword ptr [rbp - 0x10], esi ; mov eax, 0x18 ; pop rbp ; ret
0x00000000004306ff : mov dword ptr [rbp - 0x10], esi ; mov eax, 0xc ; pop rbp ; ret
0x000000000040978d : mov dword ptr [rbp - 0x10], esi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000410adb : mov dword ptr [rbp - 0x10], esi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000409107 : mov dword ptr [rbp - 0x10], esi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040faa7 : mov dword ptr [rbp - 0x10], esi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000041063d : mov dword ptr [rbp - 0x10], esi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000406f15 : mov dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040b411 : mov dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x0000000000405951 : mov dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040505b : mov dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cd3 : mov dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000405d63 : mov dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f5f1 : mov dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4a1 : mov dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x0000000000410235 : mov dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f63f : mov dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000405963 : mov dword ptr [rbp - 0x10], esi ; nop ; pop rbp ; ret
0x000000000042b605 : mov dword ptr [rbp - 0x18], eax ; mov rax, qword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x427850
0x0000000000409791 : mov dword ptr [rbp - 0x18], edx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000410adf : mov dword ptr [rbp - 0x18], edx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040910b : mov dword ptr [rbp - 0x18], edx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040faab : mov dword ptr [rbp - 0x18], edx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410641 : mov dword ptr [rbp - 0x18], edx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x000000000041206c : mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e361
0x000000000041de8d : mov dword ptr [rbp - 0x1c], 0 ; cmp dword ptr [rbp - 0x1c], 9 ; jg 0x41e240 ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e126 ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x0000000000417417 : mov dword ptr [rbp - 0x20], ebx ; mov edi, 0xc ; call 0x4036ca
0x0000000000409795 : mov dword ptr [rbp - 0x20], ecx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000408828 : mov dword ptr [rbp - 0x20], esi ; nop ; pop rbp ; ret
0x000000000041747d : mov dword ptr [rbp - 0x28], ebx ; mov edi, 0xc ; call 0x4036ca
0x000000000042497b : mov dword ptr [rbp - 0x84], 0 ; cmp dword ptr [rbp - 0x84], 3 ; jg 0x424a08 ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249cb
0x00000000004249d5 : mov dword ptr [rbp - 0x88], 0 ; cmp dword ptr [rbp - 0x88], 3 ; jg 0x424a62 ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a25
0x0000000000424a2f : mov dword ptr [rbp - 0x8c], 0 ; cmp dword ptr [rbp - 0x8c], 3 ; jg 0x424abc ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a7f
0x0000000000424a89 : mov dword ptr [rbp - 0x90], 0 ; cmp dword ptr [rbp - 0x90], 3 ; jg 0x424b16 ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ad9
0x0000000000430652 : mov dword ptr [rbp - 0xc], esi ; mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x000000000040b540 : mov dword ptr [rbp - 0xc], esi ; mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b612 : mov dword ptr [rbp - 0xc], esi ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x00000000004274bd : mov dword ptr [rbp - 4], edi ; mov dword ptr [rbp - 8], esi ; mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x000000000043064f : mov dword ptr [rbp - 8], edi ; mov dword ptr [rbp - 0xc], esi ; mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x000000000040b53d : mov dword ptr [rbp - 8], edi ; mov dword ptr [rbp - 0xc], esi ; mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b60f : mov dword ptr [rbp - 8], edi ; mov dword ptr [rbp - 0xc], esi ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b473 : mov dword ptr [rbp - 8], edi ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040e397 : mov dword ptr [rbp - 8], edi ; mov edx, 0x4399b8 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004307b5 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0x18 ; pop rbp ; ret
0x00000000004306fb : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0xc ; pop rbp ; ret
0x0000000000409789 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000410ad7 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000409103 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040faa3 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410639 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000406f11 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040b40d : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040594d : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405057 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405ccf : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000405d5f : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f5ed : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f49d : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x0000000000410231 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f63b : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040595f : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410259 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; add rax, 8 ; pop rbp ; ret
0x000000000041eca1 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x0000000000436d1d : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x00000000004308a5 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041095f : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000437ad1 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b45 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b45 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b45 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x00000000004101ed : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000407d63 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040f813 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x00000000004100d8 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d6d1 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d779 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d72d : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7cf ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000405cef : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405031 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405ca9 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bef : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x000000000040f595 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d2f : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000041f641 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec8f : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x0000000000436d0b : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x000000000040b6a9 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b735 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b735 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b76f : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9bb : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x0000000000405e43 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004085d9 : mov dword ptr [rbp - 8], edi ; movabs rax, 0x1555555555555555 ; pop rbp ; ret
0x00000000004156ab : mov dword ptr [rbp - 8], edi ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x0000000000411201 : mov dword ptr [rbp - 8], edi ; movabs rax, 0x333333333333333 ; pop rbp ; ret
0x000000000041103d : mov dword ptr [rbp - 8], edi ; movabs rax, 0x3ffffffffffffff ; pop rbp ; ret
0x0000000000408865 : mov dword ptr [rbp - 8], edi ; movabs rax, 0x7ffffffffffffff ; pop rbp ; ret
0x000000000040b4b5 : mov dword ptr [rbp - 8], edi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4f9 : mov dword ptr [rbp - 8], edi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e353 : mov dword ptr [rbp - 8], edi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000407881 : mov dword ptr [rbp - 8], edi ; nop ; pop rbp ; ret
0x00000000004274c0 : mov dword ptr [rbp - 8], esi ; mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x00000000004251e6 : mov dword ptr [rbx], 0x89480000 ; ret
0x0000000000446430 : mov dword ptr [rbx], ecx ; cld ; jmp qword ptr [rsi]
0x000000000042d8a7 : mov dword ptr [rdi], 0xc3c90000 ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041d80a : mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x000000000040706d : mov dword ptr [rdx], ecx ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000041ffc2 : mov dword ptr [rip + 0x251c44], edx ; mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fff8 ; jmp rsp
0x0000000000404fca : mov eax, 0 ; add rsp, 0x138 ; pop rbx ; pop rbp ; ret
0x0000000000406eac : mov eax, 0 ; leave ; ret
0x000000000040977d : mov eax, 0 ; pop rbp ; ret
0x0000000000403c15 : mov eax, 0 ; test rax, rax ; je 0x403c40 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c63 : mov eax, 0 ; test rax, rax ; je 0x403c88 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403cb0 : mov eax, 0 ; test rax, rax ; je 0x403cb9 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004307bc : mov eax, 0x18 ; pop rbp ; ret
0x000000000041de77 : mov eax, 0x20768b48 ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000411205 : mov eax, 0x33333333 ; xor esi, dword ptr [rbx] ; xor eax, dword ptr [rbx] ; pop rbp ; ret
0x0000000000432274 : mov eax, 0x38bf ; add al, ch ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000004324b6 : mov eax, 0x38bf ; add al, ch ; call qword ptr [rcx]
0x0000000000431e0f : mov eax, 0x38bf ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004320ad : mov eax, 0x38bf ; add al, ch ; or byte ptr [rsi], dl ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000419363 : mov eax, 0x3948ffff ; ret
0x000000000041de6a : mov eax, 0x42100ff3 ; xor bl, dh ; cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000040e39b : mov eax, 0x48004399 ; mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000444be8 : mov eax, 0x56000088 ; jge 0x444bf4 ; jmp rax
0x000000000041f4f1 : mov eax, 0x5b000000 ; pop rbp ; ret
0x0000000000403c00 : mov eax, 0x651567 ; push rbp ; sub rax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c55 ; mov eax, 0 ; test rax, rax ; je 0x403c55 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000417e01 : mov eax, 0x8948fffe ; ret
0x000000000041ffb5 : mov eax, 0x8b000000 ; add eax, 0x251c4d ; lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x251c44], edx ; mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x420005 ; jmp rsp
0x0000000000443d28 : mov eax, 0x9200004a ; ret 0xfffc
0x0000000000444534 : mov eax, 0xa0fffda1 ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; movabs byte ptr [0xa2dc00006cc0fffd], al ; std ; jmp rax
0x0000000000406e6b : mov eax, 0xaaaaaaab ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d12 : mov eax, 0xaaaaaaab ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; pop rbp ; ret
0x0000000000430702 : mov eax, 0xc ; pop rbp ; ret
0x0000000000437d7b : mov eax, 0xc990fffc ; ret
0x00000000004456b8 : mov eax, 0xdc0000b5 ; fsin ; jmp rax
0x0000000000429e15 : mov eax, 0xe8c78948 ; in eax, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000042a091 : mov eax, 0xe8c78948 ; nop ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000429cd4 : mov eax, 0xe8c78948 ; outsd dx, dword ptr [rsi] ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000040e091 : mov eax, 0xff30002 ; pop rsi ; ror dword ptr [rax - 0x75], 0x45 ; cwde ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040520e : mov eax, 1 ; leave ; ret
0x0000000000435834 : mov eax, 1 ; pop rbp ; ret
0x0000000000412064 : mov eax, dword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e369
0x0000000000407d6b : mov eax, dword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000043149f : mov eax, dword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314b4 : mov eax, dword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414514 : mov eax, dword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043148b : mov eax, dword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000412039 : mov eax, dword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e394
0x000000000040f81b : mov eax, dword ptr [rax + 0x10] ; pop rbp ; ret
0x0000000000437afa : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b1c ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000041d70b : mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d73f ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d767 : mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d795 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000042743a : mov eax, dword ptr [rax + 0x180] ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x000000000041d802 : mov eax, dword ptr [rax + 0x18] ; add eax, 0x168 ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x0000000000437af3 : mov eax, dword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b23 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437ae3 : mov eax, dword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b33 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b33 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000041453d : mov eax, dword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414552 : mov eax, dword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414529 : mov eax, dword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000432023 : mov eax, dword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3a9
0x0000000000432052 : mov eax, dword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e37a
0x00000000004100e0 : mov eax, dword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d71a : mov eax, dword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d773 : mov eax, dword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d708 : mov eax, dword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d742 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d764 : mov eax, dword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d798 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d7ff : mov eax, dword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x18] ; add eax, 0x168 ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x0000000000431656 : mov eax, dword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6d9 : mov eax, dword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d771 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d735 : mov eax, dword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7c7 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d485 : mov eax, dword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d565 : mov eax, dword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d68c : mov eax, dword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5f7 : mov eax, dword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db1d : mov eax, dword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d999 : mov eax, dword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004106c5 : mov eax, dword ptr [rax + 0x28] ; lea rdx, qword ptr [rax - 1] ; mov rax, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000436fdc : mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ca
0x00000000004374fc : mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c2
0x000000000043748c : mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c2
0x000000000040b6d9 : mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b705 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b727 : mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7a7 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7a7 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b735 : mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b799 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000427260 : mov eax, dword ptr [rax + 0xc] ; cmp eax, 4 ; ja 0x4272c6 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x000000000041db0b : mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000405cf7 : mov eax, dword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405039 : mov eax, dword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cb1 : mov eax, dword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bf7 : mov eax, dword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000431476 : mov eax, dword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041d98d : mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9d9 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004042b5 : mov eax, dword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000041deac : mov eax, dword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000041e539 : mov eax, dword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e864 : mov eax, dword ptr [rax*8 + 0x43cdb0] ; jmp rax
0x000000000041ef3a : mov eax, dword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000041f183 : mov eax, dword ptr [rax*8 + 0x43db78] ; jmp rax
0x0000000000420d50 : mov eax, dword ptr [rax*8 + 0x43e980] ; jmp rax
0x000000000042448f : mov eax, dword ptr [rax*8 + 0x43ec68] ; jmp rax
0x000000000042726b : mov eax, dword ptr [rax*8 + 0x43ef58] ; jmp rax
0x000000000040b6c2 : mov eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b71c ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b71c ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6cd : mov eax, dword ptr [rax] ; add byte ptr [rax], al ; test al, al ; je 0x40b711 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b711 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6b3 : mov eax, dword ptr [rax] ; add byte ptr [rax], al ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b72b ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b72b ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000042b5ff : mov eax, dword ptr [rax] ; add rax, rbx ; mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x427856
0x0000000000409b0e : mov eax, dword ptr [rax] ; cdqe ; mov rdx, qword ptr [rbp - 0x38] ; add rdx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d6e
0x000000000040f580 : mov eax, dword ptr [rax] ; cmp rbx, rax ; setne al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040f600 : mov eax, dword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4b0 : mov eax, dword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x000000000040f59d : mov eax, dword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004089c6 : mov eax, dword ptr [rax] ; leave ; ret
0x000000000042725e : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xc] ; cmp eax, 4 ; ja 0x4272c8 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x0000000000437af7 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b1f ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000041de5f : mov eax, dword ptr [rax] ; mov rdx, qword ptr [rax] ; mov rcx, qword ptr [rdx] ; mov rdx, qword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000405063 : mov eax, dword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cdb : mov eax, dword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000412067 : mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e366
0x0000000000406d37 : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000406e5b : mov eax, dword ptr [rax] ; sub rbx, rax ; mov rax, rbx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004152e9 : mov eax, dword ptr [rax] ; sub rbx, rax ; mov rax, rbx ; sar rax, 3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004077a3 : mov eax, dword ptr [rax] ; sub rbx, rax ; mov rax, rbx ; sar rax, 5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041089f : mov eax, dword ptr [rax] ; sub rbx, rax ; mov rax, rbx ; sar rax, 6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d02 : mov eax, dword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405044 : mov eax, dword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cbc : mov eax, dword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410c02 : mov eax, dword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000437ad8 : mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b3e ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b3e ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b3e ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437ae7 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x437b2f ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b2f ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000040e135 : mov eax, dword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b453 : mov eax, dword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b426 : mov eax, dword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b43b : mov eax, dword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x00000000004062c8 : mov eax, dword ptr [rbp - 0x10] ; leave ; ret
0x000000000040f5fc : mov eax, dword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4ac : mov eax, dword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x0000000000410ae3 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000406f19 : mov eax, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040b5b9 : mov eax, dword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b415 : mov eax, dword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040f671 : mov eax, dword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000405955 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040b5e9 : mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5fa : mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5c5 : mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000041205d : mov eax, dword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e370
0x0000000000412032 : mov eax, dword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e39b
0x000000000043202b : mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3a1
0x000000000040e8f2 : mov eax, dword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000427a93 : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000406dfb : mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000404c0a : mov eax, dword ptr [rbp - 0x18] ; leave ; ret
0x0000000000436fd9 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037cd
0x00000000004374f9 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c5
0x0000000000437489 : mov eax, dword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c5
0x0000000000431595 : mov eax, dword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x20], rbx ; mov rax, qword ptr [rbp - 0x18] ; pxor xmm0, xmm0 ; movss dword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041c4c3 : mov eax, dword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x28], rbx ; nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004106cd : mov eax, dword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000414a8b : mov eax, dword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x30], rbx ; nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004106c1 : mov eax, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rax + 0x28] ; lea rdx, qword ptr [rax - 1] ; mov rax, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000410af1 : mov eax, dword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000414508 : mov eax, dword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043146a : mov eax, dword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0e5 : mov eax, dword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000437511 : mov eax, dword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ad
0x00000000004374a1 : mov eax, dword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ad
0x000000000043088d : mov eax, dword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000043087c : mov eax, dword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf559] ; movss dword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000040c974 : mov eax, dword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403972
0x000000000040c95a : mov eax, dword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40398c
0x000000000040c940 : mov eax, dword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3f0] ; movss xmm0, dword ptr [rip + 0x2d01d] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4039a6
0x0000000000436ff1 : mov eax, dword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b5
0x00000000004374e9 : mov eax, dword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d5
0x0000000000437479 : mov eax, dword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d5
0x00000000004374dc : mov eax, dword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e2
0x000000000043746c : mov eax, dword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e2
0x0000000000436fd0 : mov eax, dword ptr [rbp - 0x18] ; movss xmm3, dword ptr [rax + 0x48] ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d6
0x000000000040fadd : mov eax, dword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410653 : mov eax, dword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x000000000043159d : mov eax, dword ptr [rbp - 0x18] ; pxor xmm0, xmm0 ; movss dword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041dea8 : mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000040e901 : mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000408408 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000043147f : mov eax, dword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041451d : mov eax, dword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0f9 : mov eax, dword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004085cc : mov eax, dword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004087a7 : mov eax, dword ptr [rbp - 0x28] ; leave ; ret
0x000000000042b5a1 : mov eax, dword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x42784c
0x0000000000431493 : mov eax, dword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414531 : mov eax, dword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e10d : mov eax, dword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000411033 : mov eax, dword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040fbdc : mov eax, dword ptr [rbp - 0x30] ; mov rdx, qword ptr [rbp - 0x28] ; leave ; ret
0x00000000004314a8 : mov eax, dword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414546 : mov eax, dword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e121 : mov eax, dword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004099be : mov eax, dword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb0
0x0000000000407674 : mov eax, dword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040766c : mov eax, dword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000407650 : mov eax, dword ptr [rbp - 0x38] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x28] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004249a0 : mov eax, dword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249a6
0x00000000004249fa : mov eax, dword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a00
0x0000000000424a54 : mov eax, dword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a5a
0x0000000000424aae : mov eax, dword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ab4
0x000000000041e521 : mov eax, dword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7fb ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e51a : mov eax, dword ptr [rbp - 0x68] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e802 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000040e065 : mov eax, dword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e099 : mov eax, dword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e049 : mov eax, dword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3e8] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e07d : mov eax, dword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e071 : mov eax, dword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000041e52a : mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7f2 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e855 : mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41ea07 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cdb0] ; jmp rax
0x000000000043201f : mov eax, dword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3ad
0x000000000043204e : mov eax, dword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e37e
0x0000000000432063 : mov eax, dword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e369
0x000000000043203a : mov eax, dword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e392
0x000000000042498e : mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249b8
0x00000000004249e8 : mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a12
0x0000000000424a42 : mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a6c
0x0000000000424a9c : mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ac6
0x00000000004099b3 : mov eax, dword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x30], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbb
0x00000000004099ea : mov eax, dword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x38], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbb
0x0000000000409a21 : mov eax, dword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x40], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbb
0x0000000000409a58 : mov eax, dword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x48], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbb
0x000000000041ef28 : mov eax, dword ptr [rbp - 0xbc] ; cmp eax, 4 ; ja 0x41f15c ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000041f171 : mov eax, dword ptr [rbp - 0xbc] ; cmp eax, 4 ; ja 0x41f329 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db78] ; jmp rax
0x000000000040b619 : mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000043745d : mov eax, dword ptr [rbp - 4] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037f1
0x00000000004306f0 : mov eax, dword ptr [rbp - 4] ; leave ; ret
0x0000000000404bff : mov eax, dword ptr [rbp - 8] ; add rax, 1 ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000041025d : mov eax, dword ptr [rbp - 8] ; add rax, 8 ; pop rbp ; ret
0x00000000004101fd : mov eax, dword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041097a : mov eax, dword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000041020d : mov eax, dword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041098a : mov eax, dword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000041580d : mov eax, dword ptr [rbp - 8] ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004067d6 : mov eax, dword ptr [rbp - 8] ; leave ; ret
0x000000000041f66e : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x000000000041eca5 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x000000000040f679 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000437b03 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000436d21 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x0000000000435e41 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435f83 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000435f8b : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x000000000040b6bd : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b721 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b721 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6e4 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b70b : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x8d], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7c3 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7c3 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7c3 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b75c : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b783 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d3cf : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d3ba : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d9ab : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004308be : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x00000000004308a9 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041065a : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x000000000041d3a8 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040b740 : mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b74e : mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041f667 : mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 4], edx ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x000000000041d3af : mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000410963 : mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000041db12 : mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b6d6 : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b708 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b724 : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7aa ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7aa ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b732 : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b79c ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041db08 : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d98a : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9dc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000437ad5 : mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b41 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b41 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b41 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000040b544 : mov eax, dword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x00000000004101f1 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041096e : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435901 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b56 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000041d3d7 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x00000000004082d5 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000043590d : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000410205 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410982 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435919 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000410215 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410992 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435e35 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435925 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000041021d : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000435f77 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000435931 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000043593d : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x00000000004358f5 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b4a : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x00000000004082b1 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000410af8 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x00000000004358ea : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b3f : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000410aea : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040f4d9 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x00000000004082a3 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000040f5a4 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406f20 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000407d67 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000043149b : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314b0 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414510 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431487 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040f817 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x0000000000427436 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x180] ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x0000000000437aef : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b27 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437adf : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b37 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b37 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000414539 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041454e : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414525 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004100dc : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d716 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d76f : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d704 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d746 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d760 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d79c ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d7fb : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x18] ; add eax, 0x168 ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x0000000000431652 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6d5 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d775 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d731 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7cb ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d481 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d561 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d688 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5f3 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db19 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d995 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000405cf3 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405035 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cad : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bf3 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000431472 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040f599 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040505f : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cd7 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000406d33 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000405cfe : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405040 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cb8 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bfe : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000405d67 : mov eax, dword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x00000000004082b9 : mov eax, dword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000040f5f5 : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4a5 : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x00000000004082aa : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000040fc57 : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x0000000000409799 : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000040910f : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000410239 : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f643 : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040faaf : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410645 : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x00000000004097a4 : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000040911a : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x00000000004097b0 : mov eax, dword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000041da5f : mov eax, dword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000040b41d : mov eax, dword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b432 : mov eax, dword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b447 : mov eax, dword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b45f : mov eax, dword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000041d9a2 : mov eax, dword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000041da56 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x38] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0ed : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e101 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e115 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e129 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4d6 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b51a : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e373 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4e4 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b528 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e381 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4c8 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b50c : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e366 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041dc46 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1e3e3] ; movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000041d397 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d386 : mov eax, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1ecaf] ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041f645 : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec93 : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x0000000000436d0f : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x000000000040b6c7 : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b717 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b717 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6ad : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b731 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b731 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b715 : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7b9 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7b9 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7b9 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b773 : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9bf : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x000000000041d97b : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; xor eax, 1 ; test al, al ; je 0x41d9eb ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9eb ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004308b1 : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041dafa : mov eax, dword ptr [rbp - 8] ; movzx eax, byte ptr [rax] ; xor eax, 1 ; test al, al ; je 0x41dbac ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b491 : mov eax, dword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b49f : mov eax, dword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b483 : mov eax, dword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x00000000004274c6 : mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x0000000000405e47 : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041d3c2 : mov eax, dword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041568f : mov eax, dword ptr [rbp - 8] ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000404669 : mov eax, dword ptr [rip + 0x24d169] ; mov rdi, rax ; call 0x426f89
0x000000000041ffb9 : mov eax, dword ptr [rip + 0x251c4d] ; lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x251c44], edx ; mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x420001 ; jmp rsp
0x00000000004079e0 : mov eax, dword ptr [rsi] ; add byte ptr [rax], al ; leave ; ret
0x00000000004042b2 : mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000041e536 : mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e861 : mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cdb0] ; jmp rax
0x000000000041ef37 : mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000041f180 : mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db78] ; jmp rax
0x0000000000420d4d : mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x000000000042448c : mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x0000000000427268 : mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x0000000000427786 : mov eax, ebx ; mov rdi, rax ; call 0x403a87
0x0000000000406e61 : mov eax, ebx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004152ef : mov eax, ebx ; sar rax, 3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004077a9 : mov eax, ebx ; sar rax, 5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004108a5 : mov eax, ebx ; sar rax, 6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040b476 : mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b5cc : mov eax, edx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d72 : mov eax, edx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040e8d8 : mov eax, edx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e908 : mov eax, edx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040765b : mov eax, edx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082c4 : mov eax, edx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000408a55 : mov eax, edx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085b9 : mov eax, edx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000427444 : mov eax, edx ; leave ; ret
0x0000000000405d08 : mov eax, edx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040504a : mov eax, edx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cc2 : mov eax, edx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410c08 : mov eax, edx ; sar rax, 6 ; pop rbp ; ret
0x0000000000412044 : mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e389
0x0000000000403c55 : mov eax, esi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c96 ; mov eax, 0 ; test rax, rax ; je 0x403c96 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x000000000042baa9 : mov ebp, 0x2948ffff ; ret
0x0000000000418eae : mov ebp, 0x3948ffff ; ret
0x00000000004089c1 : mov ebp, 0x48000001 ; mov eax, dword ptr [rax] ; leave ; ret
0x0000000000437d36 : mov ebp, 0x4890fffc ; add esp, 0x10 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000417911 : mov ebp, 0x8948fffe ; ret
0x000000000042bad5 : mov ebp, 0x8948ffff ; ret
0x0000000000438383 : mov ebp, 0xbdb27f5f ; ret 0x8edc
0x00000000004376c1 : mov ebp, 0xff30000 ; pop rsi ; ret
0x0000000000424a94 : mov ebp, 0xffffff70 ; add edi, dword ptr [rdi + 0x34] ; mov eax, dword ptr [rbp - 0x90] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ace
0x0000000000424a3a : mov ebp, 0xffffff74 ; add edi, dword ptr [rdi + 0x34] ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a74
0x00000000004249e0 : mov ebp, 0xffffff78 ; add edi, dword ptr [rdi + 0x34] ; mov eax, dword ptr [rbp - 0x88] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a1a
0x0000000000424986 : mov ebp, 0xffffff7c ; add edi, dword ptr [rdi + 0x34] ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249c0
0x0000000000403cbc : mov ebp, esp ; call rax
0x0000000000403c11 : mov ebp, esp ; jbe 0x403c44 ; mov eax, 0 ; test rax, rax ; je 0x403c44 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x00000000004274bb : mov ebp, esp ; mov dword ptr [rbp - 4], edi ; mov dword ptr [rbp - 8], esi ; mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x0000000000408821 : mov ebp, esp ; mov qword ptr [rbp - 0x10], rdi ; mov qword ptr [rbp - 0x20], rsi ; nop ; pop rbp ; ret
0x00000000004087ae : mov ebp, esp ; mov qword ptr [rbp - 0x10], rdi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043064c : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x000000000040b53a : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b60c : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b470 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040e394 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov edx, 0x4399b8 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004307b2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0x18 ; pop rbp ; ret
0x00000000004306f8 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0xc ; pop rbp ; ret
0x0000000000409786 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000410ad4 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000409100 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040faa0 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410636 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000406f0e : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040b40a : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040594a : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405054 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405ccc : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000405d5c : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f5ea : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f49a : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x000000000041022e : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f638 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040595c : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410256 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; add rax, 8 ; pop rbp ; ret
0x000000000041ec9e : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x0000000000436d1a : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x00000000004308a2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041095c : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000437ace : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b48 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b48 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b48 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x00000000004101ea : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000407d60 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040f810 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x00000000004100d5 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d6ce : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d77c ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d72a : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7d2 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000405cec : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040502e : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405ca6 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bec : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x000000000040f592 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d2c : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000041f63e : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec8c : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x0000000000436d08 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x000000000040b6a6 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b738 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b738 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b76c : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9b8 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x0000000000405e40 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004085d6 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x1555555555555555 ; pop rbp ; ret
0x00000000004156a8 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x00000000004111fe : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x333333333333333 ; pop rbp ; ret
0x000000000041103a : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x3ffffffffffffff ; pop rbp ; ret
0x0000000000408862 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x7ffffffffffffff ; pop rbp ; ret
0x000000000040b4b2 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4f6 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e350 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040787e : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x0000000000403c52 : mov ebp, esp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c99 ; mov eax, 0 ; test rax, rax ; je 0x403c99 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000437b61 : mov ebx, 0x8948fffc ; ret
0x0000000000417b33 : mov ebx, 0x8948fffe ; ret
0x0000000000408ac1 : mov ebx, 0x90ffffaf ; add rsp, 0x18 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041139e : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000438ba4 : mov ebx, eax ; int 0x80
0x000000000042b59e : mov ebx, eax ; mov rax, qword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x42784f
0x0000000000432090 : mov ebx, eax ; pxor xmm2, xmm2 ; movss xmm1, dword ptr [rip + 0x1030e] ; pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e365
0x0000000000412094 : mov ebx, eax ; pxor xmm2, xmm2 ; movss xmm1, dword ptr [rip + 0x285e6] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e369
0x000000000044bbf8 : mov ebx, esi ; std ; jmp qword ptr [rsi]
0x000000000042bf97 : mov ecx, 0x2948ffff ; ret
0x0000000000437c79 : mov ecx, 0x30bffffc ; add byte ptr [rax], al ; add al, ch ; cmp bh, byte ptr [rdx - 0x76b70004] ; ret
0x000000000044592a : mov ecx, 0x8070c02 ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x0000000000417cf3 : mov ecx, 0x8948fffe ; ret
0x000000000042bfc3 : mov ecx, 0x8948ffff ; ret
0x0000000000409033 : mov ecx, 0x90ffffa7 ; leave ; ret
0x000000000040e05d : mov ecx, 0xff30002 ; pop rsi ; ror dword ptr [rax - 0x75], 0x45 ; cwde ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x0000000000405d6b : mov ecx, dword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x00000000004082bd : mov ecx, dword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000407654 : mov ecx, dword ptr [rax] ; mov rdx, qword ptr [rbp - 0x28] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040b5c2 : mov ecx, dword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000044a12a : mov ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000410715 : mov ecx, dword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411115 : mov ecx, dword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f659 : mov ecx, dword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fac5 : mov ecx, dword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000041071d : mov ecx, dword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000041111d : mov ecx, dword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f661 : mov ecx, dword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040facd : mov ecx, dword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410725 : mov ecx, dword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411125 : mov ecx, dword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000041072d : mov ecx, dword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000410735 : mov ecx, dword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000041070d : mov ecx, dword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000041110d : mov ecx, dword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f651 : mov ecx, dword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fabd : mov ecx, dword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000042cded : mov ecx, dword ptr [rdx] ; add byte ptr [rax], al ; leave ; ret
0x0000000000406cc1 : mov ecx, dword ptr [rdx] ; mov qword ptr [rax], rcx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x0000000000410707 : mov ecx, dword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411107 : mov ecx, dword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f64b : mov ecx, dword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fab7 : mov ecx, dword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000041de65 : mov ecx, dword ptr [rdx] ; mov rdx, qword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x00000000004375eb : mov edi, 0x1700 ; call 0x403867
0x0000000000437582 : mov edi, 0x1701 ; call 0x403867
0x00000000004500fc : mov edi, 0x3810011 ; add eax, 0x900011ab ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000450108 : mov edi, 0x3d20011 ; add eax, 0x3e10000 ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000437575 : mov edi, 0x50bffffc ; or eax, dword ptr [rax] ; add al, ch ; sahf ; sar ah, 0xff ; mov edi, 0x1701 ; call 0x403874
0x0000000000404658 : mov edi, 0x5c60002 ; pop rsi ; shl dword ptr [rax + rax], 1 ; add byte ptr [rax + 0x386e9], dl ; add byte ptr [rax - 0x75], cl ; add eax, 0x24d169 ; mov rdi, rax ; call 0x426f9a
0x0000000000403c20 : mov edi, 0x651560 ; jmp rax
0x0000000000417726 : mov edi, 0x8948fffe ; ret
0x000000000041741a : mov edi, 0xc ; call 0x4036c7
0x000000000042cadd : mov edi, 0xc900000a ; ret
0x0000000000429b03 : mov edi, 0xe800000f ; mov ah, 0x9d ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042947b : mov edi, 0xe8000016 ; cmp al, 0xa4 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004251cd : mov edi, 0xebfffde7 ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041eacd : mov edi, 0xebfffe4e ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000040bbad : mov edi, 0xf0002dd ; push rdi ; ror dword ptr [rax - 0x75], 0x45 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004374ae : mov edi, 0xff30000 ; pop rsi ; ret 0xff3
0x0000000000436f6d : mov edi, 7 ; call 0x403277
0x0000000000427789 : mov edi, eax ; call 0x403a84
0x00000000004099c6 : mov edi, eax ; call 0x405ca8
0x0000000000404670 : mov edi, eax ; call 0x426f82
0x000000000042b5a5 : mov edi, eax ; call 0x427848
0x000000000041de81 : mov edi, eax ; call rcx
0x000000000042c497 : mov edi, ebp ; dec dword ptr [rax + 0x29] ; ret
0x000000000042c4c3 : mov edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x000000000041207b : mov edi, ebx ; call 0x40e352
0x0000000000437de7 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x00000000004258b3 : mov edi, edi ; dec dword ptr [rax + 0x39] ; ret
0x0000000000409b1e : mov edi, edx ; call 0x405d5e
0x0000000000444de5 : mov edi, esi ; call qword ptr [rax]
0x000000000041b061 : mov edi, esi ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000444ddd : mov edi, esi ; push rax ; nop ; add byte ptr [rax], al ; mov edi, esi ; call qword ptr [rax]
0x0000000000443bc5 : mov edi, esp ; jmp qword ptr [rax]
0x0000000000437de6 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000437ba7 : mov edx, 0x28bffffc ; add al, byte ptr [rax] ; add al, ch ; or al, 0xbb ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437b57 : mov edx, 0x28bffffc ; add byte ptr [rax], al ; add al, ch ; pop rsp ; mov ebx, 0x8948fffc ; ret
0x000000000040e39a : mov edx, 0x4399b8 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041e514 : mov edx, 0x43ce10 ; mov rax, qword ptr [rbp - 0x68] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e808 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000042bf5f : mov edx, 0x48000010 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000042ba5f : mov edx, 0x48000013 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000042b55f : mov edx, 0x48000016 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000431590 : mov edx, 0x48fffdcd ; mov eax, dword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x20], rbx ; mov rax, qword ptr [rbp - 0x18] ; pxor xmm0, xmm0 ; movss dword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004387b9 : mov edx, 0x59d13e77 ; loop 0x4387cf ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438825 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004387b8 : mov edx, 0x59d13e77 ; loop 0x4387d0 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438826 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004387b7 : mov edx, 0x59d13e77 ; loop 0x4387d1 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438827 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439639 : mov edx, 0x59d13e77 ; loop 0x43964f ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396a5 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439638 : mov edx, 0x59d13e77 ; loop 0x439650 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396a6 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439637 : mov edx, 0x59d13e77 ; loop 0x439651 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396a7 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a359 : mov edx, 0x59d13e77 ; loop 0x43a36f ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3c5 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a358 : mov edx, 0x59d13e77 ; loop 0x43a370 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3c6 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a357 : mov edx, 0x59d13e77 ; loop 0x43a371 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3c7 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b019 : mov edx, 0x59d13e77 ; loop 0x43b02f ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b085 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b018 : mov edx, 0x59d13e77 ; loop 0x43b030 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b086 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b017 : mov edx, 0x59d13e77 ; loop 0x43b031 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b087 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcd9 : mov edx, 0x59d13e77 ; loop 0x43bcef ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd45 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcd8 : mov edx, 0x59d13e77 ; loop 0x43bcf0 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd46 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcd7 : mov edx, 0x59d13e77 ; loop 0x43bcf1 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd47 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9b9 : mov edx, 0x59d13e77 ; loop 0x43c9cf ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca25 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9b8 : mov edx, 0x59d13e77 ; loop 0x43c9d0 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca26 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9b7 : mov edx, 0x59d13e77 ; loop 0x43c9d1 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca27 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d779 : mov edx, 0x59d13e77 ; loop 0x43d78f ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7e5 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d778 : mov edx, 0x59d13e77 ; loop 0x43d790 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7e6 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d777 : mov edx, 0x59d13e77 ; loop 0x43d791 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7e7 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4f9 : mov edx, 0x59d13e77 ; loop 0x43e50f ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e565 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4f8 : mov edx, 0x59d13e77 ; loop 0x43e510 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e566 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4f7 : mov edx, 0x59d13e77 ; loop 0x43e511 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e567 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f939 : mov edx, 0x59d13e77 ; loop 0x43f94f ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9a5 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f938 : mov edx, 0x59d13e77 ; loop 0x43f950 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9a6 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f937 : mov edx, 0x59d13e77 ; loop 0x43f951 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9a7 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440759 : mov edx, 0x59d13e77 ; loop 0x44076f ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407c5 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440758 : mov edx, 0x59d13e77 ; loop 0x440770 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407c6 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440757 : mov edx, 0x59d13e77 ; loop 0x440771 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407c7 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413d9 : mov edx, 0x59d13e77 ; loop 0x4413ef ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441445 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413d8 : mov edx, 0x59d13e77 ; loop 0x4413f0 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441446 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413d7 : mov edx, 0x59d13e77 ; loop 0x4413f1 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441447 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442059 : mov edx, 0x59d13e77 ; loop 0x44206f ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420c5 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442058 : mov edx, 0x59d13e77 ; loop 0x442070 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420c6 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442057 : mov edx, 0x59d13e77 ; loop 0x442071 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420c7 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fb9 : mov edx, 0x59d13e77 ; loop 0x442fcf ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443025 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fb8 : mov edx, 0x59d13e77 ; loop 0x442fd0 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443026 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fb7 : mov edx, 0x59d13e77 ; loop 0x442fd1 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443027 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000438361 : mov edx, 0x59d1be77 ; mov si, 0xe725 ; push rsp ; mov esi, 0xbe4363b2 ; or edx, ecx ; xor dword ptr [rsi - 0x41dfcf81], edi ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x0000000000437c05 : mov edx, 0x60bffffc ; add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; mov edx, 0x8948fffc ; ret
0x0000000000444605 : mov edx, 0x6ff8fffd ; add byte ptr [rax], al ; or cl, al ; std ; jmp qword ptr [rax]
0x0000000000437c0f : mov edx, 0x8948fffc ; ret
0x0000000000417c70 : mov edx, 0x8948fffe ; ret
0x0000000000407e10 : mov edx, 0x8948ffff ; ret
0x0000000000438ba0 : mov edx, 0x89fffd40 ; ret
0x000000000041d6b0 : mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d547 : mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d61b : mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d464 : mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000410ee4 : mov edx, 0x90000001 ; leave ; ret
0x0000000000427b94 : mov edx, 0x9000000d ; leave ; ret
0x0000000000444aec : mov edx, 0xc0fffe76 ; test byte ptr [rax], al ; add dh, dl ; jbe 0x444b00 ; jmp rax
0x00000000004369d2 : mov edx, 0xebfffccf ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041a492 : mov edx, 0xf00020e ; push rdi ; ret
0x0000000000437921 : mov edx, 0xff30000 ; pop rsi ; ret
0x000000000040f5f9 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4a9 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x00000000004082ae : mov edx, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000410af5 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000410ae7 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000406f1d : mov edx, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041de62 : mov edx, dword ptr [rax] ; mov rcx, qword ptr [rdx] ; mov rdx, qword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000040fc5b : mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x000000000040979d : mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000409113 : mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000041023d : mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000405d6e : mov edx, dword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x00000000004082c0 : mov edx, dword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000041116c : mov edx, dword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000040f647 : mov edx, dword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fab3 : mov edx, dword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410649 : mov edx, dword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000405066 : mov edx, dword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cde : mov edx, dword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x00000000004097a8 : mov edx, dword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000040911e : mov edx, dword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000406cbd : mov edx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x0000000000410703 : mov edx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411103 : mov edx, dword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000415151 : mov edx, dword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x00000000004097b4 : mov edx, dword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000412041 : mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e38c
0x000000000040fbe0 : mov edx, dword ptr [rbp - 0x28] ; leave ; ret
0x0000000000407657 : mov edx, dword ptr [rbp - 0x28] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000409b13 : mov edx, dword ptr [rbp - 0x38] ; add rdx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d69
0x000000000041de68 : mov edx, dword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041e524 : mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7f8 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x00000000004249a6 : mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249a0
0x0000000000424a00 : mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x4249fa
0x0000000000424a5a : mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a54
0x0000000000424ab4 : mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424aae
0x000000000040b547 : mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x00000000004274c3 : mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x000000000040b5e6 : mov edx, dword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5f7 : mov edx, dword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b616 : mov edx, dword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000043162a : mov edx, dword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043165a : mov edx, dword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041db37 : mov edx, dword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000408a51 : mov edx, dword ptr [rbp - 8] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085b5 : mov edx, dword ptr [rbp - 8] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000041d496 : mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d576 : mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d69d : mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d608 : mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6dd : mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d76d ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d739 : mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7c3 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d489 : mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d569 : mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d690 : mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5fb : mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db21 : mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4ad : mov edx, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5dd : mov edx, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d54b : mov edx, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d58d : mov edx, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d66f : mov edx, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d468 : mov edx, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6f0 : mov edx, dword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d75a ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d74c : mov edx, dword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7b0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db2e : mov edx, dword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043162d : mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043165d : mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d49d : mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d57d : mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6a4 : mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d60f : mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6e4 : mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d766 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d740 : mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7bc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d49a : mov edx, dword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d57a : mov edx, dword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6a1 : mov edx, dword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d60c : mov edx, dword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6e1 : mov edx, dword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d769 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d73d : mov edx, dword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7bf ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000040f669 : mov edx, dword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fad5 : mov edx, dword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000041d48d : mov edx, dword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d56d : mov edx, dword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d694 : mov edx, dword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5ff : mov edx, dword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db25 : mov edx, dword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041112d : mov edx, dword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000041073d : mov edx, dword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000406cc6 : mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x000000000041db3a : mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041064d : mov edx, dword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000415155 : mov edx, dword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000432431 : mov edx, dword ptr [rdx] ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000041ffc8 : mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fff2 ; jmp rsp
0x00000000004369f1 : mov edx, eax ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000004085c9 : mov edx, eax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004099b0 : mov edx, eax ; mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x30], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbe
0x00000000004099e7 : mov edx, eax ; mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x38], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbe
0x0000000000409a1e : mov edx, eax ; mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x40], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbe
0x0000000000409a55 : mov edx, eax ; mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x48], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbe
0x000000000040b6ba : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b724 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b724 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b708 : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8d], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7c6 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7c6 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7c6 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b780 : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x00000000004308bb : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041f664 : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 4], edx ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x000000000040f4d6 : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x00000000004082a0 : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000427433 : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x180] ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x0000000000405cfb : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040503d : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cb5 : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bfb : mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000406e68 : mov edx, eax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d0f : mov edx, eax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000436fdf : mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c7
0x00000000004374ff : mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037bf
0x000000000043748f : mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037bf
0x0000000000437de1 : mov edx, ebp ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x000000000040b761 : mov es, word ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x0000000000444d59 : mov es, word ptr [rax] ; add byte ptr [rsi - 0x1f000179], bh ; mov es, word ptr [rax] ; add cl, dh ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x000000000044e77d : mov es, word ptr [rax] ; add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x0000000000444d61 : mov es, word ptr [rax] ; add cl, dh ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x00000000004475d2 : mov es, word ptr [rcx] ; or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x0000000000400988 : mov esi, 0x12000005 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000420d3f : mov esi, 0x20e883c0 ; cmp eax, 0x5c ; ja 0x423d24 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x000000000042447e : mov esi, 0x21e883c0 ; cmp eax, 0x5d ; ja 0x424b3d ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x0000000000418d4a : mov esi, 0x3948ffff ; ret
0x0000000000430dbe : mov esi, 0x48fffd2c ; add esp, 0x50 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f8be : mov esi, 0x48ffff41 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000403c40 : mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cab ; mov eax, 0 ; test rax, rax ; je 0x403cab ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x00000000004441a4 : mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444216 ; std ; call qword ptr [rax]
0x00000000004324b0 : mov esi, 0x8948fffd ; pop rbp ; mov eax, 0x38bf ; add al, ch ; call qword ptr [rcx]
0x0000000000432483 : mov esi, 0x8948fffd ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; sub al, 0x12 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000417830 : mov esi, 0x8948fffe ; ret
0x000000000042bc32 : mov esi, 0x90000012 ; leave ; ret
0x000000000042b732 : mov esi, 0x90000015 ; leave ; ret
0x0000000000404e69 : mov esi, 0x95b60fc0 ; jmp 0x404e7b
0x000000000043837b : mov esi, 0xbdf996fb ; adc r10, r14 ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x0000000000438373 : mov esi, 0xbe20307f ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x0000000000438a97 : mov esi, 0xbe31d10b ; ret 0x2030
0x000000000043836b : mov esi, 0xbe4363b2 ; or edx, ecx ; xor dword ptr [rsi - 0x41dfcf81], edi ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x0000000000438a8f : mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x0000000000438a87 : mov esi, 0xbe77baaa ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000043835b : mov esi, 0xbe84840e ; stosb byte ptr [rdi], al ; mov edx, 0x59d1be77 ; mov si, 0xe725 ; push rsp ; mov esi, 0xbe4363b2 ; or edx, ecx ; xor dword ptr [rsi - 0x41dfcf81], edi ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x000000000043883b : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43880f ; mov esi, 0xbebfcc5c ; ret
0x00000000004396bb : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43968f ; mov esi, 0xbebfcc5c ; ret
0x000000000043a3db : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43a3af ; mov esi, 0xbebfcc5c ; ret
0x000000000043b09b : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43b06f ; mov esi, 0xbebfcc5c ; ret
0x000000000043bd5b : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43bd2f ; mov esi, 0xbebfcc5c ; ret
0x000000000043ca3b : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43ca0f ; mov esi, 0xbebfcc5c ; ret
0x000000000043d7fb : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43d7cf ; mov esi, 0xbebfcc5c ; ret
0x000000000043e57b : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43e54f ; mov esi, 0xbebfcc5c ; ret
0x000000000043f9bb : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43f98f ; mov esi, 0xbebfcc5c ; ret
0x00000000004407db : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x4407af ; mov esi, 0xbebfcc5c ; ret
0x000000000044145b : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x44142f ; mov esi, 0xbebfcc5c ; ret
0x00000000004420db : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x4420af ; mov esi, 0xbebfcc5c ; ret
0x000000000044303b : mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x44300f ; mov esi, 0xbebfcc5c ; ret
0x0000000000438847 : mov esi, 0xbebfcc5c ; ret
0x000000000043074f : mov esi, 0xbfc689c0 ; adc byte ptr [rsi], 0x65 ; add al, ch ; ret
0x000000000044564c : mov esi, 0xd0fffed2 ; mov bl, 0 ; add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x0000000000437570 : mov esi, 0xd8e80000 ; mov edi, 0x50bffffc ; or eax, dword ptr [rax] ; add al, ch ; sahf ; sar ah, 0xff ; mov edi, 0x1701 ; call 0x403879
0x000000000044356c : mov esi, 0xd8fffc2a ; sub al, byte ptr [rax] ; add byte ptr [rax], dh ; sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000444d5c : mov esi, 0xe0fffe87 ; mov es, word ptr [rax] ; add cl, dh ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x00000000004276a4 : mov esi, 0xeb00000d ; sbb cl, byte ptr [rax - 0x77] ; ret
0x000000000042bdb4 : mov esi, 0xeb000011 ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000042b8b4 : mov esi, 0xeb000014 ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000042b3b4 : mov esi, 0xeb000017 ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000041f4ce : mov esi, 0xebfffe44 ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004374cf : mov esi, 0xf66fffc ; out dx, eax ; sal bl, 0xf ; sub al, byte ptr [rbp - 4] ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ef
0x000000000043751e : mov esi, 0xff30000 ; pop rsi ; ret 0xff3
0x0000000000443db4 : mov esi, 0xfffcc5 ; add byte ptr [r8], r8b ; fadd st(5), st(0) ; cld ; jmp qword ptr [rax]
0x000000000041af2e : mov esi, dr1 ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000044d4c0 : mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000041de75 : mov esi, dword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000040e8fe : mov esi, dword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000041de79 : mov esi, dword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000409b1b : mov esi, eax ; mov rdi, rdx ; call 0x405d61
0x0000000000444da5 : mov esi, edi ; call qword ptr [rax]
0x000000000041b1ed : mov esi, edi ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000437de4 : mov esi, esi ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000437601 : mov esp, 0x17e8fffc ; ret 0xfffc
0x000000000044c24c : mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x0000000000446a4c : mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf4c : mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044a34c : mov esp, 0x3a00004a ; std ; call qword ptr [rdx]
0x0000000000447d4c : mov esp, 0x48000024 ; ja 0x447d56 ; jmp qword ptr [rdx]
0x00000000004276c0 : mov esp, 0x48fffdc3 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000447e4c : mov esp, 0x72000025 ; ja 0x447e76 ; jmp qword ptr [rip]
0x000000000042f3e0 : mov esp, 0x83fffef7 ; in al, dx ; add ecx, ebp ; jmp 0x42f415
0x00000000004179ee : mov esp, 0x8948fffe ; ret
0x0000000000410184 : mov esp, 0x90000008 ; leave ; ret
0x000000000042a9ce : mov esp, 0x9000001c ; leave ; ret
0x000000000044ef4c : mov esp, 0xc8000096 ; jge 0x44ef58 ; call qword ptr [rbx]
0x0000000000443a34 : mov esp, 0xd0fffc53 ; add byte ptr ds:[rax], al ; retf -0x3ad ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x0000000000445a4c : mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x00000000004142da : mov esp, 0xe8fffff9 ; cmp eax, 0x90fffef5 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000041d02e : mov fs, word ptr [rsi - 2] ; dec ecx ; ret
0x00000000004101f4 : mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410971 : mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435904 : mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b59 : mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000041d3da : mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000410718 : mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411118 : mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f65c : mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fac8 : mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x00000000004082d8 : mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x00000000004097b7 : mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000435910 : mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000410720 : mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411120 : mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f664 : mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fad0 : mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410208 : mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410985 : mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000043591c : mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000431598 : mov qword ptr [rax + 0x20], rbx ; mov rax, qword ptr [rbp - 0x18] ; pxor xmm0, xmm0 ; movss dword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000410728 : mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411128 : mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f66c : mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fad8 : mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410218 : mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410995 : mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435e38 : mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435928 : mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000410220 : mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041c4c6 : mov qword ptr [rax + 0x28], rbx ; nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000410730 : mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x00000000004106d0 : mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000435f7a : mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000435934 : mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000414a8e : mov qword ptr [rax + 0x30], rbx ; nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000410738 : mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x00000000004099b9 : mov qword ptr [rax + 0x30], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb5
0x0000000000435940 : mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x00000000004099f0 : mov qword ptr [rax + 0x38], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb5
0x0000000000410740 : mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000409a27 : mov qword ptr [rax + 0x40], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb5
0x0000000000409a5e : mov qword ptr [rax + 0x48], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb5
0x00000000004358f8 : mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b4d : mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000410710 : mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411110 : mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f654 : mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fac0 : mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040766f : mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082b4 : mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x00000000004097ab : mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000040fc5e : mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x0000000000409121 : mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x00000000004358ed : mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b42 : mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000406cc3 : mov qword ptr [rax], rcx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x0000000000410709 : mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411109 : mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f64d : mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fab9 : mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410aed : mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000041064f : mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x000000000041e51d : mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7ff ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000040f4dc : mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x00000000004082a6 : mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x00000000004097a0 : mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000409116 : mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040f5a7 : mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000415157 : mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000406f23 : mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000408823 : mov qword ptr [rbp - 0x10], rdi ; mov qword ptr [rbp - 0x20], rsi ; nop ; pop rbp ; ret
0x00000000004087b0 : mov qword ptr [rbp - 0x10], rdi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004307b8 : mov qword ptr [rbp - 0x10], rsi ; mov eax, 0x18 ; pop rbp ; ret
0x00000000004306fe : mov qword ptr [rbp - 0x10], rsi ; mov eax, 0xc ; pop rbp ; ret
0x000000000040978c : mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000410ada : mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000409106 : mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040faa6 : mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000041063c : mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000406f14 : mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040b410 : mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x0000000000405950 : mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000040505a : mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cd2 : mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000405d62 : mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f5f0 : mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4a0 : mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x0000000000410234 : mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f63e : mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000405962 : mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042b604 : mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x427851
0x0000000000409790 : mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000410ade : mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040910a : mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040faaa : mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410640 : mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000417416 : mov qword ptr [rbp - 0x20], rbx ; mov edi, 0xc ; call 0x4036cb
0x0000000000409794 : mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000408827 : mov qword ptr [rbp - 0x20], rsi ; nop ; pop rbp ; ret
0x000000000041747c : mov qword ptr [rbp - 0x28], rbx ; mov edi, 0xc ; call 0x4036cb
0x000000000043064e : mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x000000000040b53c : mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b60e : mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b472 : mov qword ptr [rbp - 8], rdi ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040e396 : mov qword ptr [rbp - 8], rdi ; mov edx, 0x4399b8 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004307b4 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0x18 ; pop rbp ; ret
0x00000000004306fa : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0xc ; pop rbp ; ret
0x0000000000409788 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000410ad6 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000409102 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040faa2 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410638 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000406f10 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040b40c : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040594c : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405056 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cce : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000405d5e : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f5ec : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f49c : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x0000000000410230 : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f63a : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040595e : mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410258 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; add rax, 8 ; pop rbp ; ret
0x000000000041eca0 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x0000000000436d1c : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x00000000004308a4 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041095e : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000437ad0 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b46 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b46 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b46 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x00000000004101ec : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000407d62 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040f812 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x00000000004100d7 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d6d0 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d77a ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d72c : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7d0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000405cee : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405030 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405ca8 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bee : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x000000000040f594 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d2e : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000041f640 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec8e : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x0000000000436d0a : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x000000000040b6a8 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b736 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b736 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b76e : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9ba : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x0000000000405e42 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004085d8 : mov qword ptr [rbp - 8], rdi ; movabs rax, 0x1555555555555555 ; pop rbp ; ret
0x00000000004156aa : mov qword ptr [rbp - 8], rdi ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x0000000000411200 : mov qword ptr [rbp - 8], rdi ; movabs rax, 0x333333333333333 ; pop rbp ; ret
0x000000000041103c : mov qword ptr [rbp - 8], rdi ; movabs rax, 0x3ffffffffffffff ; pop rbp ; ret
0x0000000000408864 : mov qword ptr [rbp - 8], rdi ; movabs rax, 0x7ffffffffffffff ; pop rbp ; ret
0x000000000040b4b4 : mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4f8 : mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e352 : mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000407880 : mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x0000000000432064 : mov r11b, r14b ; movups xmm2, xmmword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e368
0x000000000043203b : mov r11b, r14b ; movups xmm2, xmmword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e391
0x0000000000437d35 : mov r13d, 0x4890fffc ; add esp, 0x10 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000438a96 : mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000041b060 : mov r15, rsi ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000041b168 : mov r15b, sil ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000418675 : mov r8b, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000429e14 : mov r8d, 0xe8c78948 ; in eax, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000042a090 : mov r8d, 0xe8c78948 ; nop ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000429cd3 : mov r8d, 0xe8c78948 ; outsd dx, dword ptr [rsi] ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000044552c : mov r9b, 0xfe ; call rax
0x0000000000412063 : mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e36a
0x0000000000407d6a : mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000043149e : mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314b3 : mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414513 : mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043148a : mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000412038 : mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e395
0x000000000040f81a : mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x0000000000437af9 : mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b1d ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000427439 : mov rax, qword ptr [rax + 0x180] ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x0000000000437af2 : mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b24 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437ae2 : mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b34 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b34 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000041453c : mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414551 : mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414528 : mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000432022 : mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3aa
0x0000000000432051 : mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e37b
0x00000000004100df : mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d719 : mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d772 : mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d707 : mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d743 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d763 : mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d799 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d7fe : mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x18] ; add eax, 0x168 ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x0000000000431655 : mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6d8 : mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d772 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d734 : mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7c8 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d484 : mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d564 : mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d68b : mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5f6 : mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db1c : mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d998 : mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004106c4 : mov rax, qword ptr [rax + 0x28] ; lea rdx, qword ptr [rax - 1] ; mov rax, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000405cf6 : mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405038 : mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cb0 : mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bf6 : mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000431475 : mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004042b4 : mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000041deab : mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000041e538 : mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e863 : mov rax, qword ptr [rax*8 + 0x43cdb0] ; jmp rax
0x000000000041ef39 : mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000041f182 : mov rax, qword ptr [rax*8 + 0x43db78] ; jmp rax
0x0000000000420d4f : mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x000000000042448e : mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x000000000042726a : mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x000000000042b5fe : mov rax, qword ptr [rax] ; add rax, rbx ; mov qword ptr [rbp - 0x18], rax ; mov rax, qword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x427857
0x000000000040f57f : mov rax, qword ptr [rax] ; cmp rbx, rax ; setne al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040f5ff : mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4af : mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x000000000040f59c : mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004089c5 : mov rax, qword ptr [rax] ; leave ; ret
0x000000000042725d : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xc] ; cmp eax, 4 ; ja 0x4272c9 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x0000000000437af6 : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b20 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000041de5e : mov rax, qword ptr [rax] ; mov rdx, qword ptr [rax] ; mov rcx, qword ptr [rdx] ; mov rdx, qword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000405062 : mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cda : mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000406d36 : mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000406e5a : mov rax, qword ptr [rax] ; sub rbx, rax ; mov rax, rbx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004152e8 : mov rax, qword ptr [rax] ; sub rbx, rax ; mov rax, rbx ; sar rax, 3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004077a2 : mov rax, qword ptr [rax] ; sub rbx, rax ; mov rax, rbx ; sar rax, 5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041089e : mov rax, qword ptr [rax] ; sub rbx, rax ; mov rax, rbx ; sar rax, 6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d01 : mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405043 : mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cbb : mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410c01 : mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000437ae6 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b30 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b30 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000040e134 : mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b452 : mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b425 : mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b43a : mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x00000000004062c7 : mov rax, qword ptr [rbp - 0x10] ; leave ; ret
0x000000000040f5fb : mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4ab : mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x0000000000410ae2 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000406f18 : mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040b5b8 : mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b414 : mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040f670 : mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000405954 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000041205c : mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e371
0x0000000000412031 : mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e39c
0x000000000040e8f1 : mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000427a92 : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000406dfa : mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000404c09 : mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x0000000000436fd8 : mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ce
0x0000000000436fd7 : mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037cf
0x00000000004374f8 : mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c6
0x0000000000437488 : mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c6
0x0000000000431594 : mov rax, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x20], rbx ; mov rax, qword ptr [rbp - 0x18] ; pxor xmm0, xmm0 ; movss dword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041c4c2 : mov rax, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x28], rbx ; nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004106cc : mov rax, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000414a8a : mov rax, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x30], rbx ; nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004106c0 : mov rax, qword ptr [rbp - 0x18] ; mov rax, qword ptr [rax + 0x28] ; lea rdx, qword ptr [rax - 1] ; mov rax, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000410af0 : mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000414507 : mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431469 : mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0e4 : mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000437510 : mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ae
0x00000000004374a0 : mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ae
0x000000000043088c : mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000043087b : mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf559] ; movss dword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000040c973 : mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403973
0x000000000040c959 : mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40398d
0x000000000040c93f : mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3f0] ; movss xmm0, dword ptr [rip + 0x2d01d] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4039a7
0x0000000000436ff0 : mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b6
0x00000000004374e8 : mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d6
0x0000000000437478 : mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d6
0x00000000004374db : mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e3
0x000000000043746b : mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e3
0x0000000000436fcf : mov rax, qword ptr [rbp - 0x18] ; movss xmm3, dword ptr [rax + 0x48] ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d7
0x000000000040fadc : mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410652 : mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x000000000043159c : mov rax, qword ptr [rbp - 0x18] ; pxor xmm0, xmm0 ; movss dword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000408407 : mov rax, qword ptr [rbp - 0x20] ; add rsp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000043147e : mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041451c : mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0f8 : mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004085cb : mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004087a6 : mov rax, qword ptr [rbp - 0x28] ; leave ; ret
0x000000000042b5a0 : mov rax, qword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x42784d
0x0000000000431492 : mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414530 : mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e10c : mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000411032 : mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040fbdb : mov rax, qword ptr [rbp - 0x30] ; mov rdx, qword ptr [rbp - 0x28] ; leave ; ret
0x00000000004314a7 : mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414545 : mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e120 : mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004099bd : mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb1
0x0000000000409a2a : mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb2
0x0000000000407673 : mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040766b : mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040764f : mov rax, qword ptr [rbp - 0x38] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x28] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000042499f : mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249a7
0x00000000004249f9 : mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a01
0x0000000000424a53 : mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a5b
0x0000000000424aad : mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424ab5
0x000000000041e520 : mov rax, qword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7fc ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e519 : mov rax, qword ptr [rbp - 0x68] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x68] ; mov edx, dword ptr [rbp - 0x6c] ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e803 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000040e064 : mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e098 : mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e048 : mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3e8] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e07c : mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e070 : mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000043201e : mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3ae
0x000000000043204d : mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e37f
0x0000000000432062 : mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e36a
0x0000000000432039 : mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e393
0x00000000004099b2 : mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x30], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbc
0x00000000004099e9 : mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x38], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbc
0x0000000000409a20 : mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x40], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbc
0x0000000000409a57 : mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x48], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbc
0x0000000000404bfe : mov rax, qword ptr [rbp - 8] ; add rax, 1 ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000041025c : mov rax, qword ptr [rbp - 8] ; add rax, 8 ; pop rbp ; ret
0x00000000004101fc : mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410979 : mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000041020c : mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410989 : mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000041580c : mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004067d5 : mov rax, qword ptr [rbp - 8] ; leave ; ret
0x000000000041f66d : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x000000000041eca4 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x000000000040f678 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000437b02 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000436d20 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x0000000000435e40 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435f82 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000435f8a : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x000000000040b6bc : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b722 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b722 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6e3 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b70a : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8d], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7c4 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7c4 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7c4 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b75b : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b782 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d3ce : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d3b9 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d9aa : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004308bd : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x00000000004308a8 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x0000000000410659 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x000000000041d3a7 : mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040b73f : mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b74d : mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041f666 : mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 4], edx ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x000000000041d3ae : mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000410962 : mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000041db11 : mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b6d5 : mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b709 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b723 : mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7ab ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7ab ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b722 : mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7ac ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7ac ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b731 : mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b79d ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041db07 : mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d989 : mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9dd ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000437ad4 : mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b42 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b42 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b42 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000040b543 : mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x00000000004101f0 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041096d : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435900 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b55 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000041d3d6 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x00000000004082d4 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000043590c : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000410204 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410981 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435918 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000410214 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410991 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000435e34 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x0000000000435924 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000041021c : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000435f76 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000435930 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000043593c : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x00000000004358f4 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b49 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x00000000004082b0 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000410af7 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x00000000004358e9 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b3e : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000410ae9 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040f4d8 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x00000000004082a2 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000040f5a3 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406f1f : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000407d66 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000043149a : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314af : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041450f : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431486 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040f816 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x0000000000427435 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x180] ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x0000000000437aee : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b28 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437ade : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b38 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b38 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000414538 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041454d : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414524 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004100db : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d715 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d76e : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d703 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d747 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d75f : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d79d ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d7fa : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x18] ; add eax, 0x168 ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x0000000000431651 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6d4 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d776 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d730 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7cc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d480 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d560 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d687 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5f2 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db18 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d994 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000405cf2 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405034 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cac : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bf2 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000431471 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040f598 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040505e : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cd6 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000406d32 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000405cfd : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040503f : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cb7 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bfd : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000405d66 : mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x00000000004082b8 : mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000040f5f4 : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4a4 : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x00000000004082a9 : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000040fc56 : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x0000000000409798 : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000040910e : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000410238 : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f642 : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040faae : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410644 : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x00000000004097a3 : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000409119 : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x00000000004097af : mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000041da5e : mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000040b41c : mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b431 : mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b446 : mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b45e : mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000041d9a1 : mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000041da55 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x38] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0ec : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e100 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e114 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e128 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4d5 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b519 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e372 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4e3 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b527 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e380 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4c7 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b50b : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e365 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041dc45 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1e3e3] ; movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000041d396 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d385 : mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1ecaf] ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041f644 : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec92 : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x0000000000436d0e : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x000000000040b6c6 : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b718 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b718 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6ac : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b732 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b732 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b714 : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7ba ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7ba ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7ba ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b772 : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9be : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x000000000041d97a : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; xor eax, 1 ; test al, al ; je 0x41d9ec ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9ec ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004308b0 : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041daf9 : mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax] ; xor eax, 1 ; test al, al ; je 0x41dbad ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b490 : mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b49e : mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b482 : mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x0000000000405e46 : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041d3c1 : mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041568e : mov rax, qword ptr [rbp - 8] ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000404668 : mov rax, qword ptr [rip + 0x24d169] ; mov rdi, rax ; call 0x426f8a
0x0000000000427267 : mov rax, r8 ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x0000000000427785 : mov rax, rbx ; mov rdi, rax ; call 0x403a88
0x0000000000406e60 : mov rax, rbx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004152ee : mov rax, rbx ; sar rax, 3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004077a8 : mov rax, rbx ; sar rax, 5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004108a4 : mov rax, rbx ; sar rax, 6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040b5cb : mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d71 : mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040e907 : mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040765a : mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082c3 : mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000408a54 : mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085b8 : mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000427443 : mov rax, rdx ; leave ; ret
0x0000000000405d07 : mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405049 : mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cc1 : mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410c07 : mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000403c54 : mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c97 ; mov eax, 0 ; test rax, rax ; je 0x403c97 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403cbb : mov rbp, rsp ; call rax
0x0000000000403c10 : mov rbp, rsp ; jbe 0x403c45 ; mov eax, 0 ; test rax, rax ; je 0x403c45 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x00000000004274ba : mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; mov dword ptr [rbp - 8], esi ; mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x0000000000408820 : mov rbp, rsp ; mov qword ptr [rbp - 0x10], rdi ; mov qword ptr [rbp - 0x20], rsi ; nop ; pop rbp ; ret
0x00000000004087ad : mov rbp, rsp ; mov qword ptr [rbp - 0x10], rdi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043064b : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x000000000040b539 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b60b : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b46f : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040e393 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov edx, 0x4399b8 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004307b1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0x18 ; pop rbp ; ret
0x00000000004306f7 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0xc ; pop rbp ; ret
0x0000000000409785 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000410ad3 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x00000000004090ff : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040fa9f : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410635 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000406f0d : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040b409 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x0000000000405949 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405053 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405ccb : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000405d5b : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f5e9 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f499 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x000000000041022d : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f637 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040595b : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410255 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; add rax, 8 ; pop rbp ; ret
0x000000000041ec9d : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x0000000000436d19 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x00000000004308a1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041095b : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000437acd : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b49 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b49 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b49 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x00000000004101e9 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000407d5f : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040f80f : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x00000000004100d4 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d6cd : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d77d ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d729 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7d3 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000405ceb : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040502d : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405ca5 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410beb : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x000000000040f591 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d2b : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000041f63d : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec8b : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x0000000000436d07 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x000000000040b6a5 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b739 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b739 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b76b : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9b7 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x0000000000405e3f : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004085d5 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x1555555555555555 ; pop rbp ; ret
0x00000000004156a7 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x00000000004111fd : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x333333333333333 ; pop rbp ; ret
0x0000000000411039 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x3ffffffffffffff ; pop rbp ; ret
0x0000000000408861 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x7ffffffffffffff ; pop rbp ; ret
0x000000000040b4b1 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4f5 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e34f : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040787d : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x0000000000403c51 : mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c9a ; mov eax, 0 ; test rax, rax ; je 0x403c9a ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x000000000041139d : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000042b59d : mov rbx, rax ; mov rax, qword ptr [rbp - 0x28] ; mov rdi, rax ; call 0x427850
0x000000000043208f : mov rbx, rax ; pxor xmm2, xmm2 ; movss xmm1, dword ptr [rip + 0x1030e] ; pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e366
0x0000000000412093 : mov rbx, rax ; pxor xmm2, xmm2 ; movss xmm1, dword ptr [rip + 0x285e6] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e36a
0x0000000000405d6a : mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x00000000004082bc : mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000407653 : mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x28] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000040b5c1 : mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000410714 : mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411114 : mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f658 : mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fac4 : mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000041071c : mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000041111c : mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f660 : mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040facc : mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410724 : mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411124 : mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000041072c : mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000410734 : mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000041070c : mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000041110c : mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f650 : mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fabc : mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000406cc0 : mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x0000000000410706 : mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411106 : mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000040f64a : mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fab6 : mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000041de64 : mov rcx, qword ptr [rdx] ; mov rdx, qword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000427788 : mov rdi, rax ; call 0x403a85
0x00000000004099c5 : mov rdi, rax ; call 0x405ca9
0x000000000040466f : mov rdi, rax ; call 0x426f83
0x000000000042b5a4 : mov rdi, rax ; call 0x427849
0x000000000041de80 : mov rdi, rax ; call rcx
0x000000000041207a : mov rdi, rbx ; call 0x40e353
0x0000000000409b1d : mov rdi, rdx ; call 0x405d5f
0x000000000040f5f8 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f4a8 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x00000000004082ad : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000410af4 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000410ae6 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000406f1c : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041de61 : mov rdx, qword ptr [rax] ; mov rcx, qword ptr [rdx] ; mov rdx, qword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000040fc5a : mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x000000000040979c : mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000409112 : mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000041023c : mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000405d6d : mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x00000000004082bf : mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000041116b : mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000040f646 : mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fab2 : mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410648 : mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000405065 : mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cdd : mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x00000000004097a7 : mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000040911d : mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x0000000000406cbc : mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x0000000000410702 : mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x0000000000411102 : mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000415150 : mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x00000000004097b3 : mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000040fbdf : mov rdx, qword ptr [rbp - 0x28] ; leave ; ret
0x0000000000407656 : mov rdx, qword ptr [rbp - 0x28] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000409b12 : mov rdx, qword ptr [rbp - 0x38] ; add rdx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d6a
0x000000000041de67 : mov rdx, qword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000040b5e5 : mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5f6 : mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b615 : mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x0000000000431629 : mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431659 : mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041db36 : mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000408a50 : mov rdx, qword ptr [rbp - 8] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085b4 : mov rdx, qword ptr [rbp - 8] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000041d495 : mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d575 : mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d69c : mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d607 : mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6dc : mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d76e ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d738 : mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7c4 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d488 : mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d568 : mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d68f : mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5fa : mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db20 : mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4ac : mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5dc : mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d54a : mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d58c : mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d66e : mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d467 : mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6ef : mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d75b ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d74b : mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7b1 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db2d : mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d499 : mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d579 : mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6a0 : mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d60b : mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6e0 : mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d76a ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d73c : mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7c0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000040f668 : mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fad4 : mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000041d48c : mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d56c : mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d693 : mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5fe : mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db24 : mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041112c : mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x000000000041073c : mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000041064c : mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000415154 : mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000437de0 : mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004085c8 : mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004099af : mov rdx, rax ; mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x30], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbf
0x00000000004099e6 : mov rdx, rax ; mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x38], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbf
0x0000000000409a1d : mov rdx, rax ; mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x40], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbf
0x0000000000409a54 : mov rdx, rax ; mov rax, qword ptr [rbp - 0x98] ; mov qword ptr [rax + 0x48], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cbf
0x000000000040f4d5 : mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x000000000040829f : mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000427432 : mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x180] ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x0000000000405cfa : mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040503c : mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cb4 : mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bfa : mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000406e67 : mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d0e : mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000041de74 : mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000040e8fd : mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000041de78 : mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000437de3 : mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000409b1a : mov rsi, rax ; mov rdi, rdx ; call 0x405d62
0x0000000000438366 : mov si, 0xe725 ; push rsp ; mov esi, 0xbe4363b2 ; or edx, ecx ; xor dword ptr [rsi - 0x41dfcf81], edi ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x0000000000418072 : mov sil, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004500e5 : mov ss, word ptr [rcx] ; add bh, dh ; add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004500f1 : mov ss, word ptr [rcx] ; add byte ptr [rbp + 0x1b02], ch ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044ce71 : mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44cea1 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493e9 : mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3e9 : mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d419 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a39 : mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf39 : mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468d1 : mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044cda9 : mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d001 : mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x00000000004470c9 : mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000042c870 : mov word ptr [rbx], cs ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000448e16 : mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x000000000044975e : mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x000000000044ce72 : mov word ptr [rbx], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44cea0 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493ea : mov word ptr [rbx], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3ea : mov word ptr [rbx], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d418 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a3a : mov word ptr [rbx], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf3a : mov word ptr [rbx], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468d2 : mov word ptr [rbx], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044cdaa : mov word ptr [rbx], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d002 : mov word ptr [rbx], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x00000000004470ca : mov word ptr [rbx], es ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000044a21c : mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000042650e : mov word ptr [rdi - 1], dr1 ; dec dword ptr [rax + 0x39] ; ret
0x000000000041d240 : mov word ptr [rdi - 2], fs ; dec dword ptr [rax - 0x75] ; clc ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000044761c : mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000405e8a : mov word ptr [rip - 0x36700000], cs ; ret
0x0000000000444be4 : mov word ptr [rsi + rdi*8 - 1], dr1 ; mov eax, 0x56000088 ; jge 0x444bf8 ; jmp rax
0x000000000044397c : mov word ptr [rsi - 4], cs ; jmp rax
0x00000000004244be : movabs al, byte ptr [0x1cbf00000188] ; add al, ch ; int1 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424598 : movabs al, byte ptr [0x1cbf00000188] ; add al, ch ; sbb ecx, esi ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042452b : movabs al, byte ptr [0x1cbf00000188] ; add al, ch ; xchg cl, dh ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042292a : movabs al, byte ptr [0x28bf00000188] ; add al, ch ; xchg dword ptr [rip - 0x76b70002], ecx ; ret
0x0000000000424efc : movabs al, byte ptr [0x30bf00000188] ; add al, ch ; mov ch, 0xe7 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000040b5b0 : movabs al, byte ptr [0x4800110ff3000000] ; mov eax, dword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000042ae8a : movabs al, byte ptr [0x48f8458b4800001a] ; mov dword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000414d18 : movabs al, byte ptr [0x48f8458b48ffffff] ; mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x0000000000414bb6 : movabs al, byte ptr [0x5590c3c990000001] ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x00000000004158dc : movabs al, byte ptr [0x5b28c48348fffee1] ; pop rbp ; ret
0x000000000044a20d : movabs al, byte ptr [0x8070c07] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000040555f : movabs al, byte ptr [0x8948d18948c88949] ; ret 0x59be
0x0000000000444c24 : movabs al, byte ptr [0xae000089c0fffe7e] ; jle 0x444c38 ; jmp rax
0x0000000000443cfc : movabs al, byte ptr [0xc000004a18fffcc1] ; sar esp, -1 ; cmp byte ptr [rdx], cl ; add dl, dl ; sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d8d ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000443618 : movabs al, byte ptr [0xc0fffc37c500002d] ; sub eax, 0x37ec0000 ; cld ; jmp rax
0x00000000004438b0 : movabs al, byte ptr [0xc0fffc4b22000038] ; cmp byte ptr [rax], al ; add byte ptr [rbx + rcx*2 - 4], cl ; jmp rax
0x00000000004438f0 : movabs al, byte ptr [0xc0fffc4c0b000039] ; cmp dword ptr [rax], eax ; add byte ptr [rsi], ah ; cld ; jmp rax
0x0000000000443930 : movabs al, byte ptr [0xc0fffc4d2400003a] ; cmp al, byte ptr [rax] ; add byte ptr [rax], dh ; cld ; jmp rax
0x0000000000443b80 : movabs al, byte ptr [0xc0fffc8160000044] ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000443be8 : movabs al, byte ptr [0xc0fffc95d0000046] ; add byte ptr [rax], r8b ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000443c58 : movabs al, byte ptr [0xc0fffcb15c000045] ; add byte ptr [r8], r8b ; sub al, 0xb2 ; cld ; jmp rax
0x0000000000444090 : movabs al, byte ptr [0xc0fffcdd55000058] ; pop rax ; add byte ptr [rax], al ; rcr ch, 0xfc ; jmp rax
0x0000000000444230 : movabs al, byte ptr [0xc0fffd201a00005f] ; pop rdi ; add byte ptr [rax], al ; xor al, 0x20 ; std ; jmp rax
0x0000000000444578 : movabs al, byte ptr [0xc0fffda67a00006d] ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x0000000000444630 : movabs al, byte ptr [0xc0fffdc2c6000070] ; jo 0x444648 ; add ah, bl ; ret 0xfffd
0x00000000004446d0 : movabs al, byte ptr [0xc0fffe4434000073] ; jae 0x4446ea ; add byte ptr [rsp + rax*2 - 2], dl ; jmp rax
0x0000000000444710 : movabs al, byte ptr [0xc0fffe454c000074] ; je 0x44472a ; add byte ptr [rbp + rax*2 - 2], ch ; jmp rax
0x0000000000444aa8 : movabs al, byte ptr [0xc0fffe756e000083] ; add dword ptr [rax], 0 ; movabs dword ptr [0xca000083e0fffe75], eax ; jne 0x444adc ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ae4 ; jmp qword ptr [rax]
0x0000000000444ae8 : movabs al, byte ptr [0xc0fffe76ba000084] ; test byte ptr [rax], al ; add dh, dl ; jbe 0x444b04 ; jmp rax
0x0000000000444b28 : movabs al, byte ptr [0xc0fffe77fb000085] ; test dword ptr [rax], eax ; add byte ptr [rdx], ah ; js 0x444b44 ; jmp rax
0x0000000000444b68 : movabs al, byte ptr [0xc0fffe7950000086] ; xchg byte ptr [rax], al ; add byte ptr [rsi - 0x1f000187], cl ; xchg byte ptr [rax], al ; add ah, cl ; jns 0x444b9c ; inc dword ptr [rax] ; xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444ba4 ; jmp qword ptr [rax]
0x0000000000444ba8 : movabs al, byte ptr [0xc0fffe7b40000087] ; xchg dword ptr [rax], eax ; add byte ptr [rbx + rdi*2 - 2], bl ; jmp rax
0x0000000000444d50 : movabs al, byte ptr [0xc0fffe877b00008e] ; mov es, word ptr [rax] ; add byte ptr [rsi - 0x1f000179], bh ; mov es, word ptr [rax] ; add cl, dh ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x000000000040d68c : movabs al, byte ptr [0xd805100ff3004393] ; ret 2
0x0000000000431644 : movabs al, byte ptr [0xf3c1590ff3000100] ; movups xmmword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004297d8 : movabs byte ptr [0x415b50c48348fffd], al ; pop rsp ; pop rbp ; ret
0x000000000042e32a : movabs byte ptr [0x48f8458b48fffd56], al ; shl eax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000041c6da : movabs byte ptr [0x5b18c48348fffe73], al ; pop rbp ; ret
0x0000000000445229 : movabs byte ptr [0xa2a8fffea0a00000], al ; add byte ptr [rax], al ; ret
0x000000000044453d : movabs byte ptr [0xa2dc00006cc0fffd], al ; std ; jmp rax
0x0000000000418cda : movabs byte ptr [0xf0c48148fffead], al ; add byte ptr [rax], al ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000042cbed : movabs dword ptr [0x485590c3c900000a], eax ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x00000000004500dd : movabs dword ptr [0x8e0501e300001b01], eax ; adc dword ptr [rax], eax ; test dword ptr [rcx], 0x10fa05 ; xchg byte ptr [rdx], al ; add eax, 0xad00118e ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044454d : movabs dword ptr [0xa39000006d00fffd], eax ; std ; jmp qword ptr [rax]
0x000000000040f985 : movabs dword ptr [0xc9f0458b48000008], eax ; ret
0x0000000000428c93 : movabs dword ptr [0xc9f0458b48000025], eax ; ret
0x0000000000444ab4 : movabs dword ptr [0xca000083e0fffe75], eax ; jne 0x444ad0 ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ad8 ; jmp qword ptr [rax]
0x0000000000444d14 : movabs dword ptr [0xca00008db0fffe85], eax ; test edi, esi ; call rax
0x0000000000444dc4 : movabs dword ptr [0xca00009090fffe8a], eax ; mov bh, dh ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x000000000042b77a : movabs eax, dword ptr [0x480a74c08548fffd] ; mov edx, dword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x00000000004387d0 : movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000438378 : movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x0000000000414319 : movabs eax, dword ptr [0x920fc33948000008] ; rol byte ptr [rax + rax*8 + 0x191840f], 0 ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041b9ab : movabs eax, dword ptr [0xfffe813ce8fffe7b] ; nop ; leave ; ret
0x00000000004387cf : movabs eax, dword ptr ds:[0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000406e6a : movabs rax, -0x5555555555555555 ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d11 : movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x00000000004085dc : movabs rax, 0x1555555555555555 ; pop rbp ; ret
0x00000000004156ae : movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x0000000000411204 : movabs rax, 0x333333333333333 ; pop rbp ; ret
0x0000000000411040 : movabs rax, 0x3ffffffffffffff ; pop rbp ; ret
0x0000000000408868 : movabs rax, 0x7ffffffffffffff ; pop rbp ; ret
0x0000000000437a88 : movabs rcx, 0xff3d35e0ff30000 ; pop rsp ; ret 0x2e0f
0x0000000000412059 : movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e374
0x000000000041d59d : movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d67f : movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d478 : movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000411286 : movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112b6 : movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x0000000000412069 : movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e364
0x00000000004374b9 : movaps xmm1, xmm3 ; call 0x403795
0x0000000000437009 : movaps xmm1, xmm3 ; call 0x40379d
0x000000000040c98a : movaps xmm1, xmm3 ; call 0x40395c
0x0000000000432076 : movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e356
0x000000000041202a : movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3a3
0x000000000040c953 : movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403993
0x0000000000432073 : movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e359
0x00000000004374f1 : movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037cd
0x00000000004374f0 : movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ce
0x00000000004374ef : movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037cf
0x0000000000437481 : movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037cd
0x0000000000437480 : movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ce
0x000000000043747f : movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037cf
0x0000000000432046 : movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e386
0x000000000040c96d : movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403979
0x0000000000446d34 : movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x000000000044c034 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044a834 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; js 0x44a811 ; std ; jmp qword ptr [rax]
0x000000000040b5dd : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add bl, dh ; movups xmmword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000445934 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x000000000044a134 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000411031 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000446234 : movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x000000000044b834 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x0000000000448e28 : movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; cld ; jmp rsp
0x00000000004320a6 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfffd
0x0000000000416318 : movsb byte ptr [rdi], byte ptr [rsi] ; sar esi, cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431918 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, 0x8948fffd ; ret
0x0000000000429481 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000448d34 : movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x0000000000429f73 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000445a3d : movsd dword ptr [rdi], dword ptr [rsi] ; add ecx, dword ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000041c317 : movsd dword ptr [rdi], dword ptr [rsi] ; jae 0x41c31e ; dec dword ptr [rax - 0x77] ; ret
0x00000000004297d7 : movsd dword ptr [rdi], dword ptr [rsi] ; movabs byte ptr [0x415b50c48348fffd], al ; pop rsp ; pop rbp ; ret
0x000000000042e55a : movsd dword ptr [rdi], dword ptr [rsi] ; out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000042b04a : movsd dword ptr [rdi], dword ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000430898 : movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x0000000000430887 : movss dword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000041da62 : movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000041dc51 : movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000040e068 : movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e09c : movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d391 : movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d3a2 : movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040b4d0 : movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4de : movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4ec : movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b514 : movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040b522 : movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040b530 : movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040b420 : movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b435 : movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b44a : movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b462 : movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4bd : movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d3c9 : movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d9a5 : movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000043164c : movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d682 : movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5ed : movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000040e37b : movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d47b : movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d55b : movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000040e389 : movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004249b3 : movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x424993
0x0000000000424a0d : movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x4249ed
0x0000000000424a67 : movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a47
0x0000000000424ac1 : movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424aa1
0x000000000040b5b4 : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000431496 : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314ab : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041450b : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431482 : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414534 : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414549 : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414520 : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043146d : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0e8 : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0fc : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e110 : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e124 : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e36e : movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b5e1 : movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x00000000004315a4 : movss dword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e138 : movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4bd : movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b501 : movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e35b : movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4c2 : movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b506 : movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e360 : movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4b8 : movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4fc : movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e356 : movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000411292 : movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112c2 : movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040e935 : movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000041da59 : movss xmm0, dword ptr [rax + 0x38] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0dc : movss xmm0, dword ptr [rax + 0x3c8] ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0f0 : movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e104 : movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e04c : movss xmm0, dword ptr [rax + 0x3e8] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e118 : movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e080 : movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e12c : movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000437514 : movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037aa
0x00000000004374a4 : movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037aa
0x0000000000414502 : movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431464 : movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314a2 : movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414540 : movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414555 : movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431479 : movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414517 : movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041d99c : movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000040b5bc : movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x00000000004249f0 : movss xmm0, dword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a0a
0x0000000000424a4a : movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a64
0x0000000000424aa4 : movss xmm0, dword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424abe
0x0000000000424996 : movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249b0
0x000000000043148e : movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041452c : movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b418 : movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b42d : movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b442 : movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b45a : movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040e8f9 : movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4d9 : movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b51d : movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e376 : movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4e7 : movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b52b : movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e384 : movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000412072 : movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e35b
0x000000000040b4cb : movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b50f : movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e369 : movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000411297 : movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041de6b : movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041d4b0 : movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5e0 : movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d54e : movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d590 : movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d672 : movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d46b : movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000043166c : movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043161e : movss xmm0, dword ptr [rip + 0x100ca] ; xorps xmm0, xmm1 ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041dc49 : movss xmm0, dword ptr [rip + 0x1e3e3] ; movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000041d39a : movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d389 : movss xmm0, dword ptr [rip + 0x1ecaf] ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x00000000004120a2 : movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e35b
0x00000000004112cc : movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040c97f : movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403967
0x000000000040c965 : movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403981
0x000000000040c94b : movss xmm0, dword ptr [rip + 0x2d01d] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40399b
0x0000000000430890 : movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000043087f : movss xmm0, dword ptr [rip + 0xf559] ; movss dword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000040e074 : movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040c977 : movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40396f
0x000000000040c95d : movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403989
0x000000000040c943 : movss xmm1, dword ptr [rax + 0x3f0] ; movss xmm0, dword ptr [rip + 0x2d01d] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4039a3
0x0000000000436ff4 : movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b2
0x00000000004374ec : movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d2
0x000000000043747c : movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d2
0x00000000004374df : movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037df
0x000000000043746f : movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037df
0x0000000000432026 : movss xmm1, dword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3a6
0x000000000041203c : movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e391
0x000000000040e8ed : movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000432055 : movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e377
0x00000000004112c7 : movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x0000000000411289 : movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112b9 : movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112a1 : movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041d6f3 : movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d757 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d74f : movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7ad ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d490 : movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d570 : movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d697 : movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d602 : movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db28 : movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431633 : movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431663 : movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431640 : movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000432096 : movss xmm1, dword ptr [rip + 0x1030e] ; pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e35f
0x000000000041209a : movss xmm1, dword ptr [rip + 0x285e6] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e363
0x00000000004112aa : movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041127a : movss xmm1, dword ptr [rip + 0x28786] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040e08c : movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e058 : movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x0000000000432066 : movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e366
0x000000000043203d : movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e38f
0x000000000040e91d : movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000041db31 : movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4a3 : movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d583 : movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6aa : movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d615 : movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000040e925 : movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000437519 : movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a5
0x0000000000437518 : movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a6
0x0000000000437517 : movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a7
0x00000000004374a9 : movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a5
0x00000000004374a8 : movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a6
0x00000000004374a7 : movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a7
0x0000000000436ff9 : movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ad
0x0000000000436ff8 : movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ae
0x0000000000436ff7 : movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037af
0x0000000000436fd3 : movss xmm3, dword ptr [rax + 0x48] ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d3
0x0000000000420d3e : movsx eax, al ; sub eax, 0x20 ; cmp eax, 0x5c ; ja 0x423d25 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x000000000042447d : movsx eax, al ; sub eax, 0x21 ; cmp eax, 0x5d ; ja 0x424b3e ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x000000000040b5c9 : movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040e905 : movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x00000000004249ad : movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x424999
0x00000000004249ac : movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x42499a
0x0000000000424a07 : movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x4249f3
0x0000000000424a06 : movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x4249f4
0x0000000000424a61 : movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a4d
0x0000000000424a60 : movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a4e
0x0000000000424abb : movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424aa7
0x0000000000424aba : movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424aa8
0x0000000000431631 : movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431661 : movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4a1 : movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d581 : movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6a8 : movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d613 : movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000448e09 : movsxd rsi, ebx ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x000000000044ba78 : movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x000000000041da5a : movups xmm0, xmmword ptr [rax + 0x38] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0dd : movups xmm0, xmmword ptr [rax + 0x3c8] ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0f1 : movups xmm0, xmmword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e105 : movups xmm0, xmmword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e04d : movups xmm0, xmmword ptr [rax + 0x3e8] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e119 : movups xmm0, xmmword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e081 : movups xmm0, xmmword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e12d : movups xmm0, xmmword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000437515 : movups xmm0, xmmword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a9
0x00000000004374a5 : movups xmm0, xmmword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a9
0x0000000000414503 : movups xmm0, xmmword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431465 : movups xmm0, xmmword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314a3 : movups xmm0, xmmword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414541 : movups xmm0, xmmword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414556 : movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043147a : movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414518 : movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041d99d : movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000040b5bd : movups xmm0, xmmword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x00000000004249f1 : movups xmm0, xmmword ptr [rax*4 + 0x43dc20] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a09
0x0000000000424a4b : movups xmm0, xmmword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a63
0x0000000000424aa5 : movups xmm0, xmmword ptr [rax*4 + 0x43dc40] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x90] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424abd
0x0000000000424997 : movups xmm0, xmmword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249af
0x000000000043148f : movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041452d : movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b419 : movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b42e : movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b443 : movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b45b : movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040e8fa : movups xmm0, xmmword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4da : movups xmm0, xmmword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b51e : movups xmm0, xmmword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e377 : movups xmm0, xmmword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4e8 : movups xmm0, xmmword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b52c : movups xmm0, xmmword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e385 : movups xmm0, xmmword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000412073 : movups xmm0, xmmword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e35a
0x000000000040b4cc : movups xmm0, xmmword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b510 : movups xmm0, xmmword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e36a : movups xmm0, xmmword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000411298 : movups xmm0, xmmword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041de6c : movups xmm0, xmmword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041d4b1 : movups xmm0, xmmword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5e1 : movups xmm0, xmmword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d54f : movups xmm0, xmmword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d591 : movups xmm0, xmmword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d673 : movups xmm0, xmmword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d46c : movups xmm0, xmmword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000043166d : movups xmm0, xmmword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043161f : movups xmm0, xmmword ptr [rip + 0x100ca] ; xorps xmm0, xmm1 ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041dc4a : movups xmm0, xmmword ptr [rip + 0x1e3e3] ; movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000041d39b : movups xmm0, xmmword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d38a : movups xmm0, xmmword ptr [rip + 0x1ecaf] ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x00000000004120a3 : movups xmm0, xmmword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e35a
0x00000000004112cd : movups xmm0, xmmword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040c980 : movups xmm0, xmmword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403966
0x000000000040c966 : movups xmm0, xmmword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403980
0x000000000040c94c : movups xmm0, xmmword ptr [rip + 0x2d01d] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40399a
0x0000000000430891 : movups xmm0, xmmword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x0000000000430880 : movups xmm0, xmmword ptr [rip + 0xf559] ; movss dword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000040e075 : movups xmm1, xmmword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040c978 : movups xmm1, xmmword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40396e
0x000000000040c95e : movups xmm1, xmmword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403988
0x000000000040c944 : movups xmm1, xmmword ptr [rax + 0x3f0] ; movss xmm0, dword ptr [rip + 0x2d01d] ; movaps xmm2, xmm1 ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4039a2
0x0000000000436ff5 : movups xmm1, xmmword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b1
0x00000000004374ed : movups xmm1, xmmword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d1
0x000000000043747d : movups xmm1, xmmword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d1
0x00000000004374e0 : movups xmm1, xmmword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037de
0x0000000000437470 : movups xmm1, xmmword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037de
0x0000000000432027 : movups xmm1, xmmword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3a5
0x000000000041203d : movups xmm1, xmmword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e390
0x000000000040e8ee : movups xmm1, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000432056 : movups xmm1, xmmword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e376
0x00000000004112c8 : movups xmm1, xmmword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041128a : movups xmm1, xmmword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112ba : movups xmm1, xmmword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112a2 : movups xmm1, xmmword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041d6f4 : movups xmm1, xmmword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d756 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d750 : movups xmm1, xmmword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7ac ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d491 : movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d571 : movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d698 : movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d603 : movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db29 : movups xmm1, xmmword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431634 : movups xmm1, xmmword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431664 : movups xmm1, xmmword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431641 : movups xmm1, xmmword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000432097 : movups xmm1, xmmword ptr [rip + 0x1030e] ; pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e35e
0x000000000041209b : movups xmm1, xmmword ptr [rip + 0x285e6] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e362
0x00000000004112ab : movups xmm1, xmmword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041127b : movups xmm1, xmmword ptr [rip + 0x28786] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040e08d : movups xmm1, xmmword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e059 : movups xmm1, xmmword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x0000000000432067 : movups xmm2, xmmword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e365
0x000000000043203e : movups xmm2, xmmword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e38e
0x000000000040e91e : movups xmm2, xmmword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000041db32 : movups xmm2, xmmword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4a4 : movups xmm2, xmmword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d584 : movups xmm2, xmmword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6ab : movups xmm2, xmmword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d616 : movups xmm2, xmmword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000040e926 : movups xmm2, xmmword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000043751a : movups xmm2, xmmword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a4
0x00000000004374aa : movups xmm2, xmmword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a4
0x0000000000436ffa : movups xmm2, xmmword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ac
0x0000000000436fd4 : movups xmm3, xmmword ptr [rax + 0x48] ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d2
0x0000000000430899 : movups xmmword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x0000000000430888 : movups xmmword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x000000000041da63 : movups xmmword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x000000000041dc52 : movups xmmword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000040e069 : movups xmmword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e09d : movups xmmword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d381 : movups xmmword ptr [rax + 0x48], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1ecaf] ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d392 : movups xmmword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d3a3 : movups xmmword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040b4d1 : movups xmmword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4df : movups xmmword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4ed : movups xmmword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b515 : movups xmmword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040b523 : movups xmmword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040b531 : movups xmmword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040b421 : movups xmmword ptr [rax + 0x78], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 4 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b436 : movups xmmword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b44b : movups xmmword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040b463 : movups xmmword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4be : movups xmmword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d3ca : movups xmmword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000041d9a6 : movups xmmword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000043164d : movups xmmword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d683 : movups xmmword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5ee : movups xmmword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000040e37c : movups xmmword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d47c : movups xmmword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d55c : movups xmmword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000040e38a : movups xmmword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004249b4 : movups xmmword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x424992
0x0000000000424a0e : movups xmmword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x4249ec
0x0000000000424a68 : movups xmmword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a46
0x0000000000424ac2 : movups xmmword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x90], 1 ; jmp 0x424aa0
0x000000000040b5b5 : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000431497 : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004314ac : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041450c : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431483 : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414535 : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041454a : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414521 : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043146e : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0e9 : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e0fd : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e111 : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e125 : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e36f : movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b5e2 : movups xmmword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x00000000004315a5 : movups xmmword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040e139 : movups xmmword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4be : movups xmmword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b502 : movups xmmword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e35c : movups xmmword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4c3 : movups xmmword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b507 : movups xmmword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e361 : movups xmmword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4b9 : movups xmmword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4fd : movups xmmword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e357 : movups xmmword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000411293 : movups xmmword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112c3 : movups xmmword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040e936 : movups xmmword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x00000000004042aa : movzx eax, al ; cmp eax, 0x10 ; ja 0x40429f ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000041f648 : movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec96 : movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x0000000000436d12 : movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x000000000040b6ca : movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b714 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b714 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6b0 : movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b72e ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b72e ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b718 : movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7b6 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7b6 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7b6 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b776 : movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9c2 : movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x000000000041d97e : movzx eax, byte ptr [rax + 1] ; xor eax, 1 ; test al, al ; je 0x41d9e8 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9e8 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x00000000004308b4 : movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x0000000000420d3b : movzx eax, byte ptr [rax] ; movsx eax, al ; sub eax, 0x20 ; cmp eax, 0x5c ; ja 0x423d28 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x000000000042447a : movzx eax, byte ptr [rax] ; movsx eax, al ; sub eax, 0x21 ; cmp eax, 0x5d ; ja 0x424b41 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x000000000041dafd : movzx eax, byte ptr [rax] ; xor eax, 1 ; test al, al ; je 0x41dba9 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004042a6 : movzx eax, byte ptr [rbp - 0x30] ; movzx eax, al ; cmp eax, 0x10 ; ja 0x4042a3 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000040f674 : movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040fae0 : movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410656 : movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x000000000040b494 : movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b4a2 : movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b486 : movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x00000000004374e5 : mulps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d9
0x0000000000437475 : mulps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d9
0x0000000000431649 : mulps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431675 : mulps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041128f : mulps xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112bf : mulps xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112a7 : mulps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x0000000000411277 : mulps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28786] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000043206c : mulps xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e360
0x000000000041d4b6 : mulps xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5e6 : mulps xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d554 : mulps xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db46 : mulps xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e92e : mulps xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000432043 : mulps xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e389
0x000000000041d596 : mulps xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d678 : mulps xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d471 : mulps xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041129d : mulps xmm0, xmmword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041129c : mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004374e4 : mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037da
0x0000000000437474 : mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037da
0x0000000000431648 : mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431674 : mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041128e : mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112be : mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112a6 : mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x0000000000411276 : mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28786] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000043206b : mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e361
0x000000000041d4b5 : mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5e5 : mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d553 : mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db45 : mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e92d : mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000432042 : mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e38a
0x0000000000432041 : mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e38b
0x000000000041d595 : mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d677 : mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d470 : mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x00000000004085c6 : neg eax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085c5 : neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000040b6db : nop ; add byte ptr [rax], al ; add byte ptr [rbp + 0x480b75c0], al ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000041005d : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x0000000000444dd9 : nop ; add byte ptr [rax], al ; and byte ptr [rbx - 0x6f0f0002], cl ; add byte ptr [rax], al ; mov edi, esi ; call qword ptr [rax]
0x0000000000444dd1 : nop ; add byte ptr [rax], al ; call 0xffffffffd1444c69
0x0000000000444de1 : nop ; add byte ptr [rax], al ; mov edi, esi ; call qword ptr [rax]
0x0000000000444dc1 : nop ; add byte ptr [rax], al ; movabs dword ptr [0xca00009090fffe8a], eax ; mov bh, dh ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x0000000000444dc9 : nop ; add byte ptr [rax], al ; retf -0x176 ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x00000000004458a4 : nop ; add dword ptr [rax], eax ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; loopne 0x4458c1 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44590d ; jmp rcx
0x0000000000410e1c : nop ; add dword ptr [rax], eax ; add cl, cl ; ret
0x0000000000450105 : nop ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000437d39 : nop ; add rsp, 0x10 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000408ac5 : nop ; add rsp, 0x18 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041eb97 : nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000412abe : nop ; add rsp, 0x1a0 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000430b3f : nop ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004072d4 : nop ; add rsp, 0x28 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000404453 : nop ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000410fa8 : nop ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000413585 : nop ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000004345b0 : nop ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000426f70 : nop ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000040b27d : nop ; add rsp, 0x88 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000043063d : nop ; add rsp, 0xc0 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f2ff : nop ; add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
0x0000000000404ba9 : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000425604 : nop ; and dword ptr [rax], eax ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000044367c : nop ; cmp bh, ah ; lcall ptr [rax + 0x2f] ; add byte ptr [rax], al ; ret
0x00000000004439e8 : nop ; cmp eax, 0x513d0000 ; cld ; push qword ptr [rax - 0x1bffffc3] ; push rcx ; cld ; call rax
0x0000000000444488 : nop ; imul eax, dword ptr [rax], 0xfd9b1000 ; push qword ptr [rax + 0x42000069] ; wait ; std ; call rax
0x000000000040b70f : nop ; lea eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7bf ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7bf ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7bf ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000444d10 : nop ; lea eax, dword ptr [rax] ; add byte ptr [rbx - 0x4f00017b], ah ; lea eax, dword ptr [rax] ; add dl, cl ; test edi, esi ; call rax
0x0000000000403fa4 : nop ; leave ; ret
0x0000000000445640 : nop ; mov ah, 0 ; add byte ptr [rcx - 0x4f00012e], ch ; mov ah, 0 ; add byte ptr [rsi - 0x2f00012e], bh ; mov bl, 0 ; add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x000000000040b4a7 : nop ; mov al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x000000000040b48b : nop ; mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b499 : nop ; mov dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b6c1 : nop ; mov eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b71d ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b71d ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x0000000000444dc8 : nop ; nop ; add byte ptr [rax], al ; retf -0x176 ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x000000000042cb4b : nop ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004249b7 : nop ; or byte ptr [rbx - 0x837b], al ; inc dword ptr [rcx] ; jmp 0x42498f
0x00000000004249b6 : nop ; or byte ptr [rbx - 0x837b], al ; inc dword ptr [rcx] ; jmp 0x424990
0x0000000000424a11 : nop ; or byte ptr [rbx - 0x877b], al ; inc dword ptr [rcx] ; jmp 0x4249e9
0x0000000000424a10 : nop ; or byte ptr [rbx - 0x877b], al ; inc dword ptr [rcx] ; jmp 0x4249ea
0x0000000000424a6b : nop ; or byte ptr [rbx - 0x8b7b], al ; inc dword ptr [rcx] ; jmp 0x424a43
0x0000000000424a6a : nop ; or byte ptr [rbx - 0x8b7b], al ; inc dword ptr [rcx] ; jmp 0x424a44
0x0000000000424ac5 : nop ; or byte ptr [rbx - 0x8f7b], al ; inc dword ptr [rcx] ; jmp 0x424a9d
0x0000000000424ac4 : nop ; or byte ptr [rbx - 0x8f7b], al ; inc dword ptr [rcx] ; jmp 0x424a9e
0x000000000042a096 : nop ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040b787 : nop ; pop qword ptr [rax] ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000405966 : nop ; pop rbp ; ret
0x00000000004444c8 : nop ; push 0 ; add ah, dh ; wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x000000000040b46d : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040e391 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov edx, 0x4399b8 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004307af : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0x18 ; pop rbp ; ret
0x00000000004306f5 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0xc ; pop rbp ; ret
0x00000000004090fd : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040fa9d : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000406f0b : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000410505 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405d59 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f5e7 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000041022b : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f635 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000407bcf : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410959 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004101e7 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000040f80d : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041d727 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7d5 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000405d21 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000414bbd : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405ca3 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x000000000040f58f : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410793 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000041f63b : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec89 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x000000000040b769 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9b5 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x0000000000405f1f : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004156a5 : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x000000000040885f : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x7ffffffffffffff ; pop rbp ; ret
0x000000000040b4af : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040787b : nop ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x0000000000443f50 : nop ; push rbx ; add byte ptr [rax], al ; xlatb ; cld ; push qword ptr [rax + 0x66000053] ; xlatb ; cld ; call rax
0x0000000000443f10 : nop ; push rdx ; add byte ptr [rax], al ; cmp dh, dl ; cld ; push qword ptr [rax + 0x54000052] ; salc ; cld ; call rax
0x0000000000444365 : nop ; std ; jmp rax
0x0000000000443520 : nop ; sub dword ptr [rax], eax ; add byte ptr [rdx], dh ; sub esp, edi ; push qword ptr [rax + 0x6a000029] ; sub esp, edi ; call rax
0x00000000004327bf : nop ; sub rsp, -0x80 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000443708 : nop ; xor dword ptr [rax], eax ; add byte ptr [rdx + 0x3e], ch ; cld ; push qword ptr [rax - 0x77ffffcf] ; cld ; call rax
0x00000000004437f8 : nop ; xor eax, 0x46a80000 ; cld ; push qword ptr [rax - 0x4cffffcb] ; cld ; call rax
0x0000000000403bfb : nop dword ptr [rax + rax] ; mov eax, 0x651567 ; push rbp ; sub rax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c5a ; mov eax, 0 ; test rax, rax ; je 0x403c5a ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c38 : nop dword ptr [rax + rax] ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cb3 ; mov eax, 0 ; test rax, rax ; je 0x403cb3 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000437dd8 : nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000403c28 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000437e08 : nop dword ptr [rax + rax] ; ret
0x0000000000403cad : nop dword ptr [rax] ; mov eax, 0 ; test rax, rax ; je 0x403cbc ; push rbp ; mov rbp, rsp ; call rax
0x0000000000403c75 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000403c37 : nop dword ptr cs:[rax + rax] ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cb4 ; mov eax, 0 ; test rax, rax ; je 0x403cb4 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000437e07 : nop dword ptr cs:[rax + rax] ; ret
0x0000000000403bfa : nop word ptr [rax + rax] ; mov eax, 0x651567 ; push rbp ; sub rax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c5b ; mov eax, 0 ; test rax, rax ; je 0x403c5b ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c27 : nop word ptr [rax + rax] ; pop rbp ; ret
0x0000000000403c36 : nop word ptr cs:[rax + rax] ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cb5 ; mov eax, 0 ; test rax, rax ; je 0x403cb5 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c35 : nop word ptr cs:[rax + rax] ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cb6 ; mov eax, 0 ; test rax, rax ; je 0x403cb6 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c34 : nop word ptr cs:[rax + rax] ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cb7 ; mov eax, 0 ; test rax, rax ; je 0x403cb7 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c33 : nop word ptr cs:[rax + rax] ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cb8 ; mov eax, 0 ; test rax, rax ; je 0x403cb8 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c32 : nop word ptr cs:[rax + rax] ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cb9 ; mov eax, 0 ; test rax, rax ; je 0x403cb9 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000437e06 : nop word ptr cs:[rax + rax] ; ret
0x00000000004322c6 : not byte ptr [rbx] ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004443a4 : not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000040e06b : or ah, 3 ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000044340d : or ah, bh ; jmp rax
0x00000000004464b5 : or al, 0 ; add al, al ; or edi, esp ; call qword ptr [rcx]
0x0000000000429e48 : or al, 0 ; add al, ch ; jo 0x429df2 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042c5c3 : or al, 0 ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x000000000042750d : or al, 0 ; add bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x000000000042c679 : or al, 0 ; add byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000042c621 : or al, 0 ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004067d2 : or al, 0 ; add byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x0000000000406bf1 : or al, 0 ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000406cfc : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004274e4 : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000406d0b : or al, 0 ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041741b : or al, 0 ; add byte ptr [rax], al ; call 0x4036c6
0x0000000000430703 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000042c5fc : or al, 0 ; add cl, cl ; ret
0x000000000041d3d4 : or al, 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000044f75e : or al, 0 ; ret 0x508
0x000000000044949c : or al, 0x3c ; add byte ptr [rax], al ; jbe 0x449469 ; cld ; jmp qword ptr [rbx]
0x000000000041d494 : or al, 0x48 ; mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d574 : or al, 0x48 ; mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d69b : or al, 0x48 ; mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d606 : or al, 0x48 ; mov edx, dword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000044d49c : or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000427262 : or al, 0x83 ; clc ; add al, 0x77 ; mov rax, r8 ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x000000000040d68a : or al, 0x85 ; movabs al, byte ptr [0xd805100ff3004393] ; ret 2
0x000000000041d4c1 : or al, 0x90 ; pop rbp ; ret
0x0000000000431636 : or al, 0x95 ; or byte ptr [rbx], 0x44 ; add bl, dh ; divps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431666 : or al, 0x95 ; or byte ptr [rbx], 0x44 ; add bl, dh ; movups xmm0, xmmword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000437bb0 : or al, 0xbb ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000040b459 : or al, 0xf3 ; movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x0000000000446589 : or al, 0xfc ; jmp qword ptr [rsi]
0x000000000043293a : or al, 0xfd ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x00000000004329c0 : or al, 0xfd ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x00000000004229f1 : or al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004129ca : or al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000041ef33 : or al, 2 ; add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000041e2b4 : or al, 2 ; add byte ptr [rax], al ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rax] ; mov rcx, qword ptr [rdx] ; mov rdx, qword ptr [rbp - 0x48] ; movss xmm0, dword ptr [rdx + 0x30] ; cvttss2si edx, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000040e0df : or al, 3 ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e0] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3e8] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004458a1 : or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458c4 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445910 ; jmp rcx
0x0000000000449765 : or al, 7 ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x0000000000447e05 : or al, 7 ; or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; jl 0x447e61 ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044e773 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; in al, dx ; mov es, word ptr [rax] ; add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x0000000000447ec3 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cmp al, 0x26 ; add byte ptr [rax], al ; mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x000000000044a06b : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x0000000000449933 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; mov dh, 0x2c ; std ; jmp qword ptr [rsi]
0x000000000044a343 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x3a00004a ; std ; call qword ptr [rdx]
0x000000000044a12b : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000447fa3 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb al, 0x27 ; add byte ptr [rax], al ; pop rsi ; js 0x447fbf ; call qword ptr [rdx]
0x00000000004475b3 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x000000000044e70b : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rsi - 0x72740000], cl ; std ; call qword ptr [rip]
0x000000000044a53b : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000445a3f : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a20f : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000044ef1f : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef45 ; call qword ptr [rdx]
0x0000000000448dee : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x0000000000446c86 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b86 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x00000000004464a6 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x000000000044665e : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf5e : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c66e : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044c23e : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x000000000044c0ce : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044c3ae : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004462ae : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044ce78 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ce9a ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x000000000044ce77 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ce9b ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493f0 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3f0 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d412 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044d3ef : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d413 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a40 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf40 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468d8 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x00000000004470d0 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000044cdb0 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d008 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x000000000044cd8a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdcf ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000446482 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004493ca : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3ca : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; jnp 0x44d410 ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d438 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004468b2 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x00000000004481f2 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x448210 ; call rdx
0x0000000000446a1a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf1a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf60 ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044839a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483b8 ; call qword ptr [rdx]
0x0000000000448399 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483b9 ; call qword ptr [rdx]
0x000000000044a78a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a88a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a87b ; std ; jmp qword ptr [rsi]
0x000000000044a7ca : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a7ea : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; jb 0x44a7db ; std ; jmp qword ptr [rax]
0x00000000004493aa : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044a7aa : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a8aa : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x50 ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x000000000044b9aa : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x61 ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x000000000044c8aa : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x00000000004461aa : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x0000000000446382 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x00000000004492ea : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x0000000000445a62 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fadd qword ptr [rcx] ; add byte ptr [rax], al ; loop 0x445a78 ; sti ; jmp qword ptr [rax]
0x000000000044a362 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x0000000000447e62 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rip + 0x77780000] ; cld ; jmp qword ptr [rdx]
0x000000000044c47a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x000000000044827a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000446d6a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000044a86a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x4f ; add byte ptr [rax], al ; jle 0x44a85b ; std ; jmp qword ptr [rax]
0x000000000044ba6a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x61 ; add byte ptr [rax], al ; movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x000000000044bd6a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x64 ; add byte ptr [rax], al ; ret 0xfdf4
0x000000000044a272 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044d472 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4b0 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044d471 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4b1 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x00000000004498f2 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x00000000004475f2 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb eax, 0x19540000 ; cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004485f2 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5ca : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x0000000000449dfa : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x449e5c ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x0000000000449df9 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x449e5d ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x000000000044aafa : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44ab89 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044aafa : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44aba9 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044a232 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044ab3a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x52 ; add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044c73a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x0000000000447d42 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d60 ; jmp qword ptr [rdx]
0x0000000000447e42 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e80 ; jmp qword ptr [rip]
0x0000000000447e41 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e81 ; jmp qword ptr [rip]
0x000000000044ef42 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef62 ; call qword ptr [rbx]
0x000000000044ef41 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef63 ; call qword ptr [rbx]
0x0000000000447612 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000446d2a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x000000000044c02a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044a82a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; js 0x44a81b ; std ; jmp qword ptr [rax]
0x000000000044622a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x000000000044b82a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x0000000000448d2a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x0000000000449492 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x449473 ; cld ; jmp qword ptr [rbx]
0x0000000000449491 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x449474 ; cld ; jmp qword ptr [rbx]
0x000000000044d492 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044b7ea : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; ret 0xfdf1
0x000000000044aada : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; push rdx ; add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x0000000000447e22 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000445aa2 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb al, 2 ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x000000000044d4b2 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044eeb2 : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x96 ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x000000000044ba0a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx], ah ; add byte ptr [rbx - 0xe], cl ; std ; jmp qword ptr [rsi]
0x000000000044a80a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044c30a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044c41a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000044ab1a : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000044beba : or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000044592c : or al, 7 ; or byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x000000000044a16c : or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x0000000000445ae4 : or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x00000000004475d4 : or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x0000000000447b0c : or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x000000000042d0ed : or al, byte ptr [eax] ; add cl, cl ; ret
0x0000000000407143 : or al, byte ptr [rax] ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000426e58 : or al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040fbd8 : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x75], 1 ; push rbp ; fmul st(1) ; ret
0x000000000040704a : or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000407059 : or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x000000000044638d : or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x00000000004462bd : or al, byte ptr [rax] ; add byte ptr [rdx + 0xa], ch ; cld ; call qword ptr [rcx]
0x0000000000400971 : or al, byte ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x12000005], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x120000], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042ca08 : or al, byte ptr [rax] ; add cl, cl ; ret
0x000000000042d2bc : or al, byte ptr ds:[rax] ; add cl, cl ; ret
0x000000000042cf92 : or al, byte ptr fs:[rax] ; add cl, cl ; ret
0x0000000000432240 : or al, cl ; std ; dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; outsb dx, byte ptr [rsi] ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000004462c1 : or bh, ah ; call qword ptr [rcx]
0x0000000000446239 : or bh, ah ; jmp qword ptr [rsi]
0x0000000000412b5e : or bh, bh ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041fe8a : or bh, byte ptr [rcx] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000444b84 : or bh, byte ptr [rdx - 2] ; jmp qword ptr [rax]
0x0000000000422c78 : or bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000044e781 : or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x000000000041d976 : or bl, bpl ; cmp byte ptr [rax - 0x75], cl ; clc ; movzx eax, byte ptr [rax + 1] ; xor eax, 1 ; test al, al ; je 0x41d9f0 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9f0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000041d977 : or bl, ch ; cmp byte ptr [rax - 0x75], cl ; clc ; movzx eax, byte ptr [rax + 1] ; xor eax, 1 ; test al, al ; je 0x41d9ef ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9ef ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000407379 : or bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000431463 : or bl, dh ; movups xmm0, xmmword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x18] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431478 : or bl, dh ; movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040b441 : or bl, dh ; movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040e8f8 : or bl, dh ; movups xmm0, xmmword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000431477 : or bl, sil ; movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp - 0x20] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x00000000004076a1 : or byte ptr [r8], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042d624 : or byte ptr [r8], al ; add cl, cl ; ret
0x00000000004458a3 : or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458c2 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44590e ; jmp rcx
0x00000000004458c2 : or byte ptr [rax + 0x3b1a3f00], al ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458ef ; jmp rcx
0x000000000040e38d : or byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov edx, 0x4399b8 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041065f : or byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000406ccb : or byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040b6e8 : or byte ptr [rax + rax - 0x6fff0000], 0x5d ; ret
0x0000000000449767 : or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x0000000000447e07 : or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; jl 0x447e5f ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000443798 : or byte ptr [rax + rax], dh ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000437dc7 : or byte ptr [rax - 0x3f], cl ; std ; add ebp, eax ; lahf ; mov bl, 0xfc ; dec dword ptr [rax - 0x7b] ; in eax, dx ; je 0x437e1e ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000411113 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; push rdx ; sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410ffc : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000414559 : or byte ptr [rax - 0x75], cl ; adc r11b, r14b ; movups xmmword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000437b01 : or byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000040b5c0 : or byte ptr [rax - 0x75], cl ; clc ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000410203 : or byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410980 : or byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000410213 : or byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410990 : or byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000041d47f : or byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d55f : or byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db17 : or byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004082b7 : or byte ptr [rax - 0x75], cl ; clc ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x00000000004097ae : or byte ptr [rax - 0x75], cl ; clc ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x000000000041d9a0 : or byte ptr [rax - 0x75], cl ; clc ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000407672 : or byte ptr [rax - 0x75], cl ; enter -0x7cb8, -0x3c ; and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041451b : or byte ptr [rax - 0x75], cl ; loopne 0x41455d ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041451a : or byte ptr [rax - 0x75], cl ; loopne 0x41455e ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041ba09 : or byte ptr [rax - 0x75], cl ; loopne 0x41ba4b ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041ba08 : or byte ptr [rax - 0x75], cl ; loopne 0x41ba4c ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043147d : or byte ptr [rax - 0x75], cl ; loopne 0x4314bf ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043147c : or byte ptr [rax - 0x75], cl ; loopne 0x4314c0 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000435545 : or byte ptr [rax - 0x75], cl ; loopne 0x435587 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000435544 : or byte ptr [rax - 0x75], cl ; loopne 0x435588 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000043201d : or byte ptr [rax - 0x75], cl ; mov byte ptr [r8 - 0x75], r9b ; sbb bl, sil ; movups xmm1, xmmword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3af
0x000000000041110b : or byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; push rdx ; sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410ff4 : or byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041db2c : or byte ptr [rax - 0x75], cl ; push rbp ; clc ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000407655 : or byte ptr [rax - 0x75], cl ; push rbp ; fmul dword ptr [rax - 0x77] ; ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041110f : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; push rdx ; sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410ff8 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000425b29 : or byte ptr [rax - 0x77], cl ; ret 0x3be
0x000000000040503b : or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000042f30d : or byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000041431a : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004100c2 : or byte ptr [rax], al ; add byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x00000000004101e1 : or byte ptr [rax], al ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000044e775 : or byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; in al, dx ; mov es, word ptr [rax] ; add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x0000000000447ec5 : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cmp al, 0x26 ; add byte ptr [rax], al ; mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x000000000044a06d : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x0000000000449935 : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; mov dh, 0x2c ; std ; jmp qword ptr [rsi]
0x000000000044a345 : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0x3a00004a ; std ; call qword ptr [rdx]
0x000000000044a12d : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000447fa5 : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sbb al, 0x27 ; add byte ptr [rax], al ; pop rsi ; js 0x447fbd ; call qword ptr [rdx]
0x00000000004475b5 : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x000000000044e70d : or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rsi - 0x72740000], cl ; std ; call qword ptr [rip]
0x000000000044a53d : or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000410147 : or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000407306 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000405b5c : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000041d3b4 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x0000000000410968 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x00000000004358fb : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000406b50 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000445a41 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a211 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000044ef21 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef43 ; call qword ptr [rdx]
0x0000000000448df0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x0000000000446c88 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b88 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x00000000004464a8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000446660 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000044bf60 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c670 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044c240 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x000000000044c0d0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044c3b0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004462b0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044ce7a : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ce98 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493f2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3f2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d410 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a42 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf42 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468da : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x00000000004470d2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000044cdb2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d00a : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x000000000044cd8c : or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdcd ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x0000000000446484 : or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004493cc : or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3cc : or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; jnp 0x44d40e ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d436 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004468b4 : or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x00000000004481f4 : or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x44820e ; call rdx
0x0000000000446a1c : or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf1c : or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf5e ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044839c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483b6 ; call qword ptr [rdx]
0x000000000044a78c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a88c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a879 ; std ; jmp qword ptr [rsi]
0x000000000044a7cc : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a7ec : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; jb 0x44a7d9 ; std ; jmp qword ptr [rax]
0x00000000004493ac : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044a7ac : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a8ac : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x50 ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x000000000044b9ac : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x61 ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x000000000044c8ac : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x00000000004461ac : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x0000000000446384 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x00000000004492ec : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x0000000000445a64 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fadd qword ptr [rcx] ; add byte ptr [rax], al ; loop 0x445a76 ; sti ; jmp qword ptr [rax]
0x000000000044a364 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x0000000000447e64 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rip + 0x77780000] ; cld ; jmp qword ptr [rdx]
0x000000000044c47c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x000000000044827c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000446d6c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000044a86c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x4f ; add byte ptr [rax], al ; jle 0x44a859 ; std ; jmp qword ptr [rax]
0x000000000044ba6c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x61 ; add byte ptr [rax], al ; movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x000000000044bd6c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x64 ; add byte ptr [rax], al ; ret 0xfdf4
0x000000000044a274 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044d474 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4ae ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x00000000004498f4 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x00000000004475f4 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb eax, 0x19540000 ; cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004485f4 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5cc : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x0000000000449dfc : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x449e5a ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x000000000044aafc : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44ab87 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044aafc : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44aba7 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044a234 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044ab3c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x52 ; add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044c73c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x0000000000447d44 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d5e ; jmp qword ptr [rdx]
0x0000000000447e44 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e7e ; jmp qword ptr [rip]
0x000000000044ef44 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef60 ; call qword ptr [rbx]
0x0000000000447614 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000446d2c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x000000000044c02c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044a82c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; js 0x44a819 ; std ; jmp qword ptr [rax]
0x000000000044622c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x000000000044b82c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x0000000000448d2c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x0000000000449494 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x449471 ; cld ; jmp qword ptr [rbx]
0x000000000044d494 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044b7ec : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; ret 0xfdf1
0x000000000044aadc : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; push rdx ; add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x0000000000447e24 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000445aa4 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb al, 2 ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x000000000044d4b4 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044eeb4 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x96 ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x000000000044ba0c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx], ah ; add byte ptr [rbx - 0xe], cl ; std ; jmp qword ptr [rsi]
0x000000000044a80c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044c30c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044c41c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000044ab1c : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000044bebc : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000040f9a9 : or byte ptr [rax], al ; add cl, cl ; ret
0x000000000044592e : or byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x000000000044a16e : or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x0000000000445ae6 : or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x00000000004475d6 : or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x0000000000447b0e : or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x0000000000443c28 : or byte ptr [rax], cl ; add byte ptr [rbx], cl ; scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000041d98f : or byte ptr [rbp + 0x481e75c0], al ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000424a24 : or byte ptr [rbp + 1], 0xe9 ; test byte ptr [rax], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424ac7 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a8a
0x000000000041db0d : or byte ptr [rbp - 0x74b7fdb0], cl ; clc ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b71a : or byte ptr [rbp - 0x7c000000], 0xc0 ; je 0x40b7b4 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7b4 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7b4 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000444190 : or byte ptr [rbp], bl ; add byte ptr [rsi + 0x1c], dl ; std ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x44422a ; std ; call qword ptr [rax]
0x0000000000406cc5 : or byte ptr [rbx + 0x50890852], cl ; or byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000437df9 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404bad : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000040b6cc : or byte ptr [rbx - 0x7c000000], 0xc0 ; je 0x40b712 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b712 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b6b2 : or byte ptr [rbx - 0x7d000000], 0xf0 ; add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b72c ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b72c ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x00000000004249b8 : or byte ptr [rbx - 0x837b], al ; inc dword ptr [rcx] ; jmp 0x42498e
0x0000000000424a12 : or byte ptr [rbx - 0x877b], al ; inc dword ptr [rcx] ; jmp 0x4249e8
0x0000000000424a6c : or byte ptr [rbx - 0x8b7b], al ; inc dword ptr [rcx] ; jmp 0x424a42
0x0000000000424ac6 : or byte ptr [rbx - 0x8f7b], al ; inc dword ptr [rcx] ; jmp 0x424a9c
0x0000000000431638 : or byte ptr [rbx], 0x44 ; add bl, dh ; divps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431668 : or byte ptr [rbx], 0x44 ; add bl, dh ; movups xmm0, xmmword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000406cc8 : or byte ptr [rcx - 0x366ff7b0], cl ; ret
0x00000000004449fc : or byte ptr [rcx - 2], ah ; call rax
0x00000000004272f1 : or byte ptr [rcx], bh ; ret
0x00000000004272f0 : or byte ptr [rcx], dil ; ret
0x000000000040b778 : or byte ptr [rdi - 0x7d000000], 0xf0 ; add dword ptr [rcx + 0x458b48c2], ecx ; clc ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041dea1 : or byte ptr [rdi], cl ; xchg dword ptr [rax + 2], ebx ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x0000000000432058 : or byte ptr [rsi + 0xf], ah ; out dx, eax ; sal bl, 0xf ; sub al, byte ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e374
0x000000000041db3c : or byte ptr [rsi + 0xf], ah ; out dx, eax ; sal bl, 0xf ; sub al, dl ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040b760 : or byte ptr [rsi], 0x90 ; pop rbp ; ret
0x00000000004320b4 : or byte ptr [rsi], dl ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042d52f : or byte ptr ds:[rax], al ; add cl, cl ; ret
0x000000000041d0c2 : or ch, byte ptr [rcx - 2] ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000044460c : or cl, al ; std ; jmp qword ptr [rax]
0x000000000041de66 : or cl, byte ptr [rax - 0x75] ; push rbp ; mov eax, 0x42100ff3 ; xor bl, dh ; cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000411108 : or cl, byte ptr [rax - 0x77] ; or byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; push rdx ; sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410ff1 : or cl, byte ptr [rax - 0x77] ; or byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000406cc2 : or cl, byte ptr [rax - 0x77] ; or byte ptr [rbx + 0x50890852], cl ; or byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044c0e0 : or dh, bh ; std ; call qword ptr [rcx]
0x000000000040e24e : or dh, byte ptr [rdi + 0xff30002] ; pop rax ; ret 0x2e0f
0x0000000000435f72 : or dl, ah ; cld ; dec dword ptr [rax - 0x75] ; clc ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000406c64 : or dword ptr [rax + rax], 0 ; nop ; leave ; ret
0x00000000004071f5 : or dword ptr [rax], eax ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x0000000000407253 : or dword ptr [rax], eax ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040ff15 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; call 0x78c68a80
0x000000000040ff15 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; call 0x78c68aae
0x000000000040ff15 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; call 0x78c68abb
0x000000000040ff15 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; call 0x78c68ac5
0x00000000004073ce : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040736c : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004073dd : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041577e : or dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040588d : or dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000446235 : or dword ptr [rax], eax ; add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x0000000000400aa9 : or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000400ad9 : or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004461b5 : or dword ptr [rax], eax ; add ch, bh ; or esp, edi ; jmp qword ptr [rsi]
0x000000000040722e : or dword ptr [rax], eax ; add cl, cl ; ret
0x0000000000431643 : or eax, 0x100a0 ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000432099 : or eax, 0x1030e ; pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e35c
0x000000000044a167 : or eax, 0x1100306 ; or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x00000000004475cf : or eax, 0x18e0306 ; or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x0000000000445adf : or eax, 0x19e0306 ; or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x000000000041209d : or eax, 0x285e6 ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e360
0x00000000004112ad : or eax, 0x28756 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041127d : or eax, 0x28786 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040e08f : or eax, 0x2b8f8 ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x0000000000445927 : or eax, 0x2b90306 ; or al, 7 ; or byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x000000000040e05b : or eax, 0x2b92c ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x0000000000426f68 : or eax, 0x30e80000 ; ret
0x000000000044ef17 : or eax, 0x3834506 ; add ecx, edx ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef4d ; call qword ptr [rdx]
0x000000000044ef16 : or eax, 0x3834506 ; add ecx, edx ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef4e ; call qword ptr [rdx]
0x000000000044a207 : or eax, 0x3834506 ; add esp, dword ptr [rax + 0x8070c07] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000044a533 : or eax, 0x3834806 ; add ecx, dword ptr [rdi] ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000445a37 : or eax, 0x3834806 ; add esp, dword ptr [rbp + 0x8070c03] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044ce6f : or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44cea3 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x000000000044ce6e : or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44cea4 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493e7 : or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3e7 : or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d41b ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044d3e6 : or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d41c ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a37 : or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf37 : or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468cf : or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044cda7 : or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044cfff : or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x00000000004470c7 : or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x0000000000448e13 : or eax, 0x38c4a06 ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x000000000044975b : or eax, 0x38c4a06 ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x0000000000426bde : or eax, 0x39480000 ; ret
0x0000000000447b07 : or eax, 0x3f30306 ; or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x0000000000446649 : or eax, 0x4cfffc ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x000000000042c523 : or eax, 0x4eb0000 ; mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000446d67 : or eax, 0x70c4606 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x0000000000449df7 : or eax, 0x70c4606 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x449e5f ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x0000000000449df6 : or eax, 0x70c4606 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x449e60 ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x0000000000446d27 : or eax, 0x70c4606 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x000000000044948f : or eax, 0x70c4606 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x449476 ; cld ; jmp qword ptr [rbx]
0x000000000044948e : or eax, 0x70c4606 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x449477 ; cld ; jmp qword ptr [rbx]
0x000000000044647f : or eax, 0x70c4906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000448397 : or eax, 0x70c4906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483bb ; call qword ptr [rdx]
0x0000000000448396 : or eax, 0x70c4906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483bc ; call qword ptr [rdx]
0x00000000004493a7 : or eax, 0x70c4a06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d46f : or eax, 0x70c4a06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4b3 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044d46e : or eax, 0x70c4a06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4b4 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000447e3f : or eax, 0x70c4c06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e83 ; jmp qword ptr [rip]
0x0000000000447e3e : or eax, 0x70c4c06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e84 ; jmp qword ptr [rip]
0x000000000044a35f : or eax, 0x70c4d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x0000000000448277 : or eax, 0x70c4d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x000000000044ef3f : or eax, 0x70c4d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef65 ; call qword ptr [rbx]
0x000000000044ef3e : or eax, 0x70c4d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef66 ; call qword ptr [rbx]
0x000000000044cd87 : or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdd2 ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044cd86 : or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdd3 ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493c7 : or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3c7 : or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; jnp 0x44d413 ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d43b ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044d3c6 : or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; jnp 0x44d414 ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d43c ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004468af : or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000446a17 : or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf17 : or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf63 ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044cf16 : or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf64 ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000447d3f : or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d63 ; jmp qword ptr [rdx]
0x0000000000447d3e : or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d64 ; jmp qword ptr [rdx]
0x000000000044760f : or eax, 0x70c5706 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x000000000044a887 : or eax, 0x70c5b06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a87e ; std ; jmp qword ptr [rsi]
0x000000000044a886 : or eax, 0x70c5b06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a87f ; std ; jmp qword ptr [rsi]
0x000000000044a7c7 : or eax, 0x70c5b06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000447e1f : or eax, 0x70c5b06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044a807 : or eax, 0x70c5b06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044d48f : or eax, 0x70c5e06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044d4af : or eax, 0x70c5e06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x0000000000447e5f : or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rip + 0x77780000] ; cld ; jmp qword ptr [rdx]
0x000000000044aaf7 : or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44ab8c ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044aaf6 : or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44ab8d ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044aaf7 : or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44abac ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044aaf6 : or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44abad ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044aad7 : or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; push rdx ; add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x000000000044c417 : or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000044ab17 : or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000044a7e7 : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; jb 0x44a7de ; std ; jmp qword ptr [rax]
0x000000000044a7e6 : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; jb 0x44a7df ; std ; jmp qword ptr [rax]
0x000000000044a7a7 : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a8a7 : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x50 ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x0000000000445a5f : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fadd qword ptr [rcx] ; add byte ptr [rax], al ; loop 0x445a7b ; sti ; jmp qword ptr [rax]
0x0000000000445a5e : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fadd qword ptr [rcx] ; add byte ptr [rax], al ; loop 0x445a7c ; sti ; jmp qword ptr [rax]
0x000000000044a867 : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x4f ; add byte ptr [rax], al ; jle 0x44a85e ; std ; jmp qword ptr [rax]
0x000000000044a866 : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x4f ; add byte ptr [rax], al ; jle 0x44a85f ; std ; jmp qword ptr [rax]
0x000000000044bd67 : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x64 ; add byte ptr [rax], al ; ret 0xfdf4
0x000000000044a26f : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x00000000004475ef : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb eax, 0x19540000 ; cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x000000000044a22f : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044ab37 : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x52 ; add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044a827 : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; js 0x44a81e ; std ; jmp qword ptr [rax]
0x000000000044a826 : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; js 0x44a81f ; std ; jmp qword ptr [rax]
0x000000000044b7e7 : or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; ret 0xfdf1
0x00000000004481ef : or eax, 0x70c6906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x448213 ; call rdx
0x00000000004481ee : or eax, 0x70c6906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x448214 ; call rdx
0x000000000044c8a7 : or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x000000000044637f : or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x00000000004492e7 : or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x000000000044c477 : or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x00000000004485ef : or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5c7 : or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x000000000044c737 : or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x000000000044c027 : or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044c307 : or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044beb7 : or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000044b9a7 : or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x61 ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x00000000004461a7 : or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x000000000044ba67 : or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x61 ; add byte ptr [rax], al ; movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x0000000000446227 : or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x000000000044b827 : or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x000000000044ba07 : or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx], ah ; add byte ptr [rbx - 0xe], cl ; std ; jmp qword ptr [rsi]
0x0000000000448d27 : or eax, 0x70c7906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x0000000000445a9f : or eax, 0x70c7906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb al, 2 ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x000000000044eeaf : or eax, 0x70c7906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x96 ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x000000000042c42a : or eax, 0x89480000 ; ret
0x0000000000404253 : or eax, 0x89480000 ; ret 0x458b
0x000000000042754a : or eax, 0x89480000 ; ret 0x8b48
0x000000000042c439 : or eax, 0x89480000 ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004228cc : or eax, 0x8948fffe ; ret
0x0000000000412917 : or eax, 0x8948ffff ; ret
0x0000000000406b3b : or eax, 0x8b480000 ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x00000000004264e6 : or eax, 0xb2e80000 ; int 0xfd
0x000000000040839b : or eax, 0xc9000004 ; ret
0x0000000000405d99 : or eax, 0xc9900000 ; ret
0x000000000044666d : or eax, 0xd8c0000 ; cld ; call qword ptr [rcx]
0x0000000000430f6f : or eax, 0xf0000fb ; push rdi ; ret 0x8b48
0x000000000044f7c7 : or eax, 0xfdb05 ; ret 0x50d
0x0000000000406ea6 : or eax, dword ptr [eax] ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x0000000000431639 : or eax, dword ptr [rax + rax - 0xd] ; divps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431669 : or eax, dword ptr [rax + rax - 0xd] ; movups xmm0, xmmword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000404acc : or eax, dword ptr [rax] ; add al, ch ; jmp 0x404af0
0x0000000000404acc : or eax, dword ptr [rax] ; add al, ch ; jmp 0x404b0c
0x000000000043757a : or eax, dword ptr [rax] ; add al, ch ; sahf ; sar ah, 0xff ; mov edi, 0x1701 ; call 0x40386f
0x000000000042a18c : or eax, dword ptr [rax] ; add al, ch ; sub al, 0x97 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000406df5 : or eax, dword ptr [rax] ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000406ea7 : or eax, dword ptr [rax] ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x0000000000426d1b : or eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042c799 : or eax, dword ptr [rax] ; add byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000406f05 : or eax, dword ptr [rax] ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000405c9d : or eax, dword ptr [rax] ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x000000000042c97b : or eax, dword ptr [rax] ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x0000000000406f3f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000406894 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000446d5c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x0000000000449dec : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x449e6a ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x0000000000446d1c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x0000000000449484 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x449481 ; cld ; jmp qword ptr [rbx]
0x0000000000430b3b : or eax, dword ptr [rax] ; add byte ptr [rax], al ; nop ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000044648d : or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x000000000042fbaf : or eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret
0x0000000000400ac1 : or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000406ee0 : or eax, dword ptr [rax] ; add cl, cl ; ret
0x000000000044f64e : or eax, dword ptr [rax] ; ret
0x000000000044f636 : or eax, dword ptr [rax] ; ret 0x507
0x0000000000406f04 : or eax, dword ptr fs:[rax] ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000406893 : or eax, dword ptr gs:[rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004274c9 : or eax, edx ; pop rbp ; ret
0x000000000040b6e2 : or ecx, dword ptr [rax - 0x75] ; clc ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x00000000004438f4 : or ecx, dword ptr [rsp + rdi*8 - 1] ; sar byte ptr [rcx], 0 ; add byte ptr [rsi], ah ; cld ; jmp rax
0x0000000000436af9 : or edi, 0xfffffffc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432a2f : or edi, ebp ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000412c3c : or edi, edi ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000044c488 : or edi, edx ; std ; jmp qword ptr [rsi]
0x0000000000422af1 : or edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004464b9 : or edi, esp ; call qword ptr [rcx]
0x0000000000443415 : or edi, esp ; inc dword ptr [rax] ; and eax, 0xbd60000 ; cld ; jmp qword ptr [rax]
0x000000000044341d : or edi, esp ; jmp qword ptr [rax]
0x0000000000446391 : or edi, esp ; jmp qword ptr [rsi]
0x000000000040d10d : or edx, dword ptr [rip - 0x36700000] ; ret
0x000000000044f8ec : or edx, dword ptr [rsi - 0x4e] ; stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; mov ah, 0xc ; add eax, 0x1a0be ; ret
0x0000000000438370 : or edx, ecx ; xor dword ptr [rsi - 0x41dfcf81], edi ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x00000000004387c8 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438816 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004387c7 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438817 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004387c6 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438818 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439648 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x439696 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439647 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x439697 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439646 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x439698 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a368 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3b6 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a367 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3b7 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a366 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3b8 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b028 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b076 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b027 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b077 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b026 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b078 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bce8 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd36 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bce7 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd37 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bce6 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd38 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9c8 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca16 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9c7 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca17 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9c6 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca18 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d788 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7d6 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d787 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7d7 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d786 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7d8 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e508 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e556 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e507 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e557 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e506 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e558 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f948 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f996 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f947 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f997 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f946 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f998 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440768 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407b6 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440767 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407b7 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440766 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407b8 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413e8 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441436 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413e7 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441437 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413e6 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441438 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442068 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420b6 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442067 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420b7 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442066 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420b8 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fc8 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443016 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fc7 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443017 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fc6 : or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443018 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004458c0 : or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458f1 ; jmp rcx
0x0000000000444afc : or esi, dword ptr [rdi - 2] ; inc dword ptr [rax] ; test dword ptr [rax], eax ; add byte ptr [rdx], dh ; ja 0x444b10 ; jmp qword ptr [rax]
0x00000000004348a1 : or esi, ebx ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000422cf5 : or esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424441 : or esi, edi ; std ; dec dword ptr [rax + 0x39] ; ret
0x00000000004461b9 : or esp, edi ; jmp qword ptr [rsi]
0x000000000040736b : or qword ptr [rax], r8 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000422d77 : or r14d, r15d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422c77 : or r15b, r14b ; dec dword ptr [rax - 0x77] ; ret
0x000000000042d2ed : or r8b, byte ptr [r8] ; add cl, cl ; ret
0x000000000042d192 : or r8b, byte ptr [rax] ; add cl, cl ; ret
0x0000000000404acb : or r8d, dword ptr [rax] ; add al, ch ; jmp 0x404af1
0x0000000000404acb : or r8d, dword ptr [rax] ; add al, ch ; jmp 0x404b0d
0x000000000042a01e : out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000004075cd : out -1, eax ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000042e56a : out -1, eax ; dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000434cd3 : out -2, eax ; std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000424f08 : out -3, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000004353d6 : out -4, eax ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000406e21 : out 0, eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; leave ; ret
0x00000000004387c1 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43881d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439641 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43969d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a361 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3bd ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b021 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b07d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bce1 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd3d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9c1 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca1d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d781 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7dd ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e501 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e55d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f941 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f99d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440761 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407bd ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413e1 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44143d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442061 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420bd ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fc1 : out 0x54, al ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44301d ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000438369 : out 0x54, eax ; mov esi, 0xbe4363b2 ; or edx, ecx ; xor dword ptr [rsi - 0x41dfcf81], edi ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x000000000041209e : out 0x85, al ; add al, byte ptr [rax] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e35f
0x0000000000448fd8 : out 0xbb, al ; cld ; jmp qword ptr [rsi]
0x0000000000424f2e : out 0xfd, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000404cf6 : out 0xff, al ; dec dword ptr [rax + 0x39] ; ret
0x00000000004089df : out 0xff, al ; dec dword ptr [rax - 0x75] ; add cl, cl ; ret
0x0000000000404ece : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000407628 : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000042a097 : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000042e4d2 : out 0xff, al ; dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000410d0e : out 1, al ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000410764 : out dx, al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004287ca : out dx, al ; and eax, 0xc9900000 ; ret
0x0000000000434d63 : out dx, al ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000044ce88 : out dx, al ; cld ; std ; jmp qword ptr [rdx]
0x000000000041ff0e : out dx, al ; jbe 0x41ff19 ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x00000000004458d8 : out dx, al ; jrcxz 0x4458d9 ; jmp rcx
0x0000000000427970 : out dx, al ; or eax, 0xc9900000 ; ret
0x0000000000424477 : out dx, al ; std ; dec dword ptr [rdi] ; mov dh, 0 ; movsx eax, al ; sub eax, 0x21 ; cmp eax, 0x5d ; ja 0x424b44 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x00000000004323cd : out dx, eax ; adc bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x00000000004325cd : out dx, eax ; adc ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000426297 : out dx, eax ; adc eax, 0x39480000 ; ret
0x0000000000423bcd : out dx, eax ; cli ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043750a : out dx, eax ; leave ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b4
0x000000000043749a : out dx, eax ; leave ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b4
0x0000000000404657 : out dx, eax ; mov edi, 0x5c60002 ; pop rsi ; shl dword ptr [rax + rax], 1 ; add byte ptr [rax + 0x386e9], dl ; add byte ptr [rax - 0x75], cl ; add eax, 0x24d169 ; mov rdi, rax ; call 0x426f9b
0x0000000000400aa8 : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; or eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, cl ; or dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rax], dl ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000004320a0 : out dx, eax ; ror byte ptr [rax - 0x77], 0xdf ; call 0x40e355
0x000000000041d3c7 : out dx, eax ; sal bl, 0xf ; adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x00000000004315a2 : out dx, eax ; sal bl, 0xf ; adc dword ptr [rax], eax ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000436fea : out dx, eax ; sal bl, 0xf ; sub al, al ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037bc
0x0000000000437465 : out dx, eax ; sal bl, 0xf ; sub al, al ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e9
0x0000000000432033 : out dx, eax ; sal bl, 0xf ; sub al, al ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e399
0x0000000000412024 : out dx, eax ; sal bl, 0xf ; sub al, al ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3a9
0x000000000041204f : out dx, eax ; sal bl, 0xf ; sub al, al ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e37e
0x000000000043205b : out dx, eax ; sal bl, 0xf ; sub al, byte ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e371
0x00000000004374d4 : out dx, eax ; sal bl, 0xf ; sub al, byte ptr [rbp - 4] ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ea
0x000000000041d6e9 : out dx, eax ; sal bl, 0xf ; sub al, dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d761 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d745 : out dx, eax ; sal bl, 0xf ; sub al, dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7b7 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db3f : out dx, eax ; sal bl, 0xf ; sub al, dl ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000432094 : out dx, eax ; sal bl, cl ; movups xmm1, xmmword ptr [rip + 0x1030e] ; pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e361
0x0000000000412098 : out dx, eax ; sal bl, cl ; movups xmm1, xmmword ptr [rip + 0x285e6] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e365
0x0000000000423ccd : out dx, eax ; stc ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043224e : outsb dx, byte ptr [rsi] ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000415198 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x000000000044c745 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x00000000004445c9 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; pop rsp ; mov bh, 0xfd ; call qword ptr [rax]
0x000000000042354e : outsb dx, byte ptr [rsi] ; add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000438b87 : outsb dx, byte ptr [rsi] ; jbe 0x438c09 ; insb byte ptr [rdi], dx ; imul esp, dword ptr [rsi + rbp + 0xa], 0x61656c50 ; jae 0x438c18 ; and byte ptr [rdx + 0x65], dh ; imul esi, dword ptr [ebx + 0x74], 0x2e7265 ; mov edx, 0x89fffd40 ; ret
0x0000000000444aac : outsb dx, byte ptr [rsi] ; jne 0x444ac8 ; inc eax ; add dword ptr [rax], 0 ; movabs dword ptr [0xca000083e0fffe75], eax ; jne 0x444ad8 ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ae0 ; jmp qword ptr [rax]
0x000000000042cebc : outsb dx, byte ptr [rsi] ; or al, byte ptr [rax] ; add cl, cl ; ret
0x000000000042d732 : outsb dx, byte ptr [rsi] ; or byte ptr [rax], al ; add cl, cl ; ret
0x0000000000405db4 : outsb dx, byte ptr [rsi] ; or eax, 0xc9900000 ; ret
0x00000000004441c4 : outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x4441f6 ; std ; call qword ptr [rax]
0x000000000040f62b : outsd dx, dword ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x0000000000444609 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; or cl, al ; std ; jmp qword ptr [rax]
0x0000000000429cd9 : outsd dx, dword ptr [rsi] ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000043758d : outsd dx, dword ptr [rsi] ; ret 0xfffc
0x0000000000430d4d : outsd dx, dword ptr [rsi] ; sub ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000041917b : outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rax] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000405811 : pop qword ptr [rax + rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040f4fd : pop qword ptr [rax + rax] ; add cl, cl ; ret
0x0000000000415627 : pop qword ptr [rax] ; add byte ptr [rax], al ; leave ; ret
0x000000000040b788 : pop qword ptr [rax] ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x000000000040b779 : pop qword ptr [rax] ; add byte ptr [rax], al ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x0000000000444d69 : pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x0000000000444da1 : pop qword ptr [rax] ; add dh, dl ; mov esi, edi ; call qword ptr [rax]
0x0000000000410dbf : pop qword ptr [rcx] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x00000000004114ed : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000437dfc : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040767c : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004072da : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000404b64 : pop r12 ; pop rbp ; ret
0x00000000004114ef : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000437dfe : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040767e : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004072dc : pop r13 ; pop rbp ; ret
0x00000000004114f1 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000437e00 : pop r14 ; pop r15 ; ret
0x0000000000407680 : pop r14 ; pop rbp ; ret
0x00000000004114f3 : pop r15 ; pop rbp ; ret
0x0000000000437e02 : pop r15 ; ret
0x0000000000446c98 : pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x000000000041dea4 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x74b71bbb], cl ; add al, 0xc5 ; call 0xffffffffff422282
0x0000000000443d50 : pop rax ; add byte ptr [r8], al ; pushfq ; ret
0x0000000000443d10 : pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d79 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000444069 : pop rax ; add byte ptr [rax], al ; pop rsp ; fdiv st(4), st(0) ; jmp qword ptr [rax]
0x0000000000444099 : pop rax ; add byte ptr [rax], al ; rcr ch, 0xfc ; jmp rax
0x000000000043204b : pop rax ; fmul dword ptr [rax - 0x75] ; mov byte ptr [r8 - 0x75], r9b ; sbb bl, sil ; movups xmm1, xmmword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e381
0x0000000000405825 : pop rax ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4850
0x0000000000427142 : pop rax ; jae 0x42714a ; dec dword ptr [rax + 0x39] ; ret
0x0000000000419362 : pop rax ; mov eax, 0x3948ffff ; ret
0x0000000000436fd6 : pop rax ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037d0
0x000000000042d092 : pop rax ; or al, byte ptr [rax] ; add cl, cl ; ret
0x0000000000406edf : pop rax ; or eax, dword ptr [rax] ; add cl, cl ; ret
0x000000000041ff5b : pop rax ; pop rbx ; pop rbp ; ret
0x000000000040dcc2 : pop rax ; ret
0x000000000040e178 : pop rax ; ret 0x2e0f
0x0000000000437238 : pop rax ; ret 0xf66
0x000000000040dc7b : pop rax ; ret 0xff3
0x00000000004374b7 : pop rax ; ror dword ptr [rdi], 0x28 ; retf ; call 0x403797
0x000000000040e08a : pop rax ; sal ebx, 0xf ; adc byte ptr [rip + 0x2b8f8], cl ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e056 : pop rax ; sal ebx, 0xf ; adc byte ptr [rip + 0x2b92c], cl ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4bb : pop rax ; sal ebx, 0xf ; adc dword ptr [rax + 0xc], eax ; nop ; pop rbp ; ret
0x000000000041d5eb : pop rax ; sal ebx, 0xf ; adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d559 : pop rax ; sal ebx, 0xf ; adc dword ptr [rax + 8], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db4b : pop rax ; sal ebx, 0xf ; adc dword ptr [rax + 8], eax ; nop ; pop rbp ; ret
0x000000000040e933 : pop rax ; sal ebx, 0xf ; adc dword ptr [rcx], eax ; nop ; pop rbp ; ret
0x000000000041d6fa : pop rax ; sal ebx, 0xf ; sub al, 0xd0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d750 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000044ab28 : pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000042e0fd : pop rax ; std ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000044c680 : pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000041c4c8 : pop rax ; sub byte ptr [rax + 0x38c48348], dl ; pop rbx ; pop rbp ; ret
0x0000000000414a90 : pop rax ; xor byte ptr [rax + 0x38c48348], dl ; pop rbx ; pop rbp ; ret
0x0000000000449b98 : pop rax ; xor ch, bh ; call qword ptr [rcx]
0x000000000042eae5 : pop rbp ; add al, byte ptr [rax] ; add cl, cl ; ret
0x00000000004441a9 : pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444211 ; std ; call qword ptr [rax]
0x00000000004441c9 : pop rbp ; add byte ptr [rax], al ; jl 0x4441f1 ; std ; call qword ptr [rax]
0x000000000044b665 : pop rbp ; add byte ptr [rax], al ; mov ah, 0xeb ; std ; call qword ptr [rcx]
0x00000000004441a1 : pop rbp ; add byte ptr [rax], al ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444219 ; std ; call qword ptr [rax]
0x00000000004441c1 : pop rbp ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x4441f9 ; std ; call qword ptr [rax]
0x0000000000444191 : pop rbp ; add byte ptr [rax], al ; push rsi ; sbb al, 0xfd ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444229 ; std ; call qword ptr [rax]
0x0000000000444199 : pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444221 ; std ; call qword ptr [rax]
0x00000000004441b9 : pop rbp ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444201 ; std ; call qword ptr [rax]
0x000000000042f3f5 : pop rbp ; call 0x48c87f5a
0x000000000041139f : pop rbp ; clc ; leave ; ret
0x000000000041747e : pop rbp ; fdivr dword ptr [rdi + 0xc] ; call 0x4036c9
0x0000000000424485 : pop rbp ; ja 0x424b36 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x0000000000448288 : pop rbp ; jle 0x44828a ; call qword ptr [rdx]
0x0000000000417418 : pop rbp ; loopne 0x4173e3 ; or al, 0 ; add byte ptr [rax], al ; call 0x4036c9
0x00000000004455dc : pop rbp ; mov bh, 0xfe ; inc dword ptr [rax] ; mov dl, 0 ; add dl, al ; mov bh, 0xfe ; jmp qword ptr [rax]
0x0000000000403c92 : pop rbp ; mov byte ptr [rip + 0x24db16], 1 ; ret
0x0000000000432273 : pop rbp ; mov eax, 0x38bf ; add al, ch ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000004324b5 : pop rbp ; mov eax, 0x38bf ; add al, ch ; call qword ptr [rcx]
0x0000000000431e0e : pop rbp ; mov eax, 0x38bf ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004320ac : pop rbp ; mov eax, 0x38bf ; add al, ch ; or byte ptr [rsi], dl ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000403c1f : pop rbp ; mov edi, 0x651560 ; jmp rax
0x000000000043756f : pop rbp ; mov esi, 0xd8e80000 ; mov edi, 0x50bffffc ; or eax, dword ptr [rax] ; add al, ch ; sahf ; sar ah, 0xff ; mov edi, 0x1701 ; call 0x40387a
0x000000000040f9f3 : pop rbp ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000437dfb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004114f0 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000437dff : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040767f : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000004072dd : pop rbp ; pop rbp ; ret
0x0000000000403c30 : pop rbp ; ret
0x000000000042b5e3 : pop rbp ; ret 0xffff
0x0000000000413843 : pop rbp ; ror byte ptr [rbx - 0x74b713bb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041b0b0 : pop rbp ; ror byte ptr [rbx - 0x74b717bb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000041b603 : pop rbp ; ror byte ptr [rbx - 0x74b71bbb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x0000000000432246 : pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; outsb dx, byte ptr [rsi] ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431de1 : pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; rcr dword ptr [rax], cl ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432488 : pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; sub al, 0x12 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432083 : pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; xor dword ptr [rsi], edx ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042d96b : pop rbp ; std ; dec ecx ; ret
0x0000000000410b6a : pop rbx ; add al, byte ptr [rax] ; add cl, cl ; ret
0x0000000000444131 : pop rbx ; add byte ptr [rax], al ; sub al, 0x17 ; std ; jmp qword ptr [rax + 0x5200005b]
0x000000000040e929 : pop rbx ; mov al, 2 ; add bl, dh ; mulps xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000044a789 : pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a889 : pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a87c ; std ; jmp qword ptr [rsi]
0x000000000044a7c9 : pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004498f1 : pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x0000000000447e21 : pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044a809 : pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000042d1ed : pop rbx ; or al, byte ptr [rax] ; add cl, cl ; ret
0x00000000004114ec : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040767b : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004072d9 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000404b63 : pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000437dfa : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000404458 : pop rbx ; pop rbp ; ret
0x000000000040d5fd : pop rbx ; ret
0x0000000000411c61 : pop rbx ; sbb bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000042db53 : pop rbx ; std ; dec ecx ; ret
0x000000000044a549 : pop rbx ; std ; jmp rsp
0x000000000042bd19 : pop rcx ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042b819 : pop rcx ; adc eax, 0x89480000 ; ret
0x00000000004440b9 : pop rcx ; add byte ptr [rax], al ; mov ah, 0xdf ; cld ; call rax
0x0000000000409b0b : pop rcx ; add byte ptr [rax], al ; mov eax, dword ptr [rax] ; cdqe ; mov rdx, qword ptr [rbp - 0x38] ; add rdx, 8 ; mov rsi, rax ; mov rdi, rdx ; call 0x405d71
0x000000000042894b : pop rcx ; add byte ptr es:[rax], al ; nop ; leave ; ret
0x000000000042e9f0 : pop rcx ; add dword ptr [rax], eax ; add cl, cl ; ret
0x000000000041129e : pop rcx ; cld ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x0000000000430883 : pop rcx ; cmc ; add byte ptr [rax], al ; movss dword ptr [rax + 0x2c], xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x0000000000423fb9 : pop rcx ; cmp dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000423fdf : pop rcx ; cmp dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004387bd : pop rcx ; loop 0x4387cb ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438821 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043963d : pop rcx ; loop 0x43964b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396a1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a35d : pop rcx ; loop 0x43a36b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3c1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b01d : pop rcx ; loop 0x43b02b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b081 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcdd : pop rcx ; loop 0x43bceb ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd41 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9bd : pop rcx ; loop 0x43c9cb ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca21 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d77d : pop rcx ; loop 0x43d78b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7e1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4fd : pop rcx ; loop 0x43e50b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e561 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f93d : pop rcx ; loop 0x43f94b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9a1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044075d : pop rcx ; loop 0x44076b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407c1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413dd : pop rcx ; loop 0x4413eb ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441441 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044205d : pop rcx ; loop 0x44206b ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420c1 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fbd : pop rcx ; loop 0x442fcb ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443021 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000041daf8 : pop rcx ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax] ; xor eax, 1 ; test al, al ; je 0x41dbae ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000438365 : pop rcx ; mov si, 0xe725 ; push rsp ; mov esi, 0xbe4363b2 ; or edx, ecx ; xor dword ptr [rsi - 0x41dfcf81], edi ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x000000000040fbd7 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ror byte ptr [r8 - 0x75], 1 ; push rbp ; fmul st(1) ; ret
0x0000000000431c29 : pop rcx ; ret 0x280f
0x000000000040a7c1 : pop rcx ; ret 0xff3
0x00000000004112a8 : pop rcx ; sal ebx, 0xf ; adc byte ptr [rip + 0x28756], cl ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x0000000000411278 : pop rcx ; sal ebx, 0xf ; adc byte ptr [rip + 0x28786], cl ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000043164a : pop rcx ; sal ebx, 0xf ; adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431676 : pop rcx ; sal ebx, 0xf ; adc dword ptr [rax + 8], eax ; nop ; pop rbp ; ret
0x0000000000411290 : pop rcx ; sal ebx, 0xf ; adc dword ptr [rbp - 8], eax ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112c0 : pop rcx ; sal ebx, 0xf ; adc dword ptr [rbp - 8], eax ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000042b319 : pop rcx ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000421e63 : pop rcx ; sbb dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000042e043 : pop rcx ; std ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042dd3b : pop rcx ; std ; dec ecx ; ret
0x00000000004059db : pop rdi ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000044b7f5 : pop rdi ; add byte ptr [rax], al ; ret 0xfdf1
0x000000000044b835 : pop rdi ; add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x0000000000444231 : pop rdi ; add byte ptr [rax], al ; sbb ah, byte ptr [rax] ; std ; inc eax ; pop rdi ; add byte ptr [rax], al ; xor al, 0x20 ; std ; jmp rax
0x0000000000444239 : pop rdi ; add byte ptr [rax], al ; xor al, 0x20 ; std ; jmp rax
0x000000000041fecf : pop rdi ; js 0x41feda ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000041825d : pop rdi ; mov ah, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000004114f4 : pop rdi ; pop rbp ; ret
0x0000000000411feb : pop rdi ; ret
0x000000000043752d : pop rdi ; ret 0xfffc
0x000000000042d783 : pop rdi ; std ; dec ecx ; ret
0x0000000000437234 : pop rdx ; sal dl, 0xf ; pop rax ; ret 0xf66
0x0000000000436a22 : pop rdx ; sar ah, 1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000042decf : pop rdx ; std ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042de54 : pop rdx ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042dc47 : pop rdx ; std ; dec ecx ; ret
0x000000000044a521 : pop rdx ; std ; lcall ptr [rcx + rax] ; add byte ptr [rax], al ; add al, 0 ; clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x000000000040f3f6 : pop rsi ; add al, 0 ; add bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000410f4b : pop rsi ; add dword ptr [rax], eax ; add cl, cl ; ret
0x0000000000447fb0 : pop rsi ; js 0x447fb2 ; call qword ptr [rdx]
0x000000000044e772 : pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; in al, dx ; mov es, word ptr [rax] ; add byte ptr [rsi], ah ; or bh, dh ; jmp qword ptr [rsp + rdx + 0x41000000]
0x000000000044d491 : pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044d4b1 : pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x00000000004114f2 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000437e01 : pop rsi ; pop r15 ; ret
0x0000000000407681 : pop rsi ; pop rbp ; ret
0x000000000042da5e : pop rsi ; pop rsp ; std ; dec ecx ; ret
0x000000000041c03a : pop rsi ; ret
0x0000000000416095 : pop rsi ; ret 0x280f
0x0000000000415bc8 : pop rsi ; ret 0xff3
0x0000000000444624 : pop rsi ; ret 0xfffd
0x000000000040e062 : pop rsi ; ror dword ptr [rax - 0x75], 0x45 ; cwde ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e096 : pop rsi ; ror dword ptr [rax - 0x75], 0x45 ; cwde ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000043163e : pop rsi ; sal ebx, 0xf ; adc byte ptr [rip + 0x100a0], cl ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000044ab48 : pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000040465d : pop rsi ; shl dword ptr [rax + rax], 1 ; add byte ptr [rax + 0x386e9], dl ; add byte ptr [rax - 0x75], cl ; add eax, 0x24d169 ; mov rdi, rax ; call 0x426f95
0x000000000042d877 : pop rsi ; std ; dec ecx ; ret
0x000000000044d018 : pop rsi ; std ; std ; jmp qword ptr [rdx]
0x00000000004444a4 : pop rsi ; wait ; std ; call qword ptr [rax]
0x0000000000445aec : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x0000000000444151 : pop rsp ; add byte ptr [rax], al ; adc al, 0x18 ; std ; jmp qword ptr [rax]
0x0000000000444189 : pop rsp ; add byte ptr [rax], al ; push 0x19 ; std ; dec dword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; push rsi ; sbb al, 0xfd ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444231 ; std ; call qword ptr [rax]
0x000000000040b621 : pop rsp ; add dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x000000000040b5f1 : pop rsp ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000425638 : pop rsp ; and dword ptr [rax], eax ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000412057 : pop rsp ; enter 0x280f, -0x3f ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e376
0x000000000041d59b : pop rsp ; enter 0x280f, -0x3f ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d67d : pop rsp ; enter 0x280f, -0x3f ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d476 : pop rsp ; enter 0x280f, -0x3f ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000411284 : pop rsp ; enter 0x280f, -0x3f ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112b4 : pop rsp ; enter 0x280f, -0x3f ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000044406c : pop rsp ; fdiv st(4), st(0) ; jmp qword ptr [rax]
0x0000000000420d46 : pop rsp ; ja 0x423d1d ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x0000000000444bb4 : pop rsp ; jnp 0x444bb8 ; jmp rax
0x00000000004445cc : pop rsp ; mov bh, 0xfd ; call qword ptr [rax]
0x0000000000443c5c : pop rsp ; mov cl, 0xfc ; inc eax ; add byte ptr [r8], r8b ; sub al, 0xb2 ; cld ; jmp rax
0x0000000000437b60 : pop rsp ; mov ebx, 0x8948fffc ; ret
0x000000000040b4d4 : pop rsp ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x00000000004114ee : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000437dfd : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040767d : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004072db : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000404b65 : pop rsp ; pop rbp ; ret
0x000000000042e270 : pop rsp ; push rdi ; std ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000040ba5a : pop rsp ; ret
0x000000000040ba33 : pop rsp ; ret 0x280f
0x000000000040e2b1 : pop rsp ; ret 0x2e0f
0x0000000000418377 : pop rsp ; ret 0xff3
0x000000000041202f : pop rsp ; ror byte ptr [rax - 0x75], 1 ; test dword ptr [rax + 0x48fffffe], ecx ; mov eax, dword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e39e
0x0000000000437007 : pop rsp ; ror dword ptr [rdi], 0x28 ; retf ; call 0x40379f
0x000000000040ea18 : pop rsp ; sal ebx, 0xf ; pop rcx ; ret 0xff3
0x000000000041d756 : pop rsp ; sal ebx, 0xf ; sub al, 0xd0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7a6 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000042af06 : pop rsp ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000042f407 : pop rsp ; std ; dec dword ptr [rax + 0x39] ; ret
0x000000000042da5f : pop rsp ; std ; dec ecx ; ret
0x0000000000443bfc : pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000424746 : pop rsp ; xor eax, 0x89480000 ; ret 0x8d48
0x0000000000420430 : pop rsp ; xor eax, 0xf7e8fffe ; xor bh, dh ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000406a51 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041558c : popfq ; add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000435c5f : popfq ; fdivp st(4) ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000429b09 : popfq ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044450d : popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x0000000000444505 : popfq ; std ; lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x00000000004444fd : popfq ; std ; push qword ptr [rax + 0x6b] ; add byte ptr [rax], al ; jnp 0x4444bd ; std ; lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x0000000000424b75 : popfq ; sub eax, 0x39480000 ; ret
0x000000000041f6a0 : push -0x41ffbc82 ; add eax, 0xbf00671c ; sar byte ptr [rbx], 0x40 ; add al, ch ; int 0x3e
0x0000000000444394 : push -0x5700026e ; add byte ptr gs:[rax], al ; test byte ptr [rdx + 0x65c8fffd], dl ; add byte ptr [rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000040b518 : push -0x7ba74b8 ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000044c0dd : push -0x8f60000 ; std ; call qword ptr [rcx]
0x00000000004444c9 : push 0 ; add ah, dh ; wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x000000000044c315 : push 0 ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x00000000004444e1 : push 0 ; add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x00000000004444d1 : push 0 ; add byte ptr [rdx], al ; pushfq ; std ; call rax
0x00000000004444d9 : push 0 ; add byte ptr [rsp + rbx*4 - 3], al ; push rax ; push 0 ; add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x000000000041362f : push 0x110ff304 ; insd dword ptr [rdi], dx ; ror byte ptr [rbx - 0x74b713bb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041b12f : push 0x110ff304 ; insd dword ptr [rdi], dx ; ror byte ptr [rbx - 0x74b717bb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000041b682 : push 0x110ff304 ; insd dword ptr [rdi], dx ; ror byte ptr [rbx - 0x74b71bbb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x00000000004032f6 : push 0x15 ; jmp 0x40319c
0x000000000044418c : push 0x19 ; std ; dec dword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; push rsi ; sbb al, 0xfd ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x44422e ; std ; call qword ptr [rax]
0x000000000044352c : push 0x29 ; cld ; call rax
0x00000000004044f4 : push 0x29000001 ; ret 0xd089
0x00000000004437b0 : push 0x29000034 ; cld ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004034f6 : push 0x35 ; jmp 0x40319c
0x000000000044370c : push 0x3e ; cld ; push qword ptr [rax - 0x77ffffcf] ; cld ; call rax
0x0000000000427b14 : push 0x48fffdbf ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405f14 : push 0x48ffffdb ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004099b5 : push 0x48ffffff ; mov dword ptr [rax + 0x30], edx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb9
0x00000000004099ec : push 0x48ffffff ; mov dword ptr [rax + 0x38], edx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb9
0x0000000000409a23 : push 0x48ffffff ; mov dword ptr [rax + 0x40], edx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb9
0x0000000000409a5a : push 0x48ffffff ; mov dword ptr [rax + 0x48], edx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb9
0x0000000000444388 : push 0x4c000065 ; xchg eax, edx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x00000000004036f6 : push 0x55 ; jmp 0x40319c
0x000000000042db52 : push 0x5b ; std ; dec ecx ; ret
0x00000000004038f6 : push 0x75 ; jmp 0x40319c
0x0000000000403af6 : push 0x95 ; jmp 0x40319c
0x00000000004462c0 : push 0xa ; cld ; call qword ptr [rcx]
0x000000000040c93c : push 0xff ; dec dword ptr [rax - 0x75] ; call 0xffffffff8850d994
0x00000000004444cf : push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x00000000004441b7 : push qword ptr [rax + 0x3600005d] ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444203 ; std ; call qword ptr [rax]
0x000000000044448f : push qword ptr [rax + 0x42000069] ; wait ; std ; call rax
0x0000000000443f17 : push qword ptr [rax + 0x54000052] ; salc ; cld ; call rax
0x00000000004441a7 : push qword ptr [rax + 0x5d] ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444213 ; std ; call qword ptr [rax]
0x0000000000443f57 : push qword ptr [rax + 0x66000053] ; xlatb ; cld ; call rax
0x0000000000443527 : push qword ptr [rax + 0x6a000029] ; sub esp, edi ; call rax
0x00000000004444bf : push qword ptr [rax + 0x6a] ; add byte ptr [rax], al ; ficomp dword ptr [rbx + 0x6a90fffd] ; add byte ptr [rax], al ; hlt ; wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x00000000004444ff : push qword ptr [rax + 0x6b] ; add byte ptr [rax], al ; jnp 0x4444bb ; std ; lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x000000000044477f : push qword ptr [rax + 0x76] ; add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x0000000000444dcf : push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x00000000004439ef : push qword ptr [rax - 0x1bffffc3] ; push rcx ; cld ; call rax
0x0000000000444d17 : push qword ptr [rax - 0x35ffff73] ; test edi, esi ; call rax
0x0000000000445647 : push qword ptr [rax - 0x41ffff4c] ; sar dh, cl ; call rax
0x0000000000443a2f : push qword ptr [rax - 0x43ffffc2] ; push rbx ; cld ; call rax
0x00000000004437ff : push qword ptr [rax - 0x4cffffcb] ; cld ; call rax
0x0000000000444dbf : push qword ptr [rax - 0x70] ; add byte ptr [rax], al ; movabs dword ptr [0xca00009090fffe8a], eax ; mov bh, dh ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x000000000044370f : push qword ptr [rax - 0x77ffffcf] ; cld ; call rax
0x0000000000444197 : push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444223 ; std ; call qword ptr [rax]
0x00000000004470bb : push qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x0000000000404d87 : push qword ptr [rcx] ; ret 0xb60f
0x000000000041d701 : push rax ; adc al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d749 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d75d : push rax ; adc al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d79f ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x00000000004082da : push rax ; adc byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042c022 : push rax ; adc byte ptr [rax], al ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000406a4e : push rax ; adc cl, ch ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000428bc6 : push rax ; adc cl, ch ; sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041f66b : push rax ; add al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x10], 1 ; nop ; leave ; ret
0x00000000004308c2 : push rax ; add al, 0x90 ; pop rbp ; ret
0x00000000004368d4 : push rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000443e6f : push rax ; add byte ptr [r8], r8b ; xor bh, cl ; cld ; call qword ptr [rax]
0x000000000044a895 : push rax ; add byte ptr [rax], al ; jle 0x44a870 ; std ; jmp qword ptr [rsi]
0x000000000044a8b5 : push rax ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x0000000000443a3f : push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x00000000004443a7 : push rax ; add byte ptr gs:[rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000041db0f : push rax ; add cl, byte ptr [rax - 0x75] ; clc ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041ffc0 : push rax ; add dword ptr [rcx + 0x251c4415], ecx ; add byte ptr [rbx + 0x251c3a15], cl ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fffa ; jmp rsp
0x000000000041021a : push rax ; and byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000443447 : push rax ; and eax, 0x181f0000 ; cld ; call qword ptr [rax]
0x000000000042136c : push rax ; and edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004099f2 : push rax ; cmp byte ptr [rax - 0x75], cl ; enter -0x7cb8, -0x40 ; push rax ; mov rdi, rax ; call 0x405cb3
0x0000000000411029 : push rax ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x00000000004439ff : push rax ; cmp eax, 0x52250000 ; cld ; call qword ptr [rax]
0x000000000042499b : push rax ; fadd qword ptr [rbx] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249ab
0x000000000041ef3d : push rax ; fild dword ptr [rbx] ; jmp rax
0x000000000044449f : push rax ; imul eax, dword ptr [rax], 0xfd9b5e00 ; call qword ptr [rax]
0x0000000000444778 : push rax ; jbe 0x44479a ; add byte ptr [rdi + rax*2 + 0x7670fffe], ch ; add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x0000000000444778 : push rax ; jbe 0x4447aa ; add byte ptr [rdi + rax*2 + 0x7670fffe], ch ; add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x0000000000444778 : push rax ; jbe 0x4447da ; add byte ptr [rdi + rax*2 + 0x7670fffe], ch ; add byte ptr [rax], al ; rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x000000000040b54b : push rax ; je 0x40b4e2 ; pop rbp ; ret
0x0000000000444b6c : push rax ; jns 0x444b88 ; inc eax ; xchg byte ptr [rax], al ; add byte ptr [rsi - 0x1f000187], cl ; xchg byte ptr [rax], al ; add ah, cl ; jns 0x444b98 ; inc dword ptr [rax] ; xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444ba0 ; jmp qword ptr [rax]
0x0000000000445880 : push rax ; jrcxz 0x4458d9 ; ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x44590a ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458e5 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445931 ; jmp rcx
0x0000000000444d27 : push rax ; lea eax, dword ptr [rax] ; add byte ptr [rax], ah ; xchg dh, bh ; call qword ptr [rax]
0x0000000000445657 : push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x000000000042bfc2 : push rax ; mov ecx, 0x8948ffff ; ret
0x0000000000409a29 : push rax ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cb3
0x000000000041d3a6 : push rax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000040f5a1 : push rax ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004099c4 : push rax ; mov rdi, rax ; call 0x405caa
0x000000000041db35 : push rax ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004374e3 : push rax ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037db
0x00000000004374e2 : push rax ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037dc
0x0000000000437473 : push rax ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037db
0x0000000000437472 : push rax ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037dc
0x0000000000432040 : push rax ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e38c
0x0000000000444ddf : push rax ; nop ; add byte ptr [rax], al ; mov edi, esi ; call qword ptr [rax]
0x0000000000407378 : push rax ; or bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x000000000041065e : push rax ; or byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000406cca : push rax ; or byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000410202 : push rax ; or byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041097f : push rax ; or byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000410212 : push rax ; or byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x000000000041098f : push rax ; or byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x000000000041db16 : push rax ; or byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004082b6 : push rax ; or byte ptr [rax - 0x75], cl ; clc ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x00000000004097ad : push rax ; or byte ptr [rax - 0x75], cl ; clc ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000407671 : push rax ; or byte ptr [rax - 0x75], cl ; enter -0x7cb8, -0x3c ; and byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000042c522 : push rax ; or eax, 0x4eb0000 ; mov rax, qword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000437579 : push rax ; or eax, dword ptr [rax] ; add al, ch ; sahf ; sar ah, 0xff ; mov edi, 0x1701 ; call 0x403870
0x00000000004441c7 : push rax ; pop rbp ; add byte ptr [rax], al ; jl 0x4441f3 ; std ; call qword ptr [rax]
0x00000000004441a0 : push rax ; pop rbp ; add byte ptr [rax], al ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x44421a ; std ; call qword ptr [rax]
0x0000000000415040 : push rax ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004444df : push rax ; push 0 ; add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x000000000041020a : push rax ; sbb byte ptr [rax - 0x75], cl ; clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410987 : push rax ; sbb byte ptr [rax - 0x75], cl ; clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000411d6c : push rax ; sbb edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000447620 : push rax ; sbb esp, edi ; call qword ptr [rcx]
0x0000000000430c6c : push rax ; sub bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411132 : push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040f676 : push rax ; sub byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x00000000004437cf : push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004099bb : push rax ; xor byte ptr [rax - 0x75], cl ; enter -0x7cb8, -0x40 ; push rax ; mov rdi, rax ; call 0x405cb3
0x000000000044380f : push rax ; xor eax, 0x46f00000 ; cld ; call qword ptr [rax]
0x000000000040b5e7 : push rbp ; clc ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5f8 : push rbp ; clc ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b617 : push rbp ; clc ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000043162b : push rbp ; clc ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043165b : push rbp ; clc ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041db38 : push rbp ; clc ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000408a52 : push rbp ; clc ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085b6 : push rbp ; clc ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000041d497 : push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d577 : push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d69e : push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d609 : push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6de : push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d76c ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d73a : push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7c2 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d48a : push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d56a : push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d691 : push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5fc : push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db22 : push rbp ; clc ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4ae : push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5de : push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d54c : push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d58e : push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d670 : push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d469 : push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6f1 : push rbp ; clc ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d759 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d74d : push rbp ; clc ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7af ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db2f : push rbp ; clc ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000443a7d : push rbp ; cld ; inc dword ptr [rax] ; add byte ptr [rax], al ; jno 0x443ae5 ; cld ; jmp qword ptr [rax]
0x0000000000443a85 : push rbp ; cld ; jmp qword ptr [rax]
0x00000000004274c4 : push rbp ; cld ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x0000000000415a67 : push rbp ; fdiv st(6), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x000000000040aa2e : push rbp ; fmul dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040aa56 : push rbp ; fmul dword ptr [rax + 0x63] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004317f5 : push rbp ; fmul dword ptr [rax - 0x75] ; call 0xffffffffe90aa19c
0x0000000000407658 : push rbp ; fmul dword ptr [rax - 0x77] ; ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004058cf : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000412b42 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000418ec4 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000419028 : push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x0000000000412042 : push rbp ; fmul qword ptr [rcx + 0x2e0c1d0] ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e38b
0x000000000040fbe1 : push rbp ; fmul st(1) ; ret
0x000000000040b488 : push rbp ; hlt ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b548 : push rbp ; hlt ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b4a4 : push rbp ; in al, dx ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040b4c5 : push rbp ; in al, dx ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b509 : push rbp ; in al, dx ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e363 : push rbp ; in al, dx ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004097b5 : push rbp ; loopne 0x409808 ; mov dword ptr [rax + 0x10], edx ; nop ; pop rbp ; ret
0x0000000000424795 : push rbp ; mov byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x6670
0x000000000041de69 : push rbp ; mov eax, 0x42100ff3 ; xor bl, dh ; cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000403cba : push rbp ; mov rbp, rsp ; call rax
0x00000000004274b9 : push rbp ; mov rbp, rsp ; mov dword ptr [rbp - 4], edi ; mov dword ptr [rbp - 8], esi ; mov edx, dword ptr [rbp - 4] ; mov eax, dword ptr [rbp - 8] ; or eax, edx ; pop rbp ; ret
0x000000000040881f : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 0x10], rdi ; mov qword ptr [rbp - 0x20], rsi ; nop ; pop rbp ; ret
0x00000000004087ac : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 0x10], rdi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x000000000043064a : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov dword ptr [rbp - 0x10], edx ; nop ; pop rbp ; ret
0x000000000040b538 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov rax, qword ptr [rbp - 8] ; mov edx, dword ptr [rbp - 0xc] ; mov dword ptr [rax + 0x74], edx ; nop ; pop rbp ; ret
0x000000000040b60a : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov dword ptr [rbp - 0xc], esi ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0xc] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 0 ; nop ; pop rbp ; ret
0x000000000040b46e : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov eax, ecx ; mov byte ptr [rbp - 0xc], sil ; mov byte ptr [rbp - 0x10], dl ; mov byte ptr [rbp - 0x14], al ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0xc] ; mov byte ptr [rax + 0x88], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x10] ; mov byte ptr [rax + 0x89], dl ; mov rax, qword ptr [rbp - 8] ; movzx edx, byte ptr [rbp - 0x14] ; mov byte ptr [rax + 0x8a], dl ; nop ; pop rbp ; ret
0x000000000040e392 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov edx, 0x4399b8 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004307b0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0x18 ; pop rbp ; ret
0x00000000004306f6 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov eax, 0xc ; pop rbp ; ret
0x0000000000409784 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov qword ptr [rbp - 0x20], rcx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x20] ; mov qword ptr [rax + 0x10], rdx ; nop ; pop rbp ; ret
0x0000000000410ad2 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x00000000004090fe : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x18] ; mov qword ptr [rax + 8], rdx ; nop ; pop rbp ; ret
0x000000000040fa9e : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x0000000000410634 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov qword ptr [rbp - 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 0x18] ; movzx edx, byte ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 8], dl ; nop ; pop rbp ; ret
0x0000000000406f0c : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000405948 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000405052 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405cca : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000405d5a : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rcx, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040f5e8 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; sete al ; pop rbp ; ret
0x000000000040f498 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 0x10] ; mov rax, qword ptr [rax] ; cmp rdx, rax ; setne al ; pop rbp ; ret
0x000000000041022c : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000040f636 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rdx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 0x10] ; movzx edx, byte ptr [rax + 0x28] ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000040595a : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000410254 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; add rax, 8 ; pop rbp ; ret
0x000000000041ec9c : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x1c], 1 ; nop ; pop rbp ; ret
0x0000000000436d18 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 1 ; nop ; pop rbp ; ret
0x00000000004308a0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041095a : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000437acc : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax] ; test eax, eax ; je 0x437b4a ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b4a ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b4a ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x00000000004101e8 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x18], rdx ; mov rax, qword ptr [rbp - 8] ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000407d5e : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040f80e : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x00000000004100d3 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; pop rbp ; ret
0x000000000041d6cc : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d77e ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d728 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7d4 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000405cea : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000040502c : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405ca4 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410bea : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x000000000040f590 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rax + 0x40] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000406d2a : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x000000000041f63c : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x10] ; pop rbp ; ret
0x000000000041ec8a : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x1c] ; pop rbp ; ret
0x0000000000436d06 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x39] ; pop rbp ; ret
0x000000000040b6a4 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b73a ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b73a ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b76a : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8f] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x000000000041d9b6 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 1] ; pop rbp ; ret
0x0000000000405e3e : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004085d4 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x1555555555555555 ; pop rbp ; ret
0x00000000004156a6 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x1fffffffffffffff ; pop rbp ; ret
0x00000000004111fc : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x333333333333333 ; pop rbp ; ret
0x0000000000411038 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x3ffffffffffffff ; pop rbp ; ret
0x0000000000408860 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movabs rax, 0x7ffffffffffffff ; pop rbp ; ret
0x000000000040b4b0 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x5c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x60], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x64], xmm0 ; nop ; pop rbp ; ret
0x000000000040b4f4 : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax + 0x68], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 0x6c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 0x70], xmm0 ; nop ; pop rbp ; ret
0x000000000040e34e : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; movss dword ptr [rbp - 0xc], xmm0 ; movss dword ptr [rbp - 0x10], xmm1 ; movss dword ptr [rbp - 0x14], xmm2 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0xc] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x10] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rbp - 0x14] ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040787c : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x000000000044cd89 : push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdd0 ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493c9 : push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3c9 : push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; jnp 0x44d411 ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d439 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004468b1 : push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000446a19 : push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf19 : push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf61 ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000447d41 : push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d61 ; jmp qword ptr [rdx]
0x0000000000446390 : push rbp ; or edi, esp ; jmp qword ptr [rsi]
0x000000000042e3e5 : push rbp ; std ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000403c05 : push rbp ; sub rax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c50 ; mov eax, 0 ; test rax, rax ; je 0x403c50 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c45 : push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403ca6 ; mov eax, 0 ; test rax, rax ; je 0x403ca6 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x00000000004247e0 : push rbp ; test byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0xf370
0x000000000041e525 : push rbp ; xchg eax, esp ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7f7 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x0000000000412169 : push rbx ; adc eax, 0x8948ffff ; ret
0x0000000000432569 : push rbx ; adc ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000443f59 : push rbx ; add byte ptr [rax], al ; xlatb ; cld ; call rax
0x0000000000443f51 : push rbx ; add byte ptr [rax], al ; xlatb ; cld ; push qword ptr [rax + 0x66000053] ; xlatb ; cld ; call rax
0x000000000042505a : push rbx ; add eax, 0x89480000 ; ret
0x0000000000443a45 : push rbx ; cld ; call qword ptr [rax]
0x0000000000443a35 : push rbx ; cld ; call rax
0x0000000000443944 : push rbx ; cld ; inc dword ptr [rax] ; cmp eax, dword ptr [rax] ; add byte ptr [rcx + 0x4d], ah ; cld ; jmp qword ptr [rax]
0x0000000000443a2d : push rbx ; cld ; push qword ptr [rax - 0x43ffffc2] ; push rbx ; cld ; call rax
0x0000000000443a3d : push rbx ; cld ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x0000000000412071 : push rbx ; movups xmm0, xmmword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e35c
0x000000000040d605 : push rbx ; ret
0x0000000000420e69 : push rbx ; sub dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000420d69 : push rbx ; sub esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000443ed9 : push rcx ; add byte ptr [rax], al ; ret 0xfcd4
0x00000000004439f5 : push rcx ; cld ; call rax
0x00000000004439ed : push rcx ; cld ; push qword ptr [rax - 0x1bffffc3] ; push rcx ; cld ; call rax
0x00000000004439fd : push rcx ; cld ; push rax ; cmp eax, 0x52250000 ; cld ; call qword ptr [rax]
0x000000000044a459 : push rcx ; std ; call qword ptr [rdx]
0x0000000000444061 : push rdi ; add byte ptr [rax], al ; fdiv st(4), st(0) ; inc dword ptr [rax] ; pop rax ; add byte ptr [rax], al ; pop rsp ; fdiv st(4), st(0) ; jmp qword ptr [rax]
0x0000000000444059 : push rdi ; add byte ptr [rax], al ; rcr bl, 0xfc ; jmp rax
0x0000000000423dbb : push rdi ; cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000423de1 : push rdi ; cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000044e70a : push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; test byte ptr [rsi - 0x72740000], cl ; std ; call qword ptr [rip]
0x0000000000447611 : push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x000000000040ba4a : push rdi ; ret
0x000000000041dcb9 : push rdi ; ret 0x2e0f
0x000000000040b9fb : push rdi ; ret 0x8b48
0x000000000041bda4 : push rdi ; ret 0xff3
0x000000000040bb78 : push rdi ; ror dword ptr [rax - 0x75], 0x45 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040bbb2 : push rdi ; ror dword ptr [rax - 0x75], 0x45 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000431627 : push rdi ; ror dword ptr [rax - 0x75], 0x55 ; clc ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040c988 : push rdi ; ror dword ptr [rdi], 0x28 ; retf ; call 0x40395e
0x00000000004492d8 : push rdi ; sar ah, 0xff ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x000000000042e271 : push rdi ; std ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000043165e : push rdx ; adc al, 0x48 ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d49e : push rdx ; adc al, 0x48 ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d57e : push rdx ; adc al, 0x48 ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6a5 : push rdx ; adc al, 0x48 ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d610 : push rdx ; adc al, 0x48 ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6e5 : push rdx ; adc al, 0x66 ; pxor mm0, mm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d765 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d741 : push rdx ; adc al, 0x66 ; pxor mm0, mm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7bb ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000446d78 : push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000043162e : push rdx ; adc byte ptr [rax + 0x63], cl ; sal bl, cl ; movups xmm1, xmmword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000443f11 : push rdx ; add byte ptr [rax], al ; cmp dh, dl ; cld ; push qword ptr [rax + 0x54000052] ; salc ; cld ; call rax
0x000000000044ab25 : push rdx ; add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000044ab45 : push rdx ; add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044ab05 : push rdx ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x0000000000443f19 : push rdx ; add byte ptr [rax], al ; push rsp ; salc ; cld ; call rax
0x000000000044aae5 : push rdx ; add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x000000000044589a : push rdx ; add byte ptr [rcx], al ; js 0x4458f0 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458cb ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445917 ; jmp rcx
0x000000000041fe02 : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041d48e : push rdx ; and bl, dh ; movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d56e : push rdx ; and bl, dh ; movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d695 : push rdx ; and bl, dh ; movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d600 : push rdx ; and bl, dh ; movups xmm1, xmmword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db26 : push rdx ; and bl, dh ; movups xmm1, xmmword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d49b : push rdx ; and byte ptr [rbx + 0x63481452], cl ; sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d57b : push rdx ; and byte ptr [rbx + 0x63481452], cl ; sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6a2 : push rdx ; and byte ptr [rbx + 0x63481452], cl ; sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d60d : push rdx ; and byte ptr [rbx + 0x63481452], cl ; sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6e2 : push rdx ; and byte ptr [rbx + 0xf661452], cl ; out dx, eax ; sal bl, 0xf ; sub al, dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d768 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d73e : push rdx ; and byte ptr [rbx + 0xf661452], cl ; out dx, eax ; sal bl, 0xf ; sub al, dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7be ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000443a05 : push rdx ; cld ; call qword ptr [rax]
0x0000000000443774 : push rdx ; cld ; dec dword ptr [rax + 0x70000033] ; cld ; ljmp ptr [rax - 0x73ffffcd] ; cld ; dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000411026 : push rdx ; cmp byte ptr [rcx - 0x7cb7c7b0], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000042baa8 : push rdx ; mov ebp, 0x2948ffff ; ret
0x000000000041796a : push rdx ; mov ebp, 0x8948fffe ; ret
0x0000000000406cfb : push rdx ; or al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042f30c : push rdx ; or byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000406cc7 : push rdx ; or byte ptr [rcx - 0x366ff7b0], cl ; ret
0x000000000041db3b : push rdx ; or byte ptr [rsi + 0xf], ah ; out dx, eax ; sal bl, 0xf ; sub al, dl ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000042d96a : push rdx ; pop rbp ; std ; dec ecx ; ret
0x000000000041db34 : push rdx ; push rax ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004493b8 : push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044ab08 : push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x0000000000421a6a : push rdx ; sbb al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000041de4d : push rdx ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4818
0x000000000041e2a7 : push rdx ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000041112e : push rdx ; sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000044449c : push rdx ; wait ; std ; push rax ; imul eax, dword ptr [rax], 0xfd9b5e00 ; call qword ptr [rax]
0x000000000042e2c7 : push rsi ; add eax, dword ptr [rax] ; add cl, cl ; ret
0x0000000000448d39 : push rsi ; cld ; call qword ptr [rip]
0x0000000000444bec : push rsi ; jge 0x444bf0 ; jmp rax
0x000000000044f8ed : push rsi ; mov dl, 0xaa ; add dword ptr [rax], eax ; mov ah, 0xc ; add eax, 0x1a0be ; ret
0x000000000042d0bc : push rsi ; or al, byte ptr [rax] ; add cl, cl ; ret
0x0000000000422c46 : push rsi ; ret
0x0000000000444194 : push rsi ; sbb al, 0xfd ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444226 ; std ; call qword ptr [rax]
0x000000000042e32b : push rsi ; std ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004112ae : push rsi ; xchg dword ptr [rdx], eax ; add bl, dh ; subps xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004468e4 : push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000042881e : push rsp ; add byte ptr es:[rax], al ; nop ; leave ; ret
0x0000000000447b19 : push rsp ; cld ; call rax
0x0000000000447db0 : push rsp ; ja 0x447e12 ; jmp qword ptr [rip]
0x000000000041fcbe : push rsp ; jl 0x41fcc7 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004387c2 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43881c ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439642 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43969c ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a362 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3bc ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b022 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b07c ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bce2 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd3c ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9c2 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca1c ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d782 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7dc ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e502 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e55c ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f942 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f99c ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440762 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407bc ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413e2 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44143c ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442062 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420bc ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fc2 : push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x44301c ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043836a : push rsp ; mov esi, 0xbe4363b2 ; or edx, ecx ; xor dword ptr [rsi - 0x41dfcf81], edi ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x0000000000403bf8 : push rsp ; nop word ptr [rax + rax] ; mov eax, 0x651567 ; push rbp ; sub rax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c5d ; mov eax, 0 ; test rax, rax ; je 0x403c5d ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x000000000042d04b : push rsp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044aae4 : push rsp ; push rdx ; add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x0000000000443f1c : push rsp ; salc ; cld ; call rax
0x0000000000416368 : push rsp ; sar esi, cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000447600 : push rsp ; sbb esp, edi ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000449900 : push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x0000000000443c04 : push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000447e2c : pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x0000000000448e29 : pushfq ; cld ; jmp rsp
0x0000000000443d54 : pushfq ; ret
0x0000000000417420 : pushfq ; ret 0xfffe
0x00000000004120ae : pushfq ; ret 0xffff
0x00000000004444e5 : pushfq ; std ; call qword ptr [rax]
0x00000000004444d5 : pushfq ; std ; call rax
0x00000000004444dd : pushfq ; std ; push rax ; push 0 ; add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x000000000044ef2c : pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef38 ; call qword ptr [rdx]
0x000000000043205a : pxor mm0, mm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e372
0x00000000004374d3 : pxor mm0, mm0 ; cvtsi2ss xmm0, dword ptr [rbp - 4] ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037eb
0x0000000000436fe9 : pxor mm0, mm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037bd
0x0000000000437464 : pxor mm0, mm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ea
0x0000000000432032 : pxor mm0, mm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e39a
0x0000000000412023 : pxor mm0, mm0 ; cvtsi2ss xmm0, eax ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3aa
0x000000000041204e : pxor mm0, mm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e37f
0x000000000041d6e8 : pxor mm0, mm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d762 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d744 : pxor mm0, mm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7b8 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db3e : pxor mm0, mm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043209f : pxor mm0, mm0 ; mov rdi, rbx ; call 0x40e356
0x000000000041d3c6 : pxor mm0, mm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x00000000004315a1 : pxor mm0, mm0 ; movss dword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000437509 : pxor mm1, mm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b5
0x0000000000437499 : pxor mm1, mm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b5
0x0000000000432093 : pxor mm2, mm2 ; movss xmm1, dword ptr [rip + 0x1030e] ; pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e362
0x0000000000412097 : pxor mm2, mm2 ; movss xmm1, dword ptr [rip + 0x285e6] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e366
0x0000000000432059 : pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e373
0x00000000004374d2 : pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 4] ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ec
0x0000000000436fe8 : pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037be
0x0000000000437463 : pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037eb
0x0000000000432031 : pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e39b
0x0000000000412022 : pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3ab
0x000000000041204d : pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e380
0x000000000041d6e7 : pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d763 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d743 : pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7b9 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db3d : pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000043209e : pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e357
0x000000000041d3c5 : pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x00000000004315a0 : pxor xmm0, xmm0 ; movss dword ptr [rax], xmm0 ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000437508 : pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b6
0x0000000000437498 : pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b6
0x0000000000432092 : pxor xmm2, xmm2 ; movss xmm1, dword ptr [rip + 0x1030e] ; pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e363
0x0000000000412096 : pxor xmm2, xmm2 ; movss xmm1, dword ptr [rip + 0x285e6] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e367
0x0000000000446a28 : rcl byte ptr [rax], cl ; cld ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x0000000000443bec : rcl byte ptr [rbp + 0x46c0fffc], 1 ; add byte ptr [rax], al ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000444f08 : rcl byte ptr [rbp - 0x6d0f0000], 0xfe ; jmp rax
0x0000000000444e10 : rcl byte ptr [rcx - 0x72ef0000], 0xfe ; jmp rax
0x0000000000444f88 : rcl byte ptr [rdi - 0x6b790000], 0xfe ; jmp rax
0x0000000000419b8c : rcl byte ptr [rdi], 2 ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x000000000042bbd4 : rcl byte ptr [rdx], 0 ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x000000000042b6d4 : rcl byte ptr [rip + 0x5eb0000], 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x0000000000444f48 : rcl byte ptr [rsi - 0x6c420000], 0xfe ; jmp rax
0x0000000000411ffc : rcl byte ptr [rsi], 0xff ; dec dword ptr [rax - 0x77] ; ret
0x0000000000436fe5 : rcl cl, 1 ; clc ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c1
0x0000000000437505 : rcl cl, 1 ; clc ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b9
0x0000000000437495 : rcl cl, 1 ; clc ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b9
0x0000000000424cc7 : rcl dword ptr [rdi + 0x3948ffff], cl ; ret
0x0000000000443444 : rcl dword ptr [rdi], -4 ; push rax ; and eax, 0x181f0000 ; cld ; call qword ptr [rax]
0x0000000000448e04 : rcl dword ptr [rip + 0x63040000], cl ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x000000000044405c : rcr bl, 0xfc ; jmp rax
0x00000000004450c0 : rcr byte ptr [rax + rax - 0x1657a00], 0xff ; call 0xffffffffa84451a8
0x00000000004450c0 : rcr byte ptr [rax + rax - 0x1657a00], 0xff ; call 0xffffffffa84451b8
0x0000000000444fc8 : rcr byte ptr [rax - 0x6aa60000], 0xfe ; jmp rax
0x000000000042e0fc : rcr byte ptr [rax - 3], 1 ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000444098 : rcr byte ptr [rax], 0 ; rcr ch, 0xfc ; jmp rax
0x0000000000405ce7 : rcr byte ptr [rbp - 0x3d], 1 ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x000000000041e49b : rcr byte ptr [rbp - 0x3d], 1 ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 8] ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x00000000004441c0 : rcr byte ptr [rbp], 1 ; add byte ptr [rsi + 0x1d], ch ; std ; push rax ; pop rbp ; add byte ptr [rax], al ; jl 0x4441fa ; std ; call qword ptr [rax]
0x0000000000445178 : rcr byte ptr [rdi - 0x61d30000], 0xfe ; jmp rax
0x0000000000444238 : rcr byte ptr [rdi], 0 ; xor al, 0x20 ; std ; jmp rax
0x000000000044409c : rcr ch, 0xfc ; jmp rax
0x000000000042a98c : rcr dword ptr [rax + rax], 0 ; nop ; leave ; ret
0x0000000000431de9 : rcr dword ptr [rax], cl ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044450c : rcr dword ptr [rbp + 0x6bc0fffd], cl ; add byte ptr [rax], al ; add al, 0x9e ; std ; jmp rax
0x000000000042abe4 : rcr dword ptr [rbx], 1 ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004387bc : rcr dword ptr [rcx + 0x66], 1 ; loop 0x4387cc ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438822 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043963c : rcr dword ptr [rcx + 0x66], 1 ; loop 0x43964c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396a2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a35c : rcr dword ptr [rcx + 0x66], 1 ; loop 0x43a36c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3c2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b01c : rcr dword ptr [rcx + 0x66], 1 ; loop 0x43b02c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b082 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcdc : rcr dword ptr [rcx + 0x66], 1 ; loop 0x43bcec ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd42 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9bc : rcr dword ptr [rcx + 0x66], 1 ; loop 0x43c9cc ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca22 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d77c : rcr dword ptr [rcx + 0x66], 1 ; loop 0x43d78c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7e2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4fc : rcr dword ptr [rcx + 0x66], 1 ; loop 0x43e50c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e562 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f93c : rcr dword ptr [rcx + 0x66], 1 ; loop 0x43f94c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9a2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044075c : rcr dword ptr [rcx + 0x66], 1 ; loop 0x44076c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407c2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413dc : rcr dword ptr [rcx + 0x66], 1 ; loop 0x4413ec ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441442 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044205c : rcr dword ptr [rcx + 0x66], 1 ; loop 0x44206c ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420c2 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fbc : rcr dword ptr [rcx + 0x66], 1 ; loop 0x442fcc ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443022 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000438a8c : rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x00000000004387bb : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x4387cd ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438823 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043963b : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x43964d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396a3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a35b : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x43a36d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3c3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b01b : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x43b02d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b083 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcdb : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x43bced ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd43 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9bb : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x43c9cd ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca23 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d77b : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x43d78d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7e3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4fb : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x43e50d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e563 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f93b : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x43f94d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9a3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044075b : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x44076d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407c3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413db : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x4413ed ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441443 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044205b : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x44206d ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420c3 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fbb : rcr dword ptr ds:[rcx + 0x66], 1 ; loop 0x442fcd ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443023 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004009d0 : ret
0x0000000000400b08 : ret 0
0x000000000041fc1b : ret 0x108
0x000000000041fc78 : ret 0x120
0x000000000041fcd5 : ret 0x138
0x0000000000424198 : ret 0x150
0x0000000000427e32 : ret 0x16
0x000000000042ae4c : ret 0x1a
0x000000000044f950 : ret 0x1a1
0x000000000044f86e : ret 0x1ab
0x00000000004233e6 : ret 0x1bb
0x000000000040902a : ret 0x1be
0x000000000041a956 : ret 0x1c
0x0000000000429fd6 : ret 0x20
0x0000000000438a9c : ret 0x2030
0x000000000041a982 : ret 0x209
0x0000000000417c82 : ret 0x236
0x000000000040467a : ret 0x24ce
0x0000000000403b02 : ret 0x24d9
0x0000000000403902 : ret 0x24da
0x0000000000403702 : ret 0x24db
0x0000000000403502 : ret 0x24dc
0x0000000000403302 : ret 0x24dd
0x0000000000412dca : ret 0x278
0x000000000040ba34 : ret 0x280f
0x000000000044f370 : ret 0x2a
0x000000000040c996 : ret 0x2cf
0x000000000040c296 : ret 0x2d6
0x000000000040e179 : ret 0x2e0f
0x0000000000405ad0 : ret 0x3174
0x00000000004246e0 : ret 0x35
0x0000000000404e76 : ret 0x3901
0x0000000000425b0b : ret 0x3be
0x00000000004041ef : ret 0x458b
0x00000000004041f5 : ret 0x4672
0x0000000000409b40 : ret 0x4801
0x0000000000409ba4 : ret 0x4802
0x0000000000409c08 : ret 0x4803
0x0000000000409c6b : ret 0x4804
0x0000000000409ccf : ret 0x4805
0x0000000000409d33 : ret 0x4806
0x0000000000409d96 : ret 0x4807
0x0000000000405749 : ret 0x4808
0x000000000041de51 : ret 0x4818
0x000000000040a23a : ret 0x4820
0x0000000000412b46 : ret 0x4828
0x000000000041e2ab : ret 0x4830
0x0000000000409e96 : ret 0x4838
0x0000000000418ec8 : ret 0x4840
0x000000000041f940 : ret 0x4848
0x000000000040582b : ret 0x4850
0x000000000041902c : ret 0x4858
0x000000000041f998 : ret 0x4860
0x000000000041f9f0 : ret 0x4878
0x0000000000450128 : ret 0x505
0x000000000044f638 : ret 0x507
0x000000000044f760 : ret 0x508
0x000000000044f7cc : ret 0x50d
0x0000000000422900 : ret 0x53
0x000000000044fb43 : ret 0x555
0x0000000000404dcf : ret 0x574
0x00000000004054fb : ret 0x59be
0x0000000000437251 : ret 0x5a75
0x0000000000437a5a : ret 0x637d
0x000000000042479c : ret 0x6670
0x0000000000407a02 : ret 0x673
0x000000000043780a : ret 0x687d
0x0000000000405649 : ret 0x6dbe
0x0000000000406e77 : ret 0x8348
0x0000000000405faf : ret 0x840f
0x00000000004202b6 : ret 0x858b
0x000000000040a5be : ret 0x8901
0x000000000040a5e2 : ret 0x8902
0x000000000040420f : ret 0x8948
0x0000000000436430 : ret 0x8b18
0x00000000004362f1 : ret 0x8b20
0x000000000040503e : ret 0x8b48
0x0000000000406899 : ret 0x8d48
0x00000000004380b8 : ret 0x8edc
0x000000000041fa4a : ret 0x90
0x0000000000406d78 : ret 0x920f
0x000000000040f604 : ret 0x940f
0x000000000040f4b4 : ret 0x950f
0x000000000041faa7 : ret 0xa8
0x000000000044f733 : ret 0xb
0x0000000000404d89 : ret 0xb60f
0x0000000000405d10 : ret 0xb848
0x0000000000404401 : ret 0xbe
0x000000000041fb04 : ret 0xc0
0x000000000044e751 : ret 0xc02
0x0000000000405d1e : ret 0xc35d
0x00000000004300b5 : ret 0xc889
0x00000000004044f9 : ret 0xd089
0x00000000004049a0 : ret 0xd148
0x0000000000409182 : ret 0xd76
0x000000000041fb61 : ret 0xd8
0x0000000000409286 : ret 0xe76
0x000000000042fcb1 : ret 0xeac1
0x000000000041fbbe : ret 0xf0
0x000000000042fabb : ret 0xf089
0x000000000043086d : ret 0xf304
0x000000000040e49b : ret 0xf31c
0x00000000004249b1 : ret 0xf36c
0x00000000004247e7 : ret 0xf370
0x0000000000404969 : ret 0xf66
0x0000000000446780 : ret 0xfc10
0x0000000000443edc : ret 0xfcd4
0x0000000000435b7a : ret 0xfcdd
0x000000000044b7f8 : ret 0xfdf1
0x000000000044bd78 : ret 0xfdf4
0x000000000041f0ca : ret 0xfe48
0x000000000041cf6a : ret 0xfe66
0x0000000000445014 : ret 0xfe96
0x00000000004455e4 : ret 0xfeb7
0x00000000004160fa : ret 0xfed5
0x0000000000412aba : ret 0xff0f
0x0000000000418378 : ret 0xff3
0x000000000040d35a : ret 0xff64
0x0000000000406186 : ret 0xfffc
0x000000000042778d : ret 0xfffd
0x0000000000417421 : ret 0xfffe
0x00000000004099ca : ret 0xffff
0x0000000000410a21 : ret 2
0x000000000044f53d : ret 3
0x000000000040772a : ret 7
0x000000000040f8fb : ret 8
0x0000000000444dcc : retf -0x176 ; push qword ptr [rax - 0x17ffff70] ; mov bh, dh ; call rax
0x0000000000444d1c : retf -0x17b ; call rax
0x0000000000444abc : retf -0x18b ; inc dword ptr [rax] ; test byte ptr [rax], al ; add dh, ah ; jne 0x444ad0 ; jmp qword ptr [rax]
0x0000000000443a3c : retf -0x3ad ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x00000000004374bb : retf ; call 0x403793
0x000000000043700b : retf ; call 0x40379b
0x000000000040c98c : retf ; call 0x40395a
0x000000000044bec8 : retf ; cmc ; std ; jmp qword ptr [rsi]
0x0000000000432078 : retf ; mov rdi, rbx ; call 0x40e354
0x0000000000443b6c : rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000444af0 : rol byte ptr [rax + rax - 0x1892a00], 0xff ; loopne 0x444a95 ; add byte ptr [rax], al ; or esi, dword ptr [rdi - 2] ; inc dword ptr [rax] ; test dword ptr [rax], eax ; add byte ptr [rdx], dh ; ja 0x444b1c ; jmp qword ptr [rax]
0x000000000041901a : rol byte ptr [rax + rax*8 + 0x107840f], 0 ; add byte ptr [rbx - 0x74b71bbb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x0000000000412b34 : rol byte ptr [rax + rax*8 + 0x12c840f], 0 ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000418eb6 : rol byte ptr [rax + rax*8 + 0x12c840f], 0 ; add byte ptr [rbx - 0x74b717bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000414322 : rol byte ptr [rax + rax*8 + 0x191840f], 0 ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000040429d : rol byte ptr [rax + rax*8 + 0x1ad840f], 0 ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x4042ac ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000435b6f : rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x000000000041b425 : rol byte ptr [rax + rax*8 + 0x31b840f], 0 ; add byte ptr [rbx - 0x74b71bbb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x00000000004135e1 : rol byte ptr [rax + rax*8 + 0x423840f], 0 ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041afda : rol byte ptr [rax + rax*8 + 0x423840f], 0 ; add byte ptr [rbx - 0x74b717bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000413cb2 : rol byte ptr [rax + rax*8 + 0x623840f], 0 ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000408069 : rol byte ptr [rax + rax], 0 ; leave ; ret
0x000000000040f492 : rol byte ptr [rax + rax], 1 ; add cl, cl ; ret
0x0000000000430641 : rol byte ptr [rax], 0 ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x0000000000444b30 : rol byte ptr [rbp + 0x78220000], 0xfe ; jmp rax
0x0000000000443c60 : rol byte ptr [rbp], 0 ; sub al, 0xb2 ; cld ; jmp rax
0x0000000000444ab0 : rol byte ptr [rbx + 0x75a30000], 0xfe ; jmp rax
0x000000000040b42b : rol byte ptr [rbx + rsi*8], 0xf ; adc byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x7c], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000042447f : rol byte ptr [rbx - 0x77cde18], 0x5d ; ja 0x424b3c ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x0000000000420d40 : rol byte ptr [rbx - 0x77cdf18], 0x5c ; ja 0x423d23 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x0000000000414d52 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000045010b : rol byte ptr [rbx], cl ; add eax, 0x3e10000 ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000041f32a : rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000437461 : rol byte ptr [rcx], 0x66 ; pxor mm0, mm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037ed
0x000000000043202f : rol byte ptr [rcx], 0x66 ; pxor mm0, mm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e39d
0x00000000004246cb : rol byte ptr [rcx], 0x89 ; ret
0x0000000000404c04 : rol byte ptr [rcx], 0xc6 ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000041201f : rol byte ptr [rcx], 1 ; shl byte ptr [rsi + 0xf], 0xef ; sal bl, 0xf ; sub al, al ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3ae
0x000000000041204a : rol byte ptr [rcx], 1 ; shl byte ptr [rsi + 0xf], 0xef ; sal bl, 0xf ; sub al, al ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e383
0x0000000000444bb0 : rol byte ptr [rdi + 0x7b5c0000], 0xfe ; jmp rax
0x0000000000444784 : rol byte ptr [rdi - 2], cl ; call qword ptr [rax - 0x7ffff8a]
0x000000000042da0e : rol byte ptr [rdi], 0 ; add cl, cl ; ret
0x000000000040c96a : rol byte ptr [rdx], 1 ; add byte ptr [rdi], cl ; sub cl, bl ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40397c
0x000000000040c950 : rol byte ptr [rdx], 1 ; add byte ptr [rdi], cl ; sub cl, dl ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403996
0x00000000004109e6 : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; nop ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000444b70 : rol byte ptr [rsi + 0x798e0000], 0xfe ; jmp rax
0x0000000000443bf0 : rol byte ptr [rsi], 0 ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000412045 : rol cl, 1 ; loopne 0x412085 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e388
0x0000000000443d0c : rol cl, cl ; cld ; lcall ptr [rax + 0x4a] ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d7d ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000449748 : rol dl, cl ; cld ; call rax
0x000000000041de84 : rol dword ptr [rax + rax*8 + 0x38d840f], 1 ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x1c], 0 ; cmp dword ptr [rbp - 0x1c], 9 ; jg 0x41e249 ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e12f ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000042ea52 : rol dword ptr [rcx], 0 ; add cl, cl ; ret
0x00000000004150f8 : rol dword ptr [rdx], 1 ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000436ffd : rol ebx, cl ; add byte ptr [rax], al ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a9
0x00000000004042a8 : ror byte ptr [r15], 1 ; mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x4042a1 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000406d74 : ror byte ptr [r8 + 0x39], 1 ; ret 0x920f
0x00000000004061fd : ror byte ptr [r8 + 1], 1 ; ret 0x8b48
0x000000000040bc03 : ror byte ptr [r8 - 0x75], 1 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040fbdd : ror byte ptr [r8 - 0x75], 1 ; push rbp ; fmul st(1) ; ret
0x0000000000406d75 : ror byte ptr [rax + 0x39], 1 ; ret 0x920f
0x000000000040b5d0 : ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d76 : ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040e8dc : ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e90c : ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040765f : ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082c8 : ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000408a59 : ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085bd : ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004061fe : ror byte ptr [rax + 1], 1 ; ret 0x8b48
0x000000000040b5cd : ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d73 : ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040e8d9 : ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e909 : ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040765c : ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082c5 : ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000408a56 : ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085ba : ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042c620 : ror byte ptr [rax + rax], 1 ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000406bf0 : ror byte ptr [rax + rax], 1 ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000042c5c2 : ror byte ptr [rax + rax], cl ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x0000000000405d09 : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax - 0x77] ; ret 0xb848
0x0000000000405cc3 : ror byte ptr [rax - 0x3f], 1 ; clc ; add eax, 0x4855c35d ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x000000000040504b : ror byte ptr [rax - 0x3f], 1 ; clc ; add ebx, dword ptr [rbp - 0x3d] ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; mov rdx, qword ptr [rbp - 0x10] ; shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000414c60 : ror byte ptr [rax - 0x3f], 1 ; clc ; add ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000405d79 : ror byte ptr [rax - 0x3f], 1 ; loopne 0x405d89 ; add rax, rcx ; pop rbp ; ret
0x0000000000407662 : ror byte ptr [rax - 0x3f], 1 ; loopne 0x40768a ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082cb : ror byte ptr [rax - 0x3f], 1 ; loopne 0x4082e5 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x00000000004085c0 : ror byte ptr [rax - 0x3f], 1 ; loopne 0x4085da ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004086a8 : ror byte ptr [rax - 0x3f], 1 ; loopne 0x4086c2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000408a5c : ror byte ptr [rax - 0x3f], 1 ; loopne 0x408a73 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000408c36 : ror byte ptr [rax - 0x3f], 1 ; loopne 0x408c4d ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000040b5a6 : ror byte ptr [rax - 0x3f], 1 ; loopne 0x40b610 ; add rax, rcx ; add rax, 0xa0 ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5d3 : ror byte ptr [rax - 0x3f], 1 ; loopne 0x40b610 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040e8df : ror byte ptr [rax - 0x3f], 1 ; loopne 0x40e942 ; add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e90f : ror byte ptr [rax - 0x3f], 1 ; loopne 0x40e942 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040f43d : ror byte ptr [rax - 0x3f], 1 ; loopne 0x40f44d ; add rax, rcx ; pop rbp ; ret
0x0000000000436fef : ror byte ptr [rax - 0x75], 0x45 ; call 0x48537ffa
0x0000000000432038 : ror byte ptr [rax - 0x75], 0x45 ; mov bl, dh ; movups xmm2, xmmword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e394
0x000000000040bc04 : ror byte ptr [rax - 0x75], 1 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041de73 : ror byte ptr [rax - 0x75], 1 ; jne 0x41de40 ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041e172 : ror byte ptr [rax - 0x75], 1 ; jne 0x41e13f ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041e1e9 : ror byte ptr [rax - 0x75], 1 ; jne 0x41e1b6 ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041e2cd : ror byte ptr [rax - 0x75], 1 ; jne 0x41e29a ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000040fbde : ror byte ptr [rax - 0x75], 1 ; push rbp ; fmul st(1) ; ret
0x0000000000412030 : ror byte ptr [rax - 0x75], 1 ; test dword ptr [rax + 0x48fffffe], ecx ; mov eax, dword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e39d
0x00000000004320a1 : ror byte ptr [rax - 0x77], 0xdf ; call 0x40e354
0x000000000040b5ca : ror byte ptr [rax - 0x77], 1 ; ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040e906 : ror byte ptr [rax - 0x77], 1 ; ror byte ptr [rax + 1], 1 ; ror byte ptr [rax + 1], 0xd0 ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040f587 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000409b3d : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000409ba1 : ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000409c05 : ror byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000409c68 : ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000409ccc : ror byte ptr [rax - 0x7d], cl ; ret 0x4805
0x0000000000409d30 : ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000000000409d93 : ror byte ptr [rax - 0x7d], cl ; ret 0x4807
0x0000000000409df7 : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000424799 : ror byte ptr [rax - 0x7d], cl ; ret 0x6670
0x000000000043642d : ror byte ptr [rax - 0x7d], cl ; ret 0x8b18
0x00000000004362ee : ror byte ptr [rax - 0x7d], cl ; ret 0x8b20
0x000000000043086a : ror byte ptr [rax - 0x7d], cl ; ret 0xf304
0x000000000040e498 : ror byte ptr [rax - 0x7d], cl ; ret 0xf31c
0x00000000004249ae : ror byte ptr [rax - 0x7d], cl ; ret 0xf36c
0x00000000004247e4 : ror byte ptr [rax - 0x7d], cl ; ret 0xf370
0x0000000000410262 : ror byte ptr [rax], 0x5d ; ret
0x000000000040b440 : ror byte ptr [rax], 0xf3 ; movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x80], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; add rax, 0xc ; movss xmm0, dword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x000000000040e8f7 : ror byte ptr [rax], 0xf3 ; movups xmm0, xmmword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040b458 : ror byte ptr [rbx + rsi*8], 0xf ; adc byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x84], xmm0 ; nop ; pop rbp ; ret
0x0000000000413635 : ror byte ptr [rbx - 0x74b713bb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041b02e : ror byte ptr [rbx - 0x74b717bb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000041b479 : ror byte ptr [rbx - 0x74b71bbb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x0000000000444ca0 : ror byte ptr [rbx - 0x7d850000], 0xfe ; jmp rax
0x00000000004464b8 : ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000430750 : ror byte ptr [rcx + 0x1680bfc6], 0x65 ; add al, ch ; ret
0x0000000000444c28 : ror byte ptr [rcx + 0x7eae0000], 0xfe ; jmp rax
0x000000000041d6ff : ror byte ptr [rcx - 0x74b7ebb0], 1 ; clc ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d74b ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d75b : ror byte ptr [rcx - 0x74b7ebb0], 1 ; clc ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7a1 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000412029 : ror byte ptr [rdi], 0x28 ; sal ebx, 1 ; subps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3a4
0x00000000004135e3 : ror byte ptr [rdi], 0x84 ; and eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041afdc : ror byte ptr [rdi], 0x84 ; and eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x74b717bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000041de86 : ror byte ptr [rdi], 0x84 ; lea eax, dword ptr [rbx] ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x1c], 0 ; cmp dword ptr [rbp - 0x1c], 9 ; jg 0x41e247 ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e12d ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000040429f : ror byte ptr [rdi], 0x84 ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x4042aa ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000414324 : ror byte ptr [rdi], 0x84 ; xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000040429a : ror byte ptr [rdi], 0x95 ; rol byte ptr [rax + rax*8 + 0x1ad840f], 0 ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x4042af ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000404e6a : ror byte ptr [rdi], 0xb6 ; xchg eax, ebp ; jmp 0x404e7a
0x000000000042c120 : ror byte ptr [rdi], 1 ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000443e68 : ror byte ptr [rdi], 1 ; add byte ptr [rbx], al ; iretd ; cld ; push rax ; add byte ptr [r8], r8b ; xor bh, cl ; cld ; call qword ptr [rax]
0x00000000004042a9 : ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x4042a0 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000444d58 : ror byte ptr [rsi - 0x78420000], 0xfe ; jmp rax
0x000000000041373b : ror byte ptr gs:[rbx - 0x74b713bb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041b23c : ror byte ptr gs:[rbx - 0x74b717bb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000041b4fb : ror byte ptr gs:[rbx - 0x74b71bbb], 1 ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x00000000004085d1 : ror cl, 1 ; ret
0x0000000000409023 : ror dword ptr [rax - 0x75], 0x45 ; call 0xffffffffbf03197b
0x0000000000409063 : ror dword ptr [rax - 0x75], 0x45 ; call 0xffffffffbf0319bb
0x00000000004090a3 : ror dword ptr [rax - 0x75], 0x45 ; call 0xffffffffbf0319fb
0x000000000040e063 : ror dword ptr [rax - 0x75], 0x45 ; cwde ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e097 : ror dword ptr [rax - 0x75], 0x45 ; cwde ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040bb79 : ror dword ptr [rax - 0x75], 0x45 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040bbb3 : ror dword ptr [rax - 0x75], 0x45 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000406d10 : ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000431628 : ror dword ptr [rax - 0x75], 0x55 ; clc ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004054f8 : ror dword ptr [rax - 0x77], 1 ; ret 0x59be
0x0000000000405646 : ror dword ptr [rax - 0x77], 1 ; ret 0x6dbe
0x00000000004374b8 : ror dword ptr [rdi], 0x28 ; retf ; call 0x403796
0x0000000000437008 : ror dword ptr [rdi], 0x28 ; retf ; call 0x40379e
0x000000000040c989 : ror dword ptr [rdi], 0x28 ; retf ; call 0x40395d
0x000000000042ca07 : ror dword ptr [rdx], 1 ; add byte ptr [rax], al ; leave ; ret
0x000000000042510f : sahf ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000410acc : sahf ; add al, byte ptr [rax] ; add cl, cl ; ret
0x0000000000428bc9 : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000445ae2 : sahf ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x00000000004192ae : sahf ; and byte ptr [rdx], al ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x00000000004438cc : sahf ; cld ; jmp qword ptr [rax]
0x00000000004387aa : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4387de ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438834 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043962a : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43965e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396b4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a34a : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43a37e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3d4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b00a : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43b03e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b094 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcca : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43bcfe ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd54 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9aa : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43c9de ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca34 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d76a : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43d79e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7f4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4ea : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43e51e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e574 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f92a : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43f95e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9b4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044074a : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x44077e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407d4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413ca : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4413fe ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441454 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044204a : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x44207e ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420d4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442faa : sahf ; enter -0x6a4f, 0x3e ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x442fde ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443034 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043883a : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x438810 ; mov esi, 0xbebfcc5c ; ret
0x00000000004396ba : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x439690 ; mov esi, 0xbebfcc5c ; ret
0x000000000043a3da : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43a3b0 ; mov esi, 0xbebfcc5c ; ret
0x000000000043b09a : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43b070 ; mov esi, 0xbebfcc5c ; ret
0x000000000043bd5a : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43bd30 ; mov esi, 0xbebfcc5c ; ret
0x000000000043ca3a : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43ca10 ; mov esi, 0xbebfcc5c ; ret
0x000000000043d7fa : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43d7d0 ; mov esi, 0xbebfcc5c ; ret
0x000000000043e57a : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43e550 ; mov esi, 0xbebfcc5c ; ret
0x000000000043f9ba : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x43f990 ; mov esi, 0xbebfcc5c ; ret
0x00000000004407da : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x4407b0 ; mov esi, 0xbebfcc5c ; ret
0x000000000044145a : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x441430 ; mov esi, 0xbebfcc5c ; ret
0x00000000004420da : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x4420b0 ; mov esi, 0xbebfcc5c ; ret
0x000000000044303a : sahf ; mov esi, 0xbea6b0b8 ; sbb eax, 0xe1beaf1d ; jnp 0x443010 ; mov esi, 0xbebfcc5c ; ret
0x0000000000427572 : sahf ; or al, 0 ; add bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x000000000042cd17 : sahf ; or al, byte ptr [rax] ; add cl, cl ; ret
0x000000000043757e : sahf ; sar ah, 0xff ; mov edi, 0x1701 ; call 0x40386b
0x000000000042742e : sahf ; sar ebp, -1 ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x180] ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x000000000042a624 : sahf ; sbb eax, 0xc9900000 ; ret
0x0000000000444515 : sahf ; std ; jmp rax
0x000000000041d3c8 : sal bl, 0xf ; adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x00000000004315a3 : sal bl, 0xf ; adc dword ptr [rax], eax ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000412054 : sal bl, 0xf ; pop rsp ; enter 0x280f, -0x3f ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e379
0x0000000000436feb : sal bl, 0xf ; sub al, al ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037bb
0x0000000000437466 : sal bl, 0xf ; sub al, al ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e8
0x0000000000432034 : sal bl, 0xf ; sub al, al ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e398
0x0000000000412025 : sal bl, 0xf ; sub al, al ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3a8
0x0000000000412050 : sal bl, 0xf ; sub al, al ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e37d
0x000000000043205c : sal bl, 0xf ; sub al, byte ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e370
0x00000000004374d5 : sal bl, 0xf ; sub al, byte ptr [rbp - 4] ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e9
0x000000000041d6ea : sal bl, 0xf ; sub al, dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d760 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d746 : sal bl, 0xf ; sub al, dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7b6 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db40 : sal bl, 0xf ; sub al, dl ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004314aa : sal bl, 1 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414548 : sal bl, 1 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e123 : sal bl, 1 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000431632 : sal bl, cl ; movups xmm1, xmmword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431662 : sal bl, cl ; movups xmm1, xmmword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000432095 : sal bl, cl ; movups xmm1, xmmword ptr [rip + 0x1030e] ; pxor xmm0, xmm0 ; mov rdi, rbx ; call 0x40e360
0x0000000000412099 : sal bl, cl ; movups xmm1, xmmword ptr [rip + 0x285e6] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e364
0x000000000041d4a2 : sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d582 : sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6a9 : sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d614 : sal bl, cl ; movups xmm2, xmmword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d991 : sal byte ptr [rbp + 0x1e], 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000040b73c : sal byte ptr [rbp + 0x27], 0x48 ; mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b72e : sal byte ptr [rbp + 0x35], 0x48 ; mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7a0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b6e0 : sal byte ptr [rbp + 0xb], 0x48 ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x0000000000437aff : sal byte ptr [rbp + 8], 0x48 ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000040b720 : sal byte ptr [rbx + rax*2 + 0x48], 0x8b ; clc ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7ae ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7ae ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041db04 : sal byte ptr [rbx + rcx*2 + 0x48], 0x8b ; clc ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d986 : sal byte ptr [rcx + rbp + 0x48], 0x8b ; clc ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9e0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000040b6d2 : sal byte ptr [rcx + rbx + 0x48], 0x8b ; clc ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b70c ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x0000000000403cb7 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x00000000004455d0 : sal byte ptr [rcx - 0x48d40000], 0xfe ; jmp rax
0x0000000000404bf4 : sal byte ptr [rdi + rax + 0x48], 0x83 ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; fimul dword ptr [rax - 0x75] ; clc ; add rax, 1 ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x18] ; leave ; ret
0x000000000042410c : sal byte ptr [rdi], 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041ffac : sal byte ptr [rdx + rcx - 0x48], 0 ; add byte ptr [rax], al ; add cl, ch ; mov eax, 0x8b000000 ; add eax, 0x251c4d ; lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x251c44], edx ; mov edx, dword ptr [rip + 0x251c3a] ; cdqe ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x42000e ; jmp rsp
0x0000000000445610 : sal byte ptr [rdx - 0x45e00000], 0xfe ; jmp rax
0x000000000044974c : sal byte ptr [rdx], 1 ; add byte ptr [rax], al ; add al, 0x47 ; hlt ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x0000000000443808 : sal byte ptr [rip + 0x46e10000], 1 ; cld ; push rax ; xor eax, 0x46f00000 ; cld ; call qword ptr [rax]
0x0000000000437adb : sal byte ptr [rsp + rbp + 0x48], 0x8b ; clc ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b3b ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b3b ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437aeb : sal byte ptr [rsp + rbx + 0x48], 0x8b ; clc ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b2b ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000404f6d : sal byte ptr [rsp + rdi - 0x18], 0x6b ; in eax, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000404ec9 : sal byte ptr [rsp + rdi - 0x18], 0xf ; out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000437235 : sal dl, 0xf ; pop rax ; ret 0xf66
0x00000000004387c9 : sal dword ptr [rcx], 1 ; jg 0x438815 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439649 : sal dword ptr [rcx], 1 ; jg 0x439695 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a369 : sal dword ptr [rcx], 1 ; jg 0x43a3b5 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b029 : sal dword ptr [rcx], 1 ; jg 0x43b075 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bce9 : sal dword ptr [rcx], 1 ; jg 0x43bd35 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9c9 : sal dword ptr [rcx], 1 ; jg 0x43ca15 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d789 : sal dword ptr [rcx], 1 ; jg 0x43d7d5 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e509 : sal dword ptr [rcx], 1 ; jg 0x43e555 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f949 : sal dword ptr [rcx], 1 ; jg 0x43f995 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440769 : sal dword ptr [rcx], 1 ; jg 0x4407b5 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413e9 : sal dword ptr [rcx], 1 ; jg 0x441435 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442069 : sal dword ptr [rcx], 1 ; jg 0x4420b5 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fc9 : sal dword ptr [rcx], 1 ; jg 0x443015 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000438371 : sal dword ptr [rcx], 1 ; mov esi, 0xbe20307f ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x000000000041da50 : sal dword ptr [rdi + 2], -0x15 ; adc cl, byte ptr [rax - 0x75] ; clc ; movss xmm0, dword ptr [rax + 0x38] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x0000000000417feb : sal dword ptr [rsi - 0x76b70002], 1 ; ret
0x000000000041da4f : sal dword ptr cs:[rdi + 2], -0x15 ; adc cl, byte ptr [rax - 0x75] ; clc ; movss xmm0, dword ptr [rax + 0x38] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 0x30], xmm0 ; nop ; pop rbp ; ret
0x0000000000411288 : sal ebx, 0xf ; adc byte ptr [rbp - 8], cl ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112b8 : sal ebx, 0xf ; adc byte ptr [rbp - 8], cl ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000043163f : sal ebx, 0xf ; adc byte ptr [rip + 0x100a0], cl ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x00000000004112a9 : sal ebx, 0xf ; adc byte ptr [rip + 0x28756], cl ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x0000000000411279 : sal ebx, 0xf ; adc byte ptr [rip + 0x28786], cl ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040e08b : sal ebx, 0xf ; adc byte ptr [rip + 0x2b8f8], cl ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e057 : sal ebx, 0xf ; adc byte ptr [rip + 0x2b92c], cl ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d4bc : sal ebx, 0xf ; adc dword ptr [rax + 0xc], eax ; nop ; pop rbp ; ret
0x000000000043164b : sal ebx, 0xf ; adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d681 : sal ebx, 0xf ; adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5ec : sal ebx, 0xf ; adc dword ptr [rax + 4], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d47a : sal ebx, 0xf ; adc dword ptr [rax + 8], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d55a : sal ebx, 0xf ; adc dword ptr [rax + 8], eax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041db4c : sal ebx, 0xf ; adc dword ptr [rax + 8], eax ; nop ; pop rbp ; ret
0x0000000000411291 : sal ebx, 0xf ; adc dword ptr [rbp - 8], eax ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112c1 : sal ebx, 0xf ; adc dword ptr [rbp - 8], eax ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000040e934 : sal ebx, 0xf ; adc dword ptr [rcx], eax ; nop ; pop rbp ; ret
0x000000000040ea19 : sal ebx, 0xf ; pop rcx ; ret 0xff3
0x000000000041d6fb : sal ebx, 0xf ; sub al, 0xd0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d74f ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d757 : sal ebx, 0xf ; sub al, 0xd0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7a5 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041202c : sal ebx, 1 ; subps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3a1
0x000000000044b838 : sal ecx, cl ; std ; jmp qword ptr [rsi]
0x00000000004314a9 : sal r11b, 1 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414547 : sal r11b, 1 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000040e122 : sal r11b, 1 ; movups xmmword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041b41c : salc ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040810e : salc ; add al, 0 ; add cl, cl ; ret
0x0000000000428856 : salc ; add byte ptr es:[rax], al ; nop ; leave ; ret
0x00000000004286b0 : salc ; and eax, 0xc9900000 ; ret
0x0000000000443f2d : salc ; cld ; call qword ptr [rax]
0x0000000000443f1d : salc ; cld ; call rax
0x0000000000443f15 : salc ; cld ; push qword ptr [rax + 0x54000052] ; salc ; cld ; call rax
0x00000000004380b2 : salc ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000444af4 : salc ; jbe 0x444af8 ; jmp rax
0x000000000044ef30 : salc ; jge 0x44ef34 ; call qword ptr [rdx]
0x0000000000438382 : salc ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x0000000000437b56 : salc ; mov edx, 0x28bffffc ; add byte ptr [rax], al ; add al, ch ; pop rsp ; mov ebx, 0x8948fffc ; ret
0x0000000000444da4 : salc ; mov esi, edi ; call qword ptr [rax]
0x000000000044340c : salc ; or ah, bh ; jmp rax
0x0000000000407305 : salc ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042c429 : salc ; or eax, 0x89480000 ; ret
0x0000000000404252 : salc ; or eax, 0x89480000 ; ret 0x458b
0x000000000044341c : salc ; or edi, esp ; jmp qword ptr [rax]
0x0000000000421de6 : salc ; sbb dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000044b2d1 : salc ; std ; jmp qword ptr [rdx]
0x0000000000420de6 : salc ; sub dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000043757f : sar ah, 0xff ; mov edi, 0x1701 ; call 0x40386a
0x0000000000449481 : sar ah, 0xff ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x449484 ; cld ; jmp qword ptr [rbx]
0x00000000004493b9 : sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x00000000004492d9 : sar ah, 0xff ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x00000000004369c1 : sar ah, 1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000040e563 : sar byte ptr [rax + 0x48], 0x89 ; ret 0xbe
0x00000000004438b8 : sar byte ptr [rax], 0 ; add byte ptr [rbx + rcx*2 - 4], cl ; jmp rax
0x0000000000437d75 : sar byte ptr [rbx], 0x40 ; add al, ch ; add bh, byte ptr [rax - 0x366f0004] ; ret
0x000000000041f6aa : sar byte ptr [rbx], 0x40 ; add al, ch ; int 0x3e
0x0000000000430a5a : sar byte ptr [rbx], 0x40 ; add al, ch ; sbb eax, 0x90fffd2b ; leave ; ret
0x000000000041d76b : sar byte ptr [rcx + 0xf], 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x00000000004438f8 : sar byte ptr [rcx], 0 ; add byte ptr [rsi], ah ; cld ; jmp rax
0x0000000000432247 : sar byte ptr [rdi + 0xc], 0xe8 ; outsb dx, byte ptr [rsi] ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431de2 : sar byte ptr [rdi + 0xc], 0xe8 ; rcr dword ptr [rax], cl ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432489 : sar byte ptr [rdi + 0xc], 0xe8 ; sub al, 0x12 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432084 : sar byte ptr [rdi + 0xc], 0xe8 ; xor dword ptr [rsi], edx ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000443938 : sar byte ptr [rdx], 0 ; add byte ptr [rax], dh ; cld ; jmp rax
0x00000000004439f8 : sar byte ptr [rip + 0x51f80000], 1 ; cld ; push rax ; cmp eax, 0x52250000 ; cld ; call qword ptr [rax]
0x0000000000443a38 : sar byte ptr [rsi], 1 ; add byte ptr [rax], al ; retf -0x3ad ; push rax ; add byte ptr ds:[rax], al ; in al, 0x53 ; cld ; call qword ptr [rax]
0x000000000042749e : sar ch, 0xff ; nop ; leave ; ret
0x000000000044a7b9 : sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a799 : sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000416677 : sar dh, 1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044564d : sar dh, cl ; call rax
0x0000000000416432 : sar dh, cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000445645 : sar dh, cl ; push qword ptr [rax - 0x41ffff4c] ; sar dh, cl ; call rax
0x000000000041f929 : sar dword ptr [rsi], 1 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000436fe6 : sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c0
0x0000000000437506 : sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b8
0x0000000000437496 : sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b8
0x0000000000406e64 : sar eax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d0b : sar eax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x00000000004152f2 : sar eax, 3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040504d : sar eax, 3 ; pop rbp ; ret
0x00000000004077ac : sar eax, 5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405cc5 : sar eax, 5 ; pop rbp ; ret
0x00000000004108a8 : sar eax, 6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000410c0b : sar eax, 6 ; pop rbp ; ret
0x000000000044460d : sar ebp, -1 ; and byte ptr [rax], dh ; add byte ptr [rdx - 0x3f], al ; std ; inc dword ptr [rax + 0x70] ; add byte ptr [rax], al ; ret 0xfffd
0x000000000042742f : sar ebp, -1 ; mov rdx, rax ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x180] ; sub rdx, rax ; mov rax, rdx ; leave ; ret
0x000000000044ab49 : sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044ab09 : sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044ab29 : sar ebp, 1 ; jmp qword ptr [rsi]
0x00000000004066ed : sar edi, 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004164ff : sar esi, 1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000403c5f : sar esi, 1 ; je 0x403c8c ; mov eax, 0 ; test rax, rax ; je 0x403c8c ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c4e : sar esi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c9d ; mov eax, 0 ; test rax, rax ; je 0x403c9d ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x000000000044565d : sar esi, cl ; call qword ptr [rax]
0x00000000004162f0 : sar esi, cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000445655 : sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x0000000000443cf5 : sar esp, -1 ; clc ; add byte ptr [r8], al ; movabs al, byte ptr [0xc000004a18fffcc1] ; sar esp, -1 ; cmp byte ptr [rdx], cl ; add dl, dl ; sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d94 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000443d05 : sar esp, -1 ; cmp byte ptr [rdx], cl ; add dl, dl ; sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d84 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000443d15 : sar esp, -1 ; js 0x443d74 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x00000000004375e8 : sar esp, -1 ; mov edi, 0x1700 ; call 0x40386a
0x0000000000443d0d : sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d7c ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000443cfd : sar esp, -1 ; sbb byte ptr [rdx], cl ; add al, al ; sar esp, -1 ; cmp byte ptr [rdx], cl ; add dl, dl ; sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d8c ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x0000000000436906 : sar esp, 1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000406e63 : sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d0a : sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x00000000004152f1 : sar rax, 3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040504c : sar rax, 3 ; pop rbp ; ret
0x00000000004077ab : sar rax, 5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405cc4 : sar rax, 5 ; pop rbp ; ret
0x00000000004108a7 : sar rax, 6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000410c0a : sar rax, 6 ; pop rbp ; ret
0x000000000044aae8 : sar rbp, 1 ; jmp qword ptr [rip]
0x0000000000403c5e : sar rsi, 1 ; je 0x403c8d ; mov eax, 0 ; test rax, rax ; je 0x403c8d ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c4d : sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c9e ; mov eax, 0 ; test rax, rax ; je 0x403c9e ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000416676 : sar sil, 1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044344d : sbb ah, bh ; call qword ptr [rax]
0x0000000000444234 : sbb ah, byte ptr [rax] ; std ; inc eax ; pop rdi ; add byte ptr [rax], al ; xor al, 0x20 ; std ; jmp rax
0x00000000004483a0 : sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483b2 ; call qword ptr [rdx]
0x0000000000446c90 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0x14 ; add byte ptr [rax], al ; pop rax ; adc bh, ah ; jmp qword ptr [rdx]
0x0000000000449b90 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0x43 ; add byte ptr [rax], al ; pop rax ; xor ch, bh ; call qword ptr [rcx]
0x000000000044a790 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x000000000044a890 : sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a875 ; std ; jmp qword ptr [rsi]
0x000000000044a7d0 : sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x00000000004458d0 : sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458e1 ; jmp rcx
0x0000000000447604 : sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x000000000044a7f0 : sbb al, 0 ; add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; jb 0x44a7d5 ; std ; jmp qword ptr [rax]
0x00000000004493b0 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044a7b0 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a8b0 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0x50 ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x000000000044b9b0 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0x61 ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x000000000044c8b0 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x00000000004464b0 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x00000000004461b0 : sbb al, 0 ; add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x0000000000446388 : sbb al, 0 ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x0000000000447ec8 : sbb al, 0 ; add byte ptr [rax], al ; cmp al, 0x26 ; add byte ptr [rax], al ; mov dl, 0x77 ; cld ; jmp qword ptr [rip]
0x00000000004492f0 : sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x0000000000445a68 : sbb al, 0 ; add byte ptr [rax], al ; fadd qword ptr [rcx] ; add byte ptr [rax], al ; loop 0x445a72 ; sti ; jmp qword ptr [rax]
0x000000000044a368 : sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x0000000000446668 : sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rip + 0xd8c0000] ; cld ; call qword ptr [rcx]
0x0000000000447e68 : sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rip + 0x77780000] ; cld ; jmp qword ptr [rdx]
0x000000000044bf68 : sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rsi] ; add dl, bh ; cmc ; std ; call qword ptr [rcx]
0x000000000044c480 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x000000000044ce80 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ce92 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x0000000000448280 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000446d70 : sbb al, 0 ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x000000000044a070 : sbb al, 0 ; add byte ptr [rax], al ; in al, 0x47 ; add byte ptr [rax], al ; xor al, 0xfd ; jmp rdx
0x000000000044a170 : sbb al, 0 ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x000000000044a870 : sbb al, 0 ; add byte ptr [rax], al ; in al, 0x4f ; add byte ptr [rax], al ; jle 0x44a855 ; std ; jmp qword ptr [rax]
0x000000000044ba70 : sbb al, 0 ; add byte ptr [rax], al ; in al, 0x61 ; add byte ptr [rax], al ; movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x000000000044bd70 : sbb al, 0 ; add byte ptr [rax], al ; in al, 0x64 ; add byte ptr [rax], al ; ret 0xfdf4
0x000000000044a278 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044c678 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; pop rax ; sti ; std ; call qword ptr [rcx]
0x000000000044d478 : sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4aa ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x00000000004498f8 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; push rsp ; sub al, 0xfd ; jmp qword ptr [rip]
0x00000000004493f8 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3f8 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d40a ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004475f8 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb eax, 0x19540000 ; cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x00000000004485f8 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5d0 : sbb al, 0 ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x0000000000449e00 : sbb al, 0 ; add byte ptr [rax], al ; je 0x449e56 ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x000000000044ab00 : sbb al, 0 ; add byte ptr [rax], al ; je 0x44ab83 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044ab00 : sbb al, 0 ; add byte ptr [rax], al ; je 0x44aba3 ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x0000000000447e08 : sbb al, 0 ; add byte ptr [rax], al ; jl 0x447e5e ; add byte ptr [rax], al ; xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044a238 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x0000000000449938 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; mov dh, 0x2c ; std ; jmp qword ptr [rsi]
0x00000000004458ac : sbb al, 0 ; add byte ptr [rax], al ; loopne 0x4458b9 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445905 ; jmp rcx
0x000000000044ab40 : sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x52 ; add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044c740 : sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x000000000044c248 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x1a000069 ; clc ; std ; call qword ptr [rcx]
0x0000000000446a48 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf48 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044a348 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x3a00004a ; std ; call qword ptr [rdx]
0x0000000000447d48 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d5a ; jmp qword ptr [rdx]
0x0000000000447e48 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e7a ; jmp qword ptr [rip]
0x000000000044ef48 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef5c ; call qword ptr [rbx]
0x0000000000445a48 : sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044a218 : sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x0000000000447618 : sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000446d30 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x000000000044c030 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044a830 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; js 0x44a815 ; std ; jmp qword ptr [rax]
0x000000000044a130 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; std ; call qword ptr [rax]
0x0000000000446230 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x000000000044b830 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x0000000000448d30 : sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x0000000000449498 : sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x44946d ; cld ; jmp qword ptr [rbx]
0x000000000044d498 : sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044b7f0 : sbb al, 0 ; add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; ret 0xfdf1
0x0000000000445ae8 : sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x000000000044c0d8 : sbb al, 0 ; add byte ptr [rax], al ; push -0x8f60000 ; std ; call qword ptr [rcx]
0x000000000044587c : sbb al, 0 ; add byte ptr [rax], al ; push rax ; jrcxz 0x4458dd ; ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x44590e ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458e9 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445935 ; jmp rcx
0x00000000004468e0 : sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044aae0 : sbb al, 0 ; add byte ptr [rax], al ; push rsp ; push rdx ; add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x0000000000447e28 : sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044ef28 : sbb al, 0 ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef3c ; call qword ptr [rdx]
0x0000000000447fa8 : sbb al, 0 ; add byte ptr [rax], al ; sbb al, 0x27 ; add byte ptr [rax], al ; pop rsi ; js 0x447fba ; call qword ptr [rdx]
0x0000000000445aa8 : sbb al, 0 ; add byte ptr [rax], al ; sbb al, 2 ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x00000000004470d8 : sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x00000000004475d8 : sbb al, 0 ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x00000000004475b8 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x000000000044c3b8 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x000000000044cdb8 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d4b8 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x000000000044eeb8 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x96 ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x00000000004462b8 : sbb al, 0 ; add byte ptr [rax], al ; sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x000000000044ba10 : sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx], ah ; add byte ptr [rbx - 0xe], cl ; std ; jmp qword ptr [rsi]
0x000000000044a810 : sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044d010 : sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x0000000000447b10 : sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x000000000044c310 : sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044e710 : sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi - 0x72740000], cl ; std ; call qword ptr [rip]
0x000000000044c420 : sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000044ab20 : sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000044bec0 : sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000041ffcb : sbb al, 0x25 ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41ffef ; jmp rsp
0x000000000041ffbc : sbb al, 0x25 ; add byte ptr [rbp + 0x15890150], cl ; sbb al, 0x25 ; add byte ptr [rbx + 0x251c3a15], cl ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fffe ; jmp rsp
0x000000000041ffbb : sbb al, 0x25 ; add byte ptr [rbp + 0x15890150], cl ; sbb al, 0x25 ; add byte ptr [rbx + 0x251c3a15], cl ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41ffff ; jmp rsp
0x000000000041ffc5 : sbb al, 0x25 ; add byte ptr [rbx + 0x251c3a15], cl ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fff5 ; jmp rsp
0x000000000041ffc4 : sbb al, 0x25 ; add byte ptr [rbx + 0x251c3a15], cl ; add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax - 0x220], dl ; cmp rax, rax ; je 0x41fff6 ; jmp rsp
0x0000000000447fac : sbb al, 0x27 ; add byte ptr [rax], al ; pop rsi ; js 0x447fb6 ; call qword ptr [rdx]
0x0000000000437aed : sbb al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b29 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000041ec99 : sbb al, 0x5d ; ret
0x000000000042c750 : sbb al, 0xc ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004319ca : sbb al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000004441a5 : sbb al, 0xfd ; push qword ptr [rax + 0x5d] ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444215 ; std ; call qword ptr [rax]
0x0000000000444195 : sbb al, 0xfd ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444225 ; std ; call qword ptr [rax]
0x00000000004219ee : sbb al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411a08 : sbb al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000044a524 : sbb al, 1 ; add byte ptr [rax], al ; add al, 0 ; clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x000000000041ecaa : sbb al, 1 ; nop ; pop rbp ; ret
0x0000000000445aac : sbb al, 2 ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x000000000040e09f : sbb al, 3 ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000414cdf : sbb al, 4 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000042ae0f : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000044cd7c : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cddd ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493bc : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3bc : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; jnp 0x44d41e ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d446 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004468a4 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000446a0c : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf0c : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf6e ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000447d34 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d6e ; jmp qword ptr [rdx]
0x0000000000443b8c : sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000407b98 : sbb al, byte ptr [rsi] ; add byte ptr [rax], al ; leave ; ret
0x0000000000443d1c : sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x000000000044c250 : sbb bh, al ; std ; call qword ptr [rcx]
0x0000000000411bd8 : sbb bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004458c6 : sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458eb ; jmp rcx
0x0000000000431bf0 : sbb bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421bd1 : sbb bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000041d7f6 : sbb bl, bpl ; adc byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x18] ; add eax, 0x168 ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x0000000000427fa6 : sbb bl, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000041d7f7 : sbb bl, ch ; adc byte ptr [rax - 0x75], cl ; clc ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x18] ; add eax, 0x168 ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x000000000041453f : sbb bl, dh ; movups xmm0, xmmword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414554 : sbb bl, dh ; movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041452b : sbb bl, dh ; movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000432025 : sbb bl, dh ; movups xmm1, xmmword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3a7
0x0000000000432054 : sbb bl, dh ; movups xmm1, xmmword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e378
0x000000000041453e : sbb bl, sil ; movups xmm0, xmmword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000414553 : sbb bl, sil ; movups xmm0, xmmword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x000000000041452a : sbb bl, sil ; movups xmm0, xmmword ptr [rax] ; mov rax, qword ptr [rbp - 0x28] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 4] ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000432024 : sbb bl, sil ; movups xmm1, xmmword ptr [rax + 4] ; mov eax, dword ptr [rbp - 0x18] ; add eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e3a8
0x0000000000432053 : sbb bl, sil ; movups xmm1, xmmword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e379
0x000000000040b752 : sbb byte ptr [rax + 0x19000000], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x0000000000443b5c : sbb byte ptr [rax + 0x4420fffc], al ; add byte ptr [rax], al ; jle 0x443b29 ; cld ; inc dword ptr [rax + 0x44] ; add byte ptr [rax], al ; rol byte ptr [rax + 0x4460fffc], 0 ; add byte ptr [rcx + rax*4], al ; cld ; inc dword ptr [rax + 0x48000044] ; cmp esp, 0x44a0ff ; add byte ptr [rax - 0x7f], ah ; cld ; inc eax ; add byte ptr [rax], r8b ; sbb al, byte ptr [rdx + 0x44e0fffc] ; add byte ptr [rax], al ; cmp al, byte ptr [rdx + 0x4500fffc] ; add byte ptr [rax], al ; mov ah, 0x82 ; cld ; jmp qword ptr [rax]
0x0000000000437af5 : sbb byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 8], 0x48 ; mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437ae5 : sbb byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rbx + 0x48], 0x8b ; clc ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b31 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437ae4 : sbb byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rbx + 0x48], 0x8b ; clc ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b32 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000411123 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; push rdx ; sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000041100c : sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041020b : sbb byte ptr [rax - 0x75], cl ; clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; nop ; pop rbp ; ret
0x0000000000410988 : sbb byte ptr [rax - 0x75], cl ; clc ; lea rdx, qword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x20], rdx ; nop ; pop rbp ; ret
0x0000000000425d4e : sbb byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000041111f : sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; push rdx ; sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411008 : sbb byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040b736 : sbb byte ptr [rax - 0x7b000000], 0xc0 ; jne 0x40b798 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041de4e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4818
0x000000000041e2a8 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000429ebc : sbb byte ptr [rax], ah ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000042b1d5 : sbb byte ptr [rax], al ; add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x0000000000425fbc : sbb byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042b233 : sbb byte ptr [rax], al ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000042b2bc : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042b2cb : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000435913 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x20], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x28], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x00000000004307bd : sbb byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004470dd : sbb byte ptr [rax], al ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x00000000004470b5 : sbb byte ptr [rax], al ; add cl, ch ; adc bh, ah ; push qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x000000000042b20e : sbb byte ptr [rax], al ; add cl, cl ; ret
0x000000000042b2bb : sbb byte ptr [rax], r8b ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004470dc : sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x00000000004100e2 : sbb byte ptr [rbp - 0x3d], bl ; push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x10] ; pop rbp ; ret
0x00000000004327c3 : sbb byte ptr [rbx + 0x41], 0x5c ; pop rbp ; ret
0x0000000000407399 : sbb byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000040539e : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000409eb5 : sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000409f1a : sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000409f7f : sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000409fe3 : sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000040a048 : sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4805
0x000000000040a0ad : sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000000000040a111 : sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4807
0x000000000040a176 : sbb byte ptr [rbx + 0x6348c455], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004183a4 : sbb byte ptr [rbx - 0x76b70002], dh ; ret
0x000000000040675c : sbb byte ptr [rbx], cl ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000044419c : sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x44421e ; std ; call qword ptr [rax]
0x00000000004458bd : sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458f4 ; jmp rcx
0x0000000000410cd0 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000420074 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000419b10 : sbb byte ptr [rdx], al ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x0000000000443d00 : sbb byte ptr [rdx], cl ; add al, al ; sar esp, -1 ; cmp byte ptr [rdx], cl ; add dl, dl ; sar esp, -1 ; pop rax ; add byte ptr [rax], al ; clc ; sar esp, -1 ; js 0x443d89 ; add byte ptr [rax], al ; sbb al, dl ; cld ; lcall ptr [rax + 0x4600004a] ; ret 0xfffc
0x000000000041d804 : sbb byte ptr [rip + 0x168], al ; mov dword ptr [rdx + 0x10], eax ; nop ; pop rbp ; ret
0x00000000004285cf : sbb byte ptr [rsi], ah ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000431dea : sbb ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000444155 : sbb ch, bh ; jmp qword ptr [rax]
0x0000000000405a09 : sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000421de7 : sbb dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000040b6d4 : sbb dword ptr [rax - 0x75], ecx ; clc ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b70a ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040499d : sbb dword ptr [rax - 0x77], ecx ; ret 0xd148
0x000000000042b135 : sbb dword ptr [rax], eax ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000425e55 : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042b03c : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042b04b : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x000000000040b757 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000042db83 : sbb dword ptr [rdi], eax ; add byte ptr [rax], al ; leave ; ret
0x00000000004099ab : sbb dword ptr [rsi - 0x76b70001], 0x858b48c2 ; push 0x48ffffff ; mov dword ptr [rax + 0x30], edx ; mov rax, qword ptr [rbp - 0x38] ; add rax, 0x50 ; mov rdi, rax ; call 0x405cc3
0x000000000042a351 : sbb dword ptr [rsi], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000042b134 : sbb dword ptr cs:[rax], eax ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004475bd : sbb eax, 0x17da0000 ; cld ; call qword ptr [rbx + 1]
0x00000000004475dd : sbb eax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x000000000044761d : sbb eax, 0x19500000 ; cld ; call qword ptr [rcx]
0x00000000004475fd : sbb eax, 0x19540000 ; cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000412e57 : sbb eax, 0x39480000 ; ret
0x0000000000429e5f : sbb eax, 0x48fffd9c ; add esp, 0x50 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004441b5 : sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444205 ; std ; call qword ptr [rax]
0x00000000004441bd : sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x4441fd ; std ; call qword ptr [rax]
0x00000000004441bc : sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x4441fe ; std ; call qword ptr [rax]
0x00000000004441c5 : sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x4441f5 ; std ; call qword ptr [rax]
0x000000000042a6dc : sbb eax, 0x89480000 ; ret 0x8b48
0x0000000000431919 : sbb eax, 0x8948fffd ; ret
0x0000000000421905 : sbb eax, 0x8948fffe ; ret
0x00000000004118fd : sbb eax, 0x8948ffff ; ret
0x0000000000430a5f : sbb eax, 0x90fffd2b ; leave ; ret
0x000000000042a625 : sbb eax, 0xc9900000 ; ret
0x00000000004317c7 : sbb eax, 0xc990fffd ; ret
0x0000000000438840 : sbb eax, 0xe1beaf1d ; jnp 0x43880a ; mov esi, 0xbebfcc5c ; ret
0x00000000004396c0 : sbb eax, 0xe1beaf1d ; jnp 0x43968a ; mov esi, 0xbebfcc5c ; ret
0x000000000043a3e0 : sbb eax, 0xe1beaf1d ; jnp 0x43a3aa ; mov esi, 0xbebfcc5c ; ret
0x000000000043b0a0 : sbb eax, 0xe1beaf1d ; jnp 0x43b06a ; mov esi, 0xbebfcc5c ; ret
0x000000000043bd60 : sbb eax, 0xe1beaf1d ; jnp 0x43bd2a ; mov esi, 0xbebfcc5c ; ret
0x000000000043ca40 : sbb eax, 0xe1beaf1d ; jnp 0x43ca0a ; mov esi, 0xbebfcc5c ; ret
0x000000000043d800 : sbb eax, 0xe1beaf1d ; jnp 0x43d7ca ; mov esi, 0xbebfcc5c ; ret
0x000000000043e580 : sbb eax, 0xe1beaf1d ; jnp 0x43e54a ; mov esi, 0xbebfcc5c ; ret
0x000000000043f9c0 : sbb eax, 0xe1beaf1d ; jnp 0x43f98a ; mov esi, 0xbebfcc5c ; ret
0x00000000004407e0 : sbb eax, 0xe1beaf1d ; jnp 0x4407aa ; mov esi, 0xbebfcc5c ; ret
0x0000000000441460 : sbb eax, 0xe1beaf1d ; jnp 0x44142a ; mov esi, 0xbebfcc5c ; ret
0x00000000004420e0 : sbb eax, 0xe1beaf1d ; jnp 0x4420aa ; mov esi, 0xbebfcc5c ; ret
0x0000000000443040 : sbb eax, 0xe1beaf1d ; jnp 0x44300a ; mov esi, 0xbebfcc5c ; ret
0x0000000000432c6f : sbb eax, 0xf0000f7 ; push rdi ; ret 0x8b48
0x000000000040c94f : sbb eax, 0xf0002d0 ; sub cl, dl ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403997
0x00000000004500df : sbb eax, dword ptr [rax] ; add bl, ah ; add dword ptr [rip - 0x8ffee72], eax ; add dword ptr [rip - 0x79ffef06], eax ; add al, byte ptr [rip - 0x52ffee72] ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000425cbf : sbb eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042ad17 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x00000000004500f6 : sbb eax, dword ptr [rax] ; add ch, ch ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000042e4e6 : sbb eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000040f6c7 : sbb eax, dword ptr [rip - 0x36700000] ; ret
0x0000000000431cf2 : sbb ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000044418d : sbb ebp, edi ; dec dword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; push rsi ; sbb al, 0xfd ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x44422d ; std ; call qword ptr [rax]
0x00000000004458a0 : sbb ecx, dword ptr [rdi + rax] ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458c5 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x445911 ; jmp rcx
0x00000000004245a3 : sbb ecx, esi ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000403c14 : sbb edi, dword ptr [rax] ; test rax, rax ; je 0x403c41 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000411b54 : sbb edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000421af1 : sbb edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000434691 : sbb esi, ebp ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000421d25 : sbb esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000044b958 : sbb esi, edx ; std ; jmp qword ptr [rsi]
0x0000000000447621 : sbb esp, edi ; call qword ptr [rcx]
0x00000000004475e1 : sbb esp, edi ; jmp qword ptr [rsi]
0x0000000000447601 : sbb esp, edi ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x0000000000431d6d : sbb r13, r15 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431c70 : sbb r15b, bpl ; dec dword ptr [rax - 0x77] ; ret
0x00000000004475dc : sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x000000000042ad54 : sbb rax, qword ptr [rax] ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x00000000004475e0 : sbb rsp, r15 ; jmp qword ptr [rsi]
0x0000000000445521 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add dword ptr [rcx - 0x51570002], esi ; add byte ptr [rax], al ; mov r9b, 0xfe ; call rax
0x0000000000445529 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; mov r9b, 0xfe ; call rax
0x0000000000444c2c : scasb al, byte ptr [rdi] ; jle 0x444c30 ; jmp rax
0x0000000000437c0e : scasb al, byte ptr [rdi] ; mov edx, 0x8948fffc ; ret
0x000000000040f809 : scasb al, byte ptr [rdi] ; nop ; leave ; ret
0x000000000042caac : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add cl, cl ; ret
0x000000000042b232 : scasb al, byte ptr [rdi] ; sbb byte ptr [rax], al ; add byte ptr [rax + 0x5590c3c9], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000410aa0 : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000443c2d : scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000041d38d : scasd eax, dword ptr [rdi] ; in al, dx ; add dword ptr [rax], eax ; movss dword ptr [rax + 0x4c], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x1eca6] ; movss dword ptr [rax + 0x50], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 0 ; mov rax, qword ptr [rbp - 8] ; pxor xmm0, xmm0 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0xc], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; pop rbp ; ret
0x000000000042ca82 : scasd eax, dword ptr [rdi] ; or al, byte ptr [rax] ; add cl, cl ; ret
0x000000000043701d : scasd eax, dword ptr [rdi] ; ret
0x0000000000406e76 : scasd eax, dword ptr [rdi] ; ret 0x8348
0x0000000000405df4 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000405d1d : scasd eax, dword ptr [rdi] ; ret 0xc35d
0x000000000040f605 : sete al ; pop rbp ; ret
0x000000000040f585 : setne al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040f4b5 : setne al ; pop rbp ; ret
0x000000000040429b : setne al ; test al, al ; je 0x404474 ; movzx eax, byte ptr [rbp - 0x30] ; movzx eax, al ; cmp eax, 0x10 ; ja 0x4042ae ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000444360 : shl byte ptr [rax + rax], 0xfe ; nop ; std ; jmp rax
0x0000000000443440 : shl byte ptr [rip + 0x17c10000], 1 ; cld ; push rax ; and eax, 0x181f0000 ; cld ; call qword ptr [rax]
0x0000000000412021 : shl byte ptr [rsi + 0xf], 0xef ; sal bl, 0xf ; sub al, al ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3ac
0x000000000041204c : shl byte ptr [rsi + 0xf], 0xef ; sal bl, 0xf ; sub al, al ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e381
0x000000000040465e : shl dword ptr [rax + rax], 1 ; add byte ptr [rax + 0x386e9], dl ; add byte ptr [rax - 0x75], cl ; add eax, 0x24d169 ; mov rdi, rax ; call 0x426f94
0x000000000040466c : shl dword ptr [rax + rax], 1 ; mov rdi, rax ; call 0x426f86
0x0000000000412046 : shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e387
0x000000000040b5a8 : shl eax, 2 ; add rax, rcx ; add rax, 0xa0 ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5d5 : shl eax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d7b : shl eax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040e8e1 : shl eax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e911 : shl eax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000407664 : shl eax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082cd : shl eax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000408a5e : shl eax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085c2 : shl eax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000415693 : shl eax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000040506a : shl edx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405ce2 : shl edx, 5 ; add rax, rdx ; pop rbp ; ret
0x000000000040b5a7 : shl rax, 2 ; add rax, rcx ; add rax, 0xa0 ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 0x10] ; movss xmm0, dword ptr [rax + 8] ; mov rcx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000040b5d4 : shl rax, 2 ; add rax, rcx ; add rax, 0xa4 ; movss dword ptr [rax], xmm0 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x15c], 1 ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x0000000000405d7a : shl rax, 2 ; add rax, rcx ; pop rbp ; ret
0x000000000040e8e0 : shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm1, dword ptr [rax] ; mov rax, qword ptr [rbp - 0x18] ; add rax, 8 ; movss xmm0, dword ptr [rax] ; mov rsi, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x1c] ; movsxd rdx, eax ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x000000000040e910 : shl rax, 2 ; add rax, rsi ; add rax, 0x104 ; movss xmm2, dword ptr [rax] ; subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000407663 : shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rax + 8], rdx ; mov rax, qword ptr [rbp - 0x38] ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004082cc : shl rax, 2 ; lea rdx, qword ptr [rcx + rax] ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000408a5d : shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004085c1 : shl rax, 2 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000415692 : shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000405069 : shl rdx, 3 ; add rax, rdx ; pop rbp ; ret
0x0000000000405ce1 : shl rdx, 5 ; add rax, rdx ; pop rbp ; ret
0x0000000000408f4d : shld edi, edi, -1 ; nop ; leave ; ret
0x0000000000435171 : shr al, 1 ; cmp edx, ebp ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000434e61 : shr al, 1 ; in eax, dx ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000413fbf : shr al, 1 ; jmp 0x413fcd
0x0000000000413fbf : shr al, 1 ; jmp 0x413ff4
0x0000000000413fbf : shr al, 1 ; jmp 0x41401b
0x0000000000434fe9 : shr al, 1 ; shr ebx, -4 ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000444580 : shr byte ptr [rbp], 0 ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x0000000000444510 : shr byte ptr [rbx], 0 ; add al, 0x9e ; std ; jmp rax
0x0000000000444498 : shr byte ptr [rcx], 1 ; add byte ptr [rdx - 0x65], dl ; std ; push rax ; imul eax, dword ptr [rax], 0xfd9b5e00 ; call qword ptr [rax]
0x00000000004444d8 : shr byte ptr [rdx], 1 ; add byte ptr [rsp + rbx*4 - 3], al ; push rax ; push 0 ; add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x0000000000443620 : shr byte ptr [rip + 0x37ec0000], 0xfc ; jmp rax
0x0000000000417478 : shr byte ptr [rsi - 1], cl ; dec dword ptr [rax - 0x77] ; pop rbp ; fdivr dword ptr [rdi + 0xc] ; call 0x4036cf
0x0000000000403c58 : shr eax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c93 ; mov eax, 0 ; test rax, rax ; je 0x403c93 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000434feb : shr ebx, -4 ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000042e63e : shr ecx, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000436fe1 : shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037c5
0x0000000000437501 : shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037bd
0x0000000000437491 : shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037bd
0x0000000000435170 : shr r8b, 1 ; cmp edx, ebp ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000434e60 : shr r8b, 1 ; in eax, dx ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000413fbe : shr r8b, 1 ; jmp 0x413fce
0x0000000000413fbe : shr r8b, 1 ; jmp 0x413ff5
0x0000000000413fbe : shr r8b, 1 ; jmp 0x41401c
0x0000000000434fe8 : shr r8b, 1 ; shr ebx, -4 ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000403c57 : shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403c94 ; mov eax, 0 ; test rax, rax ; je 0x403c94 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x000000000044a539 : sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x000000000042c1ce : sldt word ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000042c0fc : sldt word ptr [rax] ; leave ; ret
0x000000000040e3bf : sldt word ptr [rax] ; nop ; leave ; ret
0x000000000040f3cd : stc ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000040bb73 : stc ; fld qword ptr [rdx] ; add byte ptr [rdi], cl ; push rdi ; ror dword ptr [rax - 0x75], 0x45 ; enter -0x74b8, 0x40 ; xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000427615 : stc ; or eax, 0x89480000 ; ret 0x8b48
0x0000000000436f73 : stc ; ret 0xfffc
0x000000000044c3c1 : stc ; std ; call qword ptr [rcx]
0x0000000000423cce : stc ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c409 : stc ; std ; jmp qword ptr [rip]
0x000000000041b5b3 : stc ; test edi, esi ; dec dword ptr [rbx - 0x74b71bbb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x00000000004120bf : std ; adc eax, 0x8948ffff ; ret
0x000000000044a77a : std ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x4f ; add byte ptr [rax], al ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000437dca : std ; add ebp, eax ; lahf ; mov bl, 0xfc ; dec dword ptr [rax - 0x7b] ; in eax, dx ; je 0x437e1b ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004441ce : std ; call qword ptr [rax]
0x000000000044a372 : std ; call qword ptr [rbx]
0x0000000000449b9a : std ; call qword ptr [rcx]
0x000000000044a17a : std ; call qword ptr [rdx]
0x000000000044a15a : std ; call qword ptr [rip + 1]
0x000000000044e71a : std ; call qword ptr [rip]
0x00000000004441be : std ; call rax
0x000000000042c498 : std ; dec dword ptr [rax + 0x29] ; ret
0x0000000000424443 : std ; dec dword ptr [rax + 0x39] ; ret
0x000000000044437e : std ; dec dword ptr [rax + 0x65] ; add byte ptr [rax], al ; sub al, 0x92 ; std ; ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044438e : std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000042725b : std ; dec dword ptr [rax - 0x75] ; add byte ptr [rbx - 0x77cf3c0], cl ; add al, 0x77 ; mov rax, r8 ; mov rax, qword ptr [rax*8 + 0x43ef58] ; jmp rax
0x000000000042eb9b : std ; dec dword ptr [rax - 0x75] ; clc ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000042ded0 : std ; dec dword ptr [rax - 0x75] ; clc ; shl rax, 3 ; neg rax ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x000000000043226f : std ; dec dword ptr [rax - 0x77] ; pop rbp ; mov eax, 0x38bf ; add al, ch ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000004324b1 : std ; dec dword ptr [rax - 0x77] ; pop rbp ; mov eax, 0x38bf ; add al, ch ; call qword ptr [rcx]
0x0000000000431e0a : std ; dec dword ptr [rax - 0x77] ; pop rbp ; mov eax, 0x38bf ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004320a8 : std ; dec dword ptr [rax - 0x77] ; pop rbp ; mov eax, 0x38bf ; add al, ch ; or byte ptr [rsi], dl ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432242 : std ; dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; outsb dx, byte ptr [rsi] ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000431ddd : std ; dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; rcr dword ptr [rax], cl ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000432484 : std ; dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; sub al, 0x12 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043207f : std ; dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; xor dword ptr [rsi], edx ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423725 : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424f2f : std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000044418e : std ; dec dword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; push rsi ; sbb al, 0xfd ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x44422c ; std ; call qword ptr [rax]
0x000000000043285d : std ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x00000000004329c1 : std ; dec dword ptr [rbx - 0x74b717bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000424478 : std ; dec dword ptr [rdi] ; mov dh, 0 ; movsx eax, al ; sub eax, 0x21 ; cmp eax, 0x5d ; ja 0x424b43 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x000000000044439e : std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000042d59c : std ; dec ecx ; ret
0x00000000004324a7 : std ; inc byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; wait ; mov esi, 0x8948fffd ; pop rbp ; mov eax, 0x38bf ; add al, ch ; call qword ptr [rcx]
0x0000000000444616 : std ; inc dword ptr [rax + 0x70] ; add byte ptr [rax], al ; ret 0xfffd
0x0000000000444336 : std ; inc dword ptr [rax - 0x17ffff9c] ; mov bh, ch ; jmp qword ptr [rax - 0x4effff9c]
0x0000000000444626 : std ; inc dword ptr [rax - 0x77ffff90] ; ret 0xfffd
0x000000000044414e : std ; inc dword ptr [rax] ; pop rsp ; add byte ptr [rax], al ; adc al, 0x18 ; std ; jmp qword ptr [rax]
0x000000000044450e : std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x000000000044457e : std ; inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x0000000000444636 : std ; inc eax ; jo 0x444642 ; add ah, bl ; ret 0xfffd
0x0000000000444236 : std ; inc eax ; pop rdi ; add byte ptr [rax], al ; xor al, 0x20 ; std ; jmp rax
0x0000000000444136 : std ; jmp qword ptr [rax + 0x5200005b]
0x00000000004441ee : std ; jmp qword ptr [rax + 0xc00005e]
0x000000000044433e : std ; jmp qword ptr [rax - 0x4effff9c]
0x0000000000444156 : std ; jmp qword ptr [rax]
0x0000000000449e0a : std ; jmp qword ptr [rbx]
0x0000000000449d6a : std ; jmp qword ptr [rdx]
0x000000000044c40a : std ; jmp qword ptr [rip]
0x0000000000449942 : std ; jmp qword ptr [rsi]
0x0000000000444146 : std ; jmp rax
0x000000000044a07a : std ; jmp rdx
0x000000000044a54a : std ; jmp rsp
0x0000000000444506 : std ; lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x000000000044ce62 : std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44ceb0 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d3da : std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d428 ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x000000000044cf2a : std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x000000000044cd9a : std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044cff2 : std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x000000000044a522 : std ; lcall ptr [rcx + rax] ; add byte ptr [rax], al ; add al, 0 ; clc ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; add qword ptr [rbx], 3 ; sidt ptr [rdi + rax] ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000444386 : std ; ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444396 : std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x00000000004461b8 : std ; or esp, edi ; jmp qword ptr [rsi]
0x00000000004444ce : std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x00000000004441b6 : std ; push qword ptr [rax + 0x3600005d] ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444204 ; std ; call qword ptr [rax]
0x000000000044448e : std ; push qword ptr [rax + 0x42000069] ; wait ; std ; call rax
0x00000000004441a6 : std ; push qword ptr [rax + 0x5d] ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444214 ; std ; call qword ptr [rax]
0x00000000004444be : std ; push qword ptr [rax + 0x6a] ; add byte ptr [rax], al ; ficomp dword ptr [rbx + 0x6a90fffd] ; add byte ptr [rax], al ; hlt ; wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x00000000004444fe : std ; push qword ptr [rax + 0x6b] ; add byte ptr [rax], al ; jnp 0x4444bc ; std ; lcall ptr [rax - 0x2cffff95] ; popfq ; std ; inc eax ; imul eax, dword ptr [rax], 0 ; add al, 0x9e ; std ; jmp rax
0x0000000000444196 : std ; push qword ptr [rax] ; pop rbp ; add byte ptr [rax], al ; sbb byte ptr [rdi*8 + 0x5d50ff], 0 ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444224 ; std ; call qword ptr [rax]
0x00000000004443a6 : std ; push rax ; add byte ptr gs:[rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044449e : std ; push rax ; imul eax, dword ptr [rax], 0xfd9b5e00 ; call qword ptr [rax]
0x00000000004441c6 : std ; push rax ; pop rbp ; add byte ptr [rax], al ; jl 0x4441f4 ; std ; call qword ptr [rax]
0x00000000004444de : std ; push rax ; push 0 ; add byte ptr [rbp - 0x64], dh ; std ; call qword ptr [rax]
0x000000000042393e : std ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044d6a1 : std ; std ; jmp qword ptr [rbx]
0x000000000044cf51 : std ; std ; jmp qword ptr [rdx]
0x000000000044c8b9 : std ; std ; jmp qword ptr [rsi]
0x000000000044cff1 : std ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x0000000000445af2 : sti ; call qword ptr [rdx]
0x0000000000445ab2 : sti ; call qword ptr [rip]
0x000000000044593a : sti ; call rdi
0x000000000044c318 : sti ; clc ; std ; jmp qword ptr [rsi]
0x00000000004437ac : sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000040ba71 : sti ; fiadd word ptr [rdx] ; add byte ptr [rdi], cl ; push rdi ; ret 0x8b48
0x00000000004458b2 : sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458ff ; jmp rcx
0x0000000000444b2c : sti ; ja 0x444b38 ; inc eax ; test dword ptr [rax], eax ; add byte ptr [rdx], ah ; js 0x444b40 ; jmp rax
0x0000000000445a72 : sti ; jmp qword ptr [rax]
0x0000000000445ad2 : sti ; jmp qword ptr [rbx + 1]
0x0000000000445a52 : sti ; jmp qword ptr [rsi]
0x00000000004458da : sti ; jmp rcx
0x0000000000445882 : sti ; ljmp ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445908 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458e3 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44592f ; jmp rcx
0x00000000004185c1 : sti ; mov al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c681 : sti ; std ; call qword ptr [rcx]
0x000000000044c5d9 : sti ; std ; jmp qword ptr [rsi]
0x000000000041e1d0 : stosb byte ptr [rdi], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x75] ; push rbp ; mov eax, 0x42100ff3 ; xor bl, dh ; cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000424977 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8343], al ; inc dword ptr [rbx] ; jg 0x424a0c ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249cf
0x000000000044f8ef : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; mov ah, 0xc ; add eax, 0x1a0be ; ret
0x000000000044fb40 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; ret 0x555
0x00000000004255ea : stosb byte ptr [rdi], al ; and dword ptr [rax], eax ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000428792 : stosb byte ptr [rdi], al ; and eax, 0xc9900000 ; ret
0x0000000000406e73 : stosb byte ptr [rdi], al ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d1a : stosb byte ptr [rdi], al ; imul rax, rdx ; pop rbp ; ret
0x0000000000438360 : stosb byte ptr [rdi], al ; mov edx, 0x59d1be77 ; mov si, 0xe725 ; push rsp ; mov esi, 0xbe4363b2 ; or edx, ecx ; xor dword ptr [rsi - 0x41dfcf81], edi ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x000000000042cc17 : stosb byte ptr [rdi], al ; or al, byte ptr [rax] ; add cl, cl ; ret
0x0000000000412b82 : stosb byte ptr [rdi], al ; or bh, bh ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000437022 : stosb byte ptr [rdi], al ; ret
0x0000000000406e72 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d19 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; pop rbp ; ret
0x0000000000406e71 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d18 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; pop rbp ; ret
0x0000000000406e70 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d17 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; pop rbp ; ret
0x0000000000406e6f : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d16 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; pop rbp ; ret
0x0000000000406e6e : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d15 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; pop rbp ; ret
0x0000000000406e6d : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d14 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; pop rbp ; ret
0x00000000004468c0 : stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000450102 : stosd dword ptr [rdi], eax ; adc dword ptr [rax], eax ; nop ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000414e09 : stosd dword ptr [rdi], eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000446588 : stosd dword ptr [rdi], eax ; or al, 0xfc ; jmp qword ptr [rsi]
0x000000000042ca3b : stosd dword ptr [rdi], eax ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000406e6c : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405d13 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; imul rax, rdx ; pop rbp ; ret
0x0000000000432074 : sub ah, dl ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e358
0x0000000000448555 : sub al, 0 ; add byte ptr [rdx + rax*4], bh ; cld ; call qword ptr [rcx]
0x00000000004468bc : sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000432490 : sub al, 0x12 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000444134 : sub al, 0x17 ; std ; jmp qword ptr [rax + 0x5200005b]
0x000000000042ab36 : sub al, 0x1c ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004475bc : sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x0000000000435b75 : sub al, 0x25 ; add al, r13b ; ret 0xfcdd
0x000000000043088b : sub al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rip + 0xf54c] ; movss dword ptr [rax + 0x28], xmm0 ; nop ; pop rbp ; ret
0x0000000000437add : sub al, 0x48 ; mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b39 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b39 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000044a370 : sub al, 0x49 ; std ; call qword ptr [rbx]
0x0000000000447b18 : sub al, 0x54 ; cld ; call rax
0x000000000044c3bc : sub al, 0x6b ; add byte ptr [rax], al ; sub bh, cl ; std ; call qword ptr [rcx]
0x000000000044cdbc : sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044d4bc : sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x0000000000444384 : sub al, 0x92 ; std ; ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044eebc : sub al, 0x96 ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x000000000042a190 : sub al, 0x97 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004462bc : sub al, 0xa ; add byte ptr [rax], al ; push 0xa ; cld ; call qword ptr [rcx]
0x0000000000443c64 : sub al, 0xb2 ; cld ; jmp rax
0x000000000040e05c : sub al, 0xb9 ; add al, byte ptr [rax] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000041d6fe : sub al, 0xd0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d74c ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d75a : sub al, 0xd0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7a2 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041de72 : sub al, 0xd0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000449961 : sub al, 0xfd ; jmp qword ptr [rax]
0x0000000000449901 : sub al, 0xfd ; jmp qword ptr [rip]
0x0000000000449941 : sub al, 0xfd ; jmp qword ptr [rsi]
0x000000000040e04f : sub al, 3 ; add byte ptr [rax], al ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b92c] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3cc], xmm0 ; mov rax, qword ptr [rbp - 0x68] ; movss xmm1, dword ptr [rax + 0x3d4] ; mov rax, qword ptr [rbp - 0x68] ; movss xmm0, dword ptr [rax + 0x3f0] ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e11b : sub al, 3 ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x30] ; movss dword ptr [rax], xmm0 ; mov rax, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rax + 0x3f0] ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000436fee : sub al, al ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x44] ; movss xmm2, dword ptr [rip + 0xc3d3] ; divss xmm1, xmm2 ; subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b8
0x0000000000437469 : sub al, al ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e5
0x0000000000432037 : sub al, al ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x64] ; mulss xmm0, xmm2 ; movaps xmm3, xmm1 ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e395
0x0000000000412028 : sub al, al ; movaps xmm2, xmm1 ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3a5
0x0000000000412053 : sub al, al ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e37a
0x00000000004374f2 : sub al, bl ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037cc
0x0000000000437482 : sub al, bl ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037cc
0x0000000000445884 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 0x52], edi ; add byte ptr [rcx], al ; js 0x445906 ; add dword ptr [rbx], ebx ; or al, 7 ; or byte ptr [rax + 0x24000001], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; loopne 0x4458e1 ; sti ; inc dword ptr [rax + 0xa] ; add byte ptr [rax], al ; add byte ptr [rsi], cl ; adc byte ptr [rsi + 0xe], al ; sbb byte ptr [rdx + 0xf], cl ; or esi, dword ptr [rdi + 8] ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x44592d ; jmp rcx
0x0000000000443571 : sub al, byte ptr [rax] ; add byte ptr [rax], dh ; sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000443561 : sub al, byte ptr [rax] ; add byte ptr [rdx - 0x470003d6], ah ; sub al, byte ptr [rax] ; add byte ptr [rsi - 0x270003d6], bh ; sub al, byte ptr [rax] ; add byte ptr [rax], dh ; sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000443569 : sub al, byte ptr [rax] ; add byte ptr [rsi - 0x270003d6], bh ; sub al, byte ptr [rax] ; add byte ptr [rax], dh ; sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000443559 : sub al, byte ptr [rax] ; add byte ptr [rsi - 0x670003d6], al ; sub al, byte ptr [rax] ; add byte ptr [rdx - 0x470003d6], ah ; sub al, byte ptr [rax] ; add byte ptr [rsi - 0x270003d6], bh ; sub al, byte ptr [rax] ; add byte ptr [rax], dh ; sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x000000000043205f : sub al, byte ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e36d
0x00000000004374d8 : sub al, byte ptr [rbp - 4] ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x50] ; mulss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x48] ; movaps xmm3, xmm0 ; addss xmm3, xmm1 ; mov rax, qword ptr [rbp - 0x18] ; mov eax, dword ptr [rax + 0x3c] ; mov edx, eax ; shr edx, 0x1f ; add eax, edx ; sar eax, 1 ; pxor xmm1, xmm1 ; cvtsi2ss xmm1, eax ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037e6
0x0000000000407b6e : sub al, byte ptr [rsi] ; add byte ptr [rax], al ; leave ; ret
0x000000000041206a : sub al, cl ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e363
0x000000000041d6ed : sub al, dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; addss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; cmp eax, 0x167 ; jle 0x41d75d ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0 ; nop ; pop rbp ; ret
0x000000000041d749 : sub al, dl ; mov rdx, qword ptr [rbp - 8] ; movss xmm1, dword ptr [rdx + 0x48] ; subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7b3 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041db43 : sub al, dl ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000410e87 : sub bh, bh ; dec ecx ; ret
0x000000000044362c : sub bh, byte ptr [rax] ; cld ; inc dword ptr [rax] ; add byte ptr cs:[rax], al ; cmp spl, r15b ; jmp qword ptr [rax]
0x0000000000437b9e : sub bh, byte ptr [rbx - 2] ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; xchg byte ptr [rdx + 0x28bffffc], bh ; add al, byte ptr [rax] ; add al, ch ; or al, 0xbb ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000430c22 : sub bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c3c0 : sub bh, cl ; std ; call qword ptr [rcx]
0x00000000004320f8 : sub bh, dh ; inc dword ptr [rbx - 0x16fe17bb] ; imul edi, ebp, 0xcbfffff ; add byte ptr [rax], al ; add al, ch ; mov dl, 0x15 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004374ba : sub bl, cl ; call 0x403794
0x000000000043700a : sub bl, cl ; call 0x40379c
0x000000000040c98b : sub bl, cl ; call 0x40395b
0x0000000000432077 : sub bl, cl ; mov rdi, rbx ; call 0x40e355
0x000000000041c4c9 : sub byte ptr [rax + 0x38c48348], dl ; pop rbx ; pop rbp ; ret
0x000000000043089c : sub byte ptr [rax + 0x4855c35d], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 5], 1 ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 4] ; xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x0000000000411133 : sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004437a0 : sub byte ptr [rax + rax], dh ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000040f677 : sub byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x28], dl ; nop ; pop rbp ; ret
0x000000000041101c : sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000041112f : sub byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000411018 : sub byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x0000000000410223 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x5590c35d], dl ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 8] ; mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000435e3b : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x40], 0 ; nop ; leave ; ret
0x000000000043592b : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x30], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x0000000000444570 : sub byte ptr [rbp], 0 ; fsub dword ptr [rbp + 0x6da0fffd] ; add byte ptr [rax], al ; jp 0x44453b ; std ; inc eax ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmpsw word ptr [rsi], word ptr [rdi] ; std ; jmp rax
0x0000000000444378 : sub byte ptr [rbp], ah ; add byte ptr [rsi], al ; xchg eax, edx ; std ; dec dword ptr [rax + 0x65] ; add byte ptr [rax], al ; sub al, 0x92 ; std ; ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x00000000004072d8 : sub byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000404457 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000040aa2c : sub byte ptr [rbx + 0x6348d855], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040aa54 : sub byte ptr [rbx + 0x6348d855], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000040ed8c : sub byte ptr [rbx + 0x6348ec55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040ede2 : sub byte ptr [rbx + 0x6348ec55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000040dc8d : sub byte ptr [rbx + 0x6348f855], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040dcd8 : sub byte ptr [rbx + 0x6348f855], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000040c66f : sub byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040c652 : sub byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004291ac : sub byte ptr [rbx], ah ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000042ad92 : sub byte ptr [rbx], bl ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x0000000000408a4c : sub byte ptr [rdi - 0x74b70001], 0x55 ; clc ; mov rax, rdx ; add rax, rax ; add rax, rdx ; shl rax, 2 ; mov rdx, rax ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000437c04 : sub byte ptr [rdx + 0x60bffffc], bh ; add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; mov edx, 0x8948fffc ; ret
0x0000000000443610 : sub byte ptr [rip + 0x37900000], 0xfc ; jmp qword ptr [rax - 0x3affffd3]
0x000000000040f768 : sub byte ptr [rip - 0x36700000], al ; ret
0x0000000000445520 : sub byte ptr [rsi - 0x4eff0000], 0xfe ; ljmp ptr [rax + 0x4d0000ae] ; mov cl, 0xfe ; call rax
0x0000000000418892 : sub ch, byte ptr [rsi - 0x76b70002] ; ret
0x000000000041205a : sub cl, al ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e373
0x000000000043750e : sub cl, al ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbeb3] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b0
0x000000000043749e : sub cl, al ; mov rax, qword ptr [rbp - 0x18] ; movss xmm0, dword ptr [rax + 0x4c] ; movss xmm2, dword ptr [rip + 0xbf23] ; divss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037b0
0x000000000041d59e : sub cl, al ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d680 : sub cl, al ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d479 : sub cl, al ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000411287 : sub cl, al ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112b7 : sub cl, al ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x0000000000432047 : sub cl, bl ; addss xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x78] ; mov rax, qword ptr [rax + 0x18] ; movss xmm1, dword ptr [rax] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, dword ptr [rbp - 0x18] ; mov rax, qword ptr [rbp - 0x78] ; movss xmm2, dword ptr [rax + 0x60] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movaps xmm2, xmm4 ; movaps xmm1, xmm3 ; mov rdi, rbx ; call 0x40e385
0x000000000040c96e : sub cl, bl ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403978
0x000000000041202b : sub cl, dl ; subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3a2
0x000000000040c954 : sub cl, dl ; xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403992
0x0000000000420de7 : sub dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004458c8 : sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458e9 ; jmp rcx
0x0000000000412292 : sub dl, byte ptr [rdi + rdi*8] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000409073 : sub dword ptr [rax - 0x366f0001], ebp ; ret
0x000000000041d988 : sub dword ptr [rax - 0x75], ecx ; clc ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9de ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000448285 : sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x0000000000448265 : sub dword ptr [rax], eax ; add byte ptr [rbx + 0x7e], ch ; cld ; call qword ptr [rdx]
0x0000000000443531 : sub dword ptr [rax], eax ; add byte ptr [rcx + rbp + 0x29f0fffc], dl ; add byte ptr [rax], al ; mov al, 0x29 ; cld ; call qword ptr [rax]
0x0000000000443529 : sub dword ptr [rax], eax ; add byte ptr [rdx + 0x29], ch ; cld ; call rax
0x0000000000443521 : sub dword ptr [rax], eax ; add byte ptr [rdx], dh ; sub esp, edi ; push qword ptr [rax + 0x6a000029] ; sub esp, edi ; call rax
0x00000000004437b4 : sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000408fb3 : sub dword ptr [rcx - 0x366f0001], ebp ; ret
0x000000000042eab4 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; leave ; ret
0x0000000000404674 : sub dword ptr [rdx], eax ; add byte ptr [rdi], cl ; mov dh, 5 ; ret 0x24ce
0x0000000000420d41 : sub eax, 0x20 ; cmp eax, 0x5c ; ja 0x423d22 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43e980] ; jmp rax
0x0000000000424480 : sub eax, 0x21 ; cmp eax, 0x5d ; ja 0x424b3b ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43ec68] ; jmp rax
0x0000000000443611 : sub eax, 0x37900000 ; cld ; jmp qword ptr [rax - 0x3affffd3]
0x0000000000443619 : sub eax, 0x37c50000 ; cld ; inc eax ; sub eax, 0x37ec0000 ; cld ; jmp rax
0x0000000000443621 : sub eax, 0x37ec0000 ; cld ; jmp rax
0x0000000000443629 : sub eax, 0x382a0000 ; cld ; inc dword ptr [rax] ; add byte ptr cs:[rax], al ; cmp spl, r15b ; jmp qword ptr [rax]
0x0000000000424b76 : sub eax, 0x39480000 ; ret
0x000000000042914f : sub eax, 0x48fffda9 ; add esp, 0x50 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041208f : sub eax, 0x48ffff16 ; mov ebx, eax ; pxor xmm2, xmm2 ; movss xmm1, dword ptr [rip + 0x285e6] ; movss xmm0, dword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e36e
0x0000000000407c4f : sub eax, 0x48ffffbe ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000403c07 : sub eax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c4e ; mov eax, 0 ; test rax, rax ; je 0x403c4e ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x00000000004485fd : sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x0000000000403fbe : sub eax, 0xc0840003 ; nop ; leave ; ret
0x0000000000418557 : sub eax, 0xff30002 ; pop rsi ; ret 0x280f
0x000000000041859b : sub eax, 0xff30002 ; pop rsi ; ret 0xff3
0x0000000000424d5e : sub eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000443579 : sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000407cb1 : sub eax, dword ptr [rsi] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000430d03 : sub ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000430d76 : sub ebp, r15d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000406e5e : sub ebx, eax ; mov rax, rbx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004152ec : sub ebx, eax ; mov rax, rbx ; sar rax, 3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004077a6 : sub ebx, eax ; mov rax, rbx ; sar rax, 5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004108a2 : sub ebx, eax ; mov rax, rbx ; sar rax, 6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000044c5d8 : sub ebx, edi ; std ; jmp qword ptr [rsi]
0x0000000000420045 : sub ecx, dword ptr [rax - 0x77] ; ret
0x000000000040672b : sub ecx, dword ptr [rbx] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000430b04 : sub edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000410b1a : sub edi, edi ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000443575 : sub edi, esp ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x000000000044357d : sub edi, esp ; jmp qword ptr [rax]
0x0000000000427441 : sub edx, eax ; mov rax, rdx ; leave ; ret
0x0000000000405d05 : sub edx, eax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405047 : sub edx, eax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cbf : sub edx, eax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410c05 : sub edx, eax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000403c47 : sub esi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403ca4 ; mov eax, 0 ; test rax, rax ; je 0x403ca4 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000417f91 : sub esi, dword ptr [rdi - 0x76b70002] ; ret
0x0000000000420d6a : sub esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004327c1 : sub esp, -0x80 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000437e4d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000429e8b : sub esp, dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x10] ; leave ; ret
0x000000000044353d : sub esp, edi ; call qword ptr [rax]
0x000000000044352d : sub esp, edi ; call rax
0x0000000000443525 : sub esp, edi ; push qword ptr [rax + 0x6a000029] ; sub esp, edi ; call rax
0x00000000004320f7 : sub r15b, r14b ; inc dword ptr [rbx - 0x16fe17bb] ; imul edi, ebp, 0xcbfffff ; add byte ptr [rax], al ; add al, ch ; mov dl, 0x15 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000403c06 : sub rax, 0x651560 ; cmp rax, 0xe ; mov rbp, rsp ; jbe 0x403c4f ; mov eax, 0 ; test rax, rax ; je 0x403c4f ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000406e5d : sub rbx, rax ; mov rax, rbx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004152eb : sub rbx, rax ; mov rax, rbx ; sar rax, 3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004077a5 : sub rbx, rax ; mov rax, rbx ; sar rax, 5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004108a1 : sub rbx, rax ; mov rax, rbx ; sar rax, 6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000427440 : sub rdx, rax ; mov rax, rdx ; leave ; ret
0x0000000000405d04 : sub rdx, rax ; mov rax, rdx ; sar rax, 2 ; mov rdx, rax ; movabs rax, -0x5555555555555555 ; imul rax, rdx ; pop rbp ; ret
0x0000000000405046 : sub rdx, rax ; mov rax, rdx ; sar rax, 3 ; pop rbp ; ret
0x0000000000405cbe : sub rdx, rax ; mov rax, rdx ; sar rax, 5 ; pop rbp ; ret
0x0000000000410c04 : sub rdx, rax ; mov rax, rdx ; sar rax, 6 ; pop rbp ; ret
0x0000000000403c46 : sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403ca5 ; mov eax, 0 ; test rax, rax ; je 0x403ca5 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x00000000004327c0 : sub rsp, -0x80 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000437e4c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000041d755 : subps xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7a7 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000437006 : subps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a0
0x000000000040e922 : subps xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000412056 : subps xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e377
0x000000000041d59a : subps xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d67c : subps xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d475 : subps xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000411283 : subps xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112b3 : subps xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041202e : subps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e39f
0x000000000041d754 : subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7a8 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d753 : subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7a9 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x000000000041d752 : subss xmm0, xmm1 ; cvttss2si edx, xmm0 ; mov dword ptr [rax + 0x14], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov eax, dword ptr [rax + 0x14] ; test eax, eax ; jns 0x41d7aa ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000437005 : subss xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x4037a1
0x000000000040e921 : subss xmm0, xmm2 ; movss xmm2, dword ptr [rip + 0x2b05b] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rcx], xmm0 ; nop ; pop rbp ; ret
0x0000000000412055 : subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e378
0x000000000041d599 : subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d67b : subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d474 : subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000411282 : subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112b2 : subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041202d : subss xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e3a0
0x000000000042a29a : test al, 0x1e ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000443438 : test al, 0x25 ; add byte ptr [rax], al ; js 0x44345c ; cld ; call rax
0x00000000004437c0 : test al, 0x34 ; add byte ptr [rax], al ; jnp 0x443822 ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004437fc : test al, 0x46 ; cld ; push qword ptr [rax - 0x4cffffcb] ; cld ; call rax
0x0000000000443ed8 : test al, 0x51 ; add byte ptr [rax], al ; ret 0xfcd4
0x00000000004440b8 : test al, 0x59 ; add byte ptr [rax], al ; mov ah, 0xdf ; cld ; call rax
0x0000000000444398 : test al, 0x65 ; add byte ptr [rax], al ; test byte ptr [rdx + 0x65c8fffd], dl ; add byte ptr [rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444900 : test al, 0x7c ; add byte ptr [rax], al ; cmp dl, byte ptr [rbx - 2] ; call rax
0x0000000000448b50 : test al, 0x83 ; cld ; jmp qword ptr [rbx]
0x000000000042ca58 : test al, 0xa ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000445230 : test al, 0xa2 ; add byte ptr [rax], al ; ret
0x0000000000445528 : test al, 0xae ; add byte ptr [rax], al ; mov r9b, 0xfe ; call rax
0x0000000000427ab2 : test al, 0xd ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000418d7c : test al, 0xfe ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000414b3a : test al, 1 ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000405b3e : test al, 7 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000042d63e : test al, 8 ; add byte ptr [rax], al ; leave ; ret
0x000000000040588c : test al, 9 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040429e : test al, al ; je 0x404471 ; movzx eax, byte ptr [rbp - 0x30] ; movzx eax, al ; cmp eax, 0x10 ; ja 0x4042ab ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000040b6d1 : test al, al ; je 0x40b70d ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b70d ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b71f : test al, al ; je 0x40b7af ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7af ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7af ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041d985 : test al, al ; je 0x41d9e1 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9e1 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000041db03 : test al, al ; je 0x41dba3 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041de85 : test al, al ; je 0x41e248 ; mov dword ptr [rbp - 0x1c], 0 ; cmp dword ptr [rbp - 0x1c], 9 ; jg 0x41e248 ; cmp dword ptr [rbp - 0x1c], 8 ; ja 0x41e12e ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x0000000000403fc1 : test al, al ; nop ; leave ; ret
0x000000000041b6bc : test bh, dh ; dec dword ptr [rbx - 0x74b71bbb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x000000000044d480 : test bh, dh ; std ; jmp qword ptr [rbx]
0x00000000004247e1 : test byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0xf370
0x0000000000448dfc : test byte ptr [rax + rax], dh ; add al, bh ; xchg ah, bh ; call rbx
0x0000000000424a2b : test byte ptr [rax], 0 ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424ac0 ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a83
0x0000000000415498 : test byte ptr [rax], 0 ; add cl, cl ; ret
0x0000000000403c3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, 0x651560 ; push rbp ; sub rsi, 0x651560 ; sar rsi, 3 ; mov rbp, rsp ; mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x403cb1 ; mov eax, 0 ; test rax, rax ; je 0x403cb1 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000437dda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000403c2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000437e0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040b466 : test byte ptr [rax], al ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000444ae1 : test byte ptr [rax], al ; add byte ptr [rbx - 0x5f00018a], dl ; test byte ptr [rax], al ; add byte ptr [rdx - 0x3f00018a], bh ; test byte ptr [rax], al ; add dh, dl ; jbe 0x444b0b ; jmp rax
0x0000000000444af9 : test byte ptr [rax], al ; add byte ptr [rbx], cl ; ja 0x444b0b ; inc dword ptr [rax] ; test dword ptr [rax], eax ; add byte ptr [rdx], dh ; ja 0x444b13 ; jmp qword ptr [rax]
0x0000000000444ae9 : test byte ptr [rax], al ; add byte ptr [rdx - 0x3f00018a], bh ; test byte ptr [rax], al ; add dh, dl ; jbe 0x444b03 ; jmp rax
0x0000000000444ac1 : test byte ptr [rax], al ; add dh, ah ; jne 0x444acb ; jmp qword ptr [rax]
0x0000000000444af1 : test byte ptr [rax], al ; add dh, dl ; jbe 0x444afb ; jmp rax
0x00000000004481fc : test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x448206 ; call rdx
0x00000000004042a1 : test byte ptr [rbp + 0xf000001], ch ; mov dh, 0x45 ; ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x4042a8 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x00000000004135e5 : test byte ptr [rbx], ah ; add al, 0 ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041afde : test byte ptr [rbx], ah ; add al, 0 ; add byte ptr [rbx - 0x74b717bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x000000000041b429 : test byte ptr [rbx], bl ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x74b71bbb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x0000000000437de5 : test byte ptr [rcx + rcx*4 - 1], 0x41 ; call qword ptr [rsp + rbx*8]
0x0000000000415282 : test byte ptr [rcx], 0 ; add bl, ch ; add al, 0x48 ; mov eax, dword ptr [rbp - 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044ba14 : test byte ptr [rcx], ah ; add byte ptr [rbx - 0xe], cl ; std ; jmp qword ptr [rsi]
0x000000000041901e : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x74b71bbb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x000000000044a814 : test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044d014 : test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x000000000044439c : test byte ptr [rdx + 0x65c8fffd], dl ; add byte ptr [rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000447b14 : test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x000000000040b600 : test byte ptr [rdx], al ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; nop ; pop rbp ; ret
0x000000000040b61f : test byte ptr [rdx], al ; pop rsp ; add dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x000000000040b5ef : test byte ptr [rdx], al ; pop rsp ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; mov rdx, qword ptr [rbp - 8] ; mov eax, dword ptr [rbp - 0x14] ; cdqe ; mov byte ptr [rdx + rax + 0x16c], 1 ; nop ; pop rbp ; ret
0x000000000044c314 : test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x0000000000450113 : test byte ptr [rdx], dl ; add bh, bh ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004387b5 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x4387d3 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438829 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439635 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x439653 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396a9 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a355 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43a373 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3c9 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b015 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43b033 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b089 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcd5 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43bcf3 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd49 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9b5 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43c9d3 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca29 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d775 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43d793 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7e9 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4f5 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43e513 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e569 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f935 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x43f953 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9a9 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440755 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x440773 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407c9 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413d5 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x4413f3 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441449 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442055 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x442073 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420c9 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fb5 : test byte ptr [rsi + rdi + 0x3e77ba67], al ; rcr dword ptr [rcx + 0x66], 1 ; loop 0x442fd3 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443029 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000438a85 : test byte ptr [rsi + rdi*4 - 0x41884556], al ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x0000000000438a86 : test byte ptr [rsi - 0x41884556], bh ; rcr dword ptr [rcx + 0x66], 1 ; mov esi, 0xbe54e725 ; mov dl, 0x63 ; mov r14d, 0xbe31d10b ; ret 0x2030
0x000000000044e714 : test byte ptr [rsi - 0x72740000], cl ; std ; call qword ptr [rip]
0x0000000000418838 : test byte ptr [rsi - 0x76b70002], ch ; ret
0x00000000004079b6 : test byte ptr [rsi], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004387b6 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x4387d2 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438828 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000439636 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x439652 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396a8 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a356 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x43a372 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3c8 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b016 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x43b032 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b088 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcd6 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x43bcf2 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd48 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9b6 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x43c9d2 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca28 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d776 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x43d792 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7e8 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4f6 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x43e512 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e568 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f936 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x43f952 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9a8 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000440756 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x440772 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407c8 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413d6 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x4413f2 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441448 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442056 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x442072 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420c8 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fb6 : test byte ptr [rsi], bh ; mov edx, 0x59d13e77 ; loop 0x442fd2 ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443028 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044a8b8 : test dl, al ; std ; jmp qword ptr [rax]
0x000000000041205e : test dword ptr [rax + 0x48fffffe], ecx ; mov eax, dword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e36f
0x0000000000412033 : test dword ptr [rax + 0x48fffffe], ecx ; mov eax, dword ptr [rax + 0x10] ; movss xmm1, dword ptr [rax + 4] ; mov edx, dword ptr [rbp - 0x24] ; mov eax, edx ; shl eax, 2 ; add eax, edx ; add eax, eax ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, eax ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x178] ; mov rax, qword ptr [rax + 0x10] ; mov eax, dword ptr [rax] ; movaps xmm1, xmm0 ; mov dword ptr [rbp - 0x1a4], eax ; movss xmm0, dword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e39a
0x0000000000444b29 : test dword ptr [rax], eax ; add bl, bh ; ja 0x444b3b ; inc eax ; test dword ptr [rax], eax ; add byte ptr [rdx], ah ; js 0x444b43 ; jmp rax
0x0000000000444b31 : test dword ptr [rax], eax ; add byte ptr [rdx], ah ; js 0x444b3b ; jmp rax
0x0000000000444b01 : test dword ptr [rax], eax ; add byte ptr [rdx], dh ; ja 0x444b0b ; jmp qword ptr [rax]
0x0000000000424a4e : test dword ptr [rax], esi ; fadd qword ptr [rbx] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a60
0x00000000004249f4 : test dword ptr [rax], esp ; fadd qword ptr [rbx] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x88] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x88], 1 ; jmp 0x424a06
0x00000000004500e8 : test dword ptr [rcx], 0x10fa05 ; xchg byte ptr [rdx], al ; add eax, 0xad00118e ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000041bbc2 : test dword ptr [rcx], 0x580ff300 ; ret 0x2e0f
0x000000000041ef29 : test dword ptr [rdi + rdi*8 - 1], eax ; inc dword ptr [rbx - 0x78f0fb08] ; or al, 2 ; add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x000000000042498f : test dword ptr [rdi + rdi*8 - 1], edi ; dec dword ptr [rax - 0x68] ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249b7
0x000000000042497c : test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8343], al ; inc dword ptr [rbx] ; jg 0x424a07 ; mov eax, dword ptr [rbp - 0x84] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249ca
0x00000000004249ba : test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rcx] ; jmp 0x42498c
0x0000000000424a43 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x68] ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a6b
0x0000000000432237 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; or al, cl ; std ; dec dword ptr [rax - 0x77] ; pop rbp ; sar byte ptr [rdi + 0xc], 0xe8 ; outsb dx, byte ptr [rsi] ; adc al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424a30 : test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8b43], al ; inc dword ptr [rbx] ; jg 0x424abb ; mov eax, dword ptr [rbp - 0x8c] ; cdqe ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a7e
0x0000000000424a6e : test dword ptr [rdi + rdi*8 - 1], esi ; inc dword ptr [rcx] ; jmp 0x424a40
0x0000000000417f37 : test dword ptr [rdi - 0x76b70002], esi ; ret
0x000000000041209f : test dword ptr [rdx], eax ; add bl, dh ; movups xmm0, xmmword ptr [rip + 0x285de] ; mov rdi, rbx ; call 0x40e35e
0x00000000004120a7 : test dword ptr [rdx], eax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; pushfq ; ret 0xffff
0x0000000000411f4c : test dword ptr [rsi + rdi*8 - 1], ebx ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; cmc ; ret
0x0000000000411fe2 : test dword ptr [rsi + rdi*8 - 1], ebx ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; pop rdi ; ret
0x000000000041206d : test dword ptr [rsi + rdi*8 - 1], ebx ; push rbx ; movups xmm0, xmmword ptr [rbp - 0x1a4] ; mov rdi, rbx ; call 0x40e360
0x0000000000408251 : test eax, 0x48000004 ; mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 8], 0 ; mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000042afcf : test eax, 0x8948fffd ; ret
0x00000000004175c5 : test eax, 0x8948fffe ; ret
0x000000000042ac82 : test eax, 0x9000001b ; leave ; ret
0x000000000041eb93 : test eax, 0x90fffe4c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000445644 : test eax, 0xb0fffed2 ; mov ah, 0 ; add byte ptr [rsi - 0x2f00012e], bh ; mov bl, 0 ; add byte ptr [rsi], al ; sar esi, cl ; push rax ; mov bl, 0 ; add byte ptr [rdx], bl ; sar esi, cl ; call qword ptr [rax]
0x0000000000408fb4 : test eax, 0xc990ffff ; ret
0x0000000000403c1b : test eax, eax ; je 0x403c3a ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c69 : test eax, eax ; je 0x403c82 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403cb6 : test eax, eax ; je 0x403cb3 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000406cb8 : test eax, eax ; je 0x406ce2 ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x0000000000407006 : test eax, eax ; je 0x407030 ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x00000000004106fe : test eax, eax ; je 0x41078c ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x00000000004110fe : test eax, eax ; je 0x41116c ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000411167 : test eax, eax ; je 0x4111f5 ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000041514c : test eax, eax ; je 0x41516a ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000041cb84 : test eax, eax ; je 0x41cba2 ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042b27e : test eax, eax ; je 0x42b29c ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042b4fe : test eax, eax ; je 0x42b51c ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042b77e : test eax, eax ; je 0x42b79c ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042b9fe : test eax, eax ; je 0x42ba1c ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042bc7e : test eax, eax ; je 0x42bc9c ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042befe : test eax, eax ; je 0x42bf1c ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042c16c : test eax, eax ; je 0x42c18a ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042c3ec : test eax, eax ; je 0x42c40a ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000437aea : test eax, eax ; je 0x437b2c ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b2c ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437ada : test eax, eax ; je 0x437b3c ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x437b3c ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b3c ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000040b6df : test eax, eax ; jne 0x40b6ff ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b73b : test eax, eax ; jne 0x40b793 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b72d : test eax, eax ; jne 0x40b7a1 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7a1 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041d990 : test eax, eax ; jne 0x41d9d6 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x0000000000437afe : test eax, eax ; jne 0x437b18 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x000000000041d76a : test eax, eax ; jns 0x41d792 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov dword ptr [rax + 0x14], 0x167 ; nop ; pop rbp ; ret
0x0000000000404299 : test eax, eax ; setne al ; test al, al ; je 0x404476 ; movzx eax, byte ptr [rbp - 0x30] ; movzx eax, al ; cmp eax, 0x10 ; ja 0x4042b0 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x0000000000437dd2 : test ebp, ebp ; je 0x437e13 ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000444d1d : test edi, esi ; call rax
0x000000000041b5b4 : test edi, esi ; dec dword ptr [rbx - 0x74b71bbb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x0000000000444d15 : test edi, esi ; push qword ptr [rax - 0x35ffff73] ; test edi, esi ; call rax
0x0000000000444d25 : test edi, esi ; push rax ; lea eax, dword ptr [rax] ; add byte ptr [rax], ah ; xchg dh, bh ; call qword ptr [rax]
0x0000000000403c1a : test rax, rax ; je 0x403c3b ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403c68 : test rax, rax ; je 0x403c83 ; pop rbp ; mov edi, 0x651560 ; jmp rax
0x0000000000403cb5 : test rax, rax ; je 0x403cb4 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000406cb7 : test rax, rax ; je 0x406ce3 ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x0000000000407005 : test rax, rax ; je 0x407031 ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov edx, dword ptr [rdx + 8] ; mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x00000000004106fd : test rax, rax ; je 0x41078d ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x00000000004110fd : test rax, rax ; je 0x41116d ; mov rdx, qword ptr [rbp - 0x18] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rdx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rdx ; nop ; leave ; ret
0x0000000000411166 : test rax, rax ; je 0x4111f6 ; mov rdx, qword ptr [rbp - 0x10] ; mov rcx, qword ptr [rdx] ; mov qword ptr [rax], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rdx + 0x10] ; mov qword ptr [rax + 0x10], rcx ; mov rcx, qword ptr [rdx + 0x18] ; mov qword ptr [rax + 0x18], rcx ; mov rcx, qword ptr [rdx + 0x20] ; mov qword ptr [rax + 0x20], rcx ; mov rcx, qword ptr [rdx + 0x28] ; mov qword ptr [rax + 0x28], rcx ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rax + 0x30], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov qword ptr [rax + 0x38], rdx ; nop ; leave ; ret
0x000000000041514b : test rax, rax ; je 0x41516b ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000041cb83 : test rax, rax ; je 0x41cba3 ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042b27d : test rax, rax ; je 0x42b29d ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042b4fd : test rax, rax ; je 0x42b51d ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042b77d : test rax, rax ; je 0x42b79d ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042b9fd : test rax, rax ; je 0x42ba1d ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042bc7d : test rax, rax ; je 0x42bc9d ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042befd : test rax, rax ; je 0x42bf1d ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042c16b : test rax, rax ; je 0x42c18b ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x000000000042c3eb : test rax, rax ; je 0x42c40b ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000437ae9 : test rax, rax ; je 0x437b2d ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x437b2d ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437afd : test rax, rax ; jne 0x437b19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x39], 0 ; nop ; pop rbp ; ret
0x0000000000437dd1 : test rbp, rbp ; je 0x437e14 ; xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x00000000004458bf : ud2 ; ja 0x4458e7 ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458f2 ; jmp rcx
0x00000000004458be : ud2 ; ja 0x4458e8 ; add byte ptr [rax], 0x3f ; sbb bh, byte ptr [rbx] ; sub dh, byte ptr [rbx] ; and al, 0x22 ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458f3 ; jmp rcx
0x000000000041cb7f : vpaddd ymm7, ymm14, ymm7 ; test rax, rax ; je 0x41cba7 ; mov rdx, qword ptr [rbp - 0x18] ; mov rdx, qword ptr [rdx] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000443c05 : wait ; cld ; jmp qword ptr [rax]
0x00000000004324af : wait ; mov esi, 0x8948fffd ; pop rbp ; mov eax, 0x38bf ; add al, ch ; call qword ptr [rcx]
0x00000000004444a5 : wait ; std ; call qword ptr [rax]
0x0000000000444495 : wait ; std ; call rax
0x000000000042f0e1 : wait ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004444cd : wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x000000000044448d : wait ; std ; push qword ptr [rax + 0x42000069] ; wait ; std ; call rax
0x00000000004444bd : wait ; std ; push qword ptr [rax + 0x6a] ; add byte ptr [rax], al ; ficomp dword ptr [rbx + 0x6a90fffd] ; add byte ptr [rax], al ; hlt ; wait ; std ; push qword ptr [rax + 0x200006a] ; pushfq ; std ; call rax
0x000000000044449d : wait ; std ; push rax ; imul eax, dword ptr [rax], 0xfd9b5e00 ; call qword ptr [rax]
0x0000000000430c21 : wait ; sub bh, ch ; dec dword ptr [rax - 0x77] ; ret
0x0000000000448e01 : xchg ah, bh ; call rbx
0x0000000000444b79 : xchg byte ptr [rax], al ; add ah, cl ; jns 0x444b8b ; inc dword ptr [rax] ; xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444b93 ; jmp qword ptr [rax]
0x0000000000444b71 : xchg byte ptr [rax], al ; add byte ptr [rsi - 0x1f000187], cl ; xchg byte ptr [rax], al ; add ah, cl ; jns 0x444b93 ; inc dword ptr [rax] ; xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444b9b ; jmp qword ptr [rax]
0x0000000000404664 : xchg byte ptr [rbx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x24d169] ; mov rdi, rax ; call 0x426f8e
0x000000000042c89a : xchg byte ptr [rbx], cl ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000041127e : xchg byte ptr [rdi + 0xff30002], al ; pop rsp ; enter 0x280f, -0x3f ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x000000000041e3f8 : xchg byte ptr [rdi + 1], dh ; add byte ptr [rax + 0x48c48348], dl ; pop rbx ; pop rbp ; ret
0x000000000042db02 : xchg byte ptr [rdi], al ; add byte ptr [rax], al ; leave ; ret
0x0000000000437ba6 : xchg byte ptr [rdx + 0x28bffffc], bh ; add al, byte ptr [rax] ; add al, ch ; or al, 0xbb ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000004500ee : xchg byte ptr [rdx], al ; add eax, 0xad00118e ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; in eax, dx ; add al, byte ptr [rip - 0x7effee41] ; add eax, dword ptr [rip - 0x6fffee55] ; add eax, dword ptr [rip - 0x2dffee41] ; add eax, dword ptr [rip + 0x3e10000] ; add eax, 0xff001284 ; add esi, dword ptr [rip - 0x37ffee10] ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x000000000044a164 : xchg byte ptr [rdx], al ; or eax, 0x1100306 ; or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x48 ; add byte ptr [rax], al ; cmp ch, bh ; call qword ptr [rdx]
0x00000000004475cc : xchg byte ptr [rdx], al ; or eax, 0x18e0306 ; or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb rax, 0x194e0000 ; cld ; jmp qword ptr [rsi]
0x0000000000445adc : xchg byte ptr [rdx], al ; or eax, 0x19e0306 ; or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 2], bl ; sti ; call qword ptr [rdx]
0x0000000000445924 : xchg byte ptr [rdx], al ; or eax, 0x2b90306 ; or al, 7 ; or byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx + rbp*8 - 5], cl ; call rdi
0x000000000044ef14 : xchg byte ptr [rdx], al ; or eax, 0x3834506 ; add ecx, edx ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pushfq ; xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef50 ; call qword ptr [rdx]
0x000000000044a204 : xchg byte ptr [rdx], al ; or eax, 0x3834506 ; add esp, dword ptr [rax + 0x8070c07] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx], cs ; add byte ptr [rax], bh ; std ; jmp qword ptr [rsi]
0x000000000044a530 : xchg byte ptr [rdx], al ; or eax, 0x3834806 ; add ecx, dword ptr [rdi] ; add dword ptr [rdi + rax], ecx ; or byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, cl ; add byte ptr [r8], al ; xor al, 0x5b ; std ; jmp rsp
0x0000000000445a34 : xchg byte ptr [rdx], al ; or eax, 0x3834806 ; add esp, dword ptr [rbp + 0x8070c03] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xdc000001 ; cmc ; sti ; jmp qword ptr [rsi]
0x000000000044ce6c : xchg byte ptr [rdx], al ; or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; jne 0x44cea6 ; add dh, ch ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493e4 : xchg byte ptr [rdx], al ; or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3e4 : xchg byte ptr [rdx], al ; or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d41e ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x0000000000446a34 : xchg byte ptr [rdx], al ; or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf34 : xchg byte ptr [rdx], al ; or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x00000000004468cc : xchg byte ptr [rdx], al ; or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x000000000044cda4 : xchg byte ptr [rdx], al ; or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x000000000044cffc : xchg byte ptr [rdx], al ; or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rsi - 3], bl ; std ; jmp qword ptr [rdx]
0x00000000004470c4 : xchg byte ptr [rdx], al ; or eax, 0x38c4706 ; add dword ptr [rdx + rax], 0x67 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb byte ptr [rax], r8b ; add byte ptr [rbx + rdx], dh ; cld ; jmp qword ptr [rsi]
0x0000000000448e10 : xchg byte ptr [rdx], al ; or eax, 0x38c4a06 ; add dword ptr [rbx + rax], -0x3c ; adc eax, 0x2408070c ; add byte ptr [rax], al ; add byte ptr [rsp + rsi - 0x635c0000], ch ; cld ; jmp rsp
0x0000000000449758 : xchg byte ptr [rdx], al ; or eax, 0x38c4a06 ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x0000000000447b04 : xchg byte ptr [rdx], al ; or eax, 0x3f30306 ; or al, 7 ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ah ; add byte ptr [rax], al ; sub al, 0x54 ; cld ; call rax
0x0000000000446d64 : xchg byte ptr [rdx], al ; or eax, 0x70c4606 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x14 ; add byte ptr [rax], al ; push rdx ; adc bh, ah ; jmp qword ptr [rbx]
0x0000000000449df4 : xchg byte ptr [rdx], al ; or eax, 0x70c4606 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x449e62 ; add byte ptr [rax], al ; xor ebp, r15d ; jmp qword ptr [rbx]
0x0000000000446d24 : xchg byte ptr [rdx], al ; or eax, 0x70c4606 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add byte ptr [rdx + 0x12], ah ; cld ; jmp qword ptr [rbx]
0x000000000044948c : xchg byte ptr [rdx], al ; or eax, 0x70c4606 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add byte ptr [rax], al ; jbe 0x449479 ; cld ; jmp qword ptr [rbx]
0x000000000044647c : xchg byte ptr [rdx], al ; or eax, 0x70c4906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add byte ptr [rbx + rcx + 0x4cfffc], bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; add dword ptr [r11], 2 ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; call qword ptr [rcx]
0x0000000000448394 : xchg byte ptr [rdx], al ; or eax, 0x70c4906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0x2b ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jle 0x4483be ; call qword ptr [rdx]
0x00000000004493a4 : xchg byte ptr [rdx], al ; or eax, 0x70c4a06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x3b ; add byte ptr [rax], al ; push rdx ; sar ah, 0xff ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rbp ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d46c : xchg byte ptr [rdx], al ; or eax, 0x70c4a06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; jnp 0x44d4b6 ; add byte ptr [rsi + rdi*8 + 0x23fffd], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rsi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x0000000000447e3c : xchg byte ptr [rdx], al ; or eax, 0x70c4c06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e86 ; jmp qword ptr [rip]
0x000000000044a35c : xchg byte ptr [rdx], al ; or eax, 0x70c4d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rcx + rcx*2], ch ; std ; call qword ptr [rbx]
0x0000000000448274 : xchg byte ptr [rdx], al ; or eax, 0x70c4d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sub dword ptr [rax], eax ; add byte ptr [rbp + 0x7e], bl ; cld ; call qword ptr [rdx]
0x000000000044ef3c : xchg byte ptr [rdx], al ; or eax, 0x70c4d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0xc8000096 ; jge 0x44ef68 ; call qword ptr [rbx]
0x000000000044cd84 : xchg byte ptr [rdx], al ; or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; add al, 0x75 ; add byte ptr [rax], al ; jne 0x44cdd5 ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x75 ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; std ; jmp qword ptr [rdx]
0x00000000004493c4 : xchg byte ptr [rdx], al ; or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], cl ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax + rax*8 - 4], bh ; jmp qword ptr [rdx]
0x000000000044d3c4 : xchg byte ptr [rdx], al ; or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; jnp 0x44d416 ; add byte ptr [rbp - 2], al ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jnp 0x44d43e ; add byte ptr [rsi - 2], dh ; std ; jmp qword ptr [rdx]
0x00000000004468ac : xchg byte ptr [rdx], al ; or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; sub al, 0x10 ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; adc byte ptr [rax], al ; add ah, bl ; adc ah, bh ; jmp qword ptr [rdx]
0x0000000000446a14 : xchg byte ptr [rdx], al ; or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x000000000044cf14 : xchg byte ptr [rdx], al ; or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; jbe 0x44cf66 ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000447d3c : xchg byte ptr [rdx], al ; or eax, 0x70c5506 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000024 ; ja 0x447d66 ; jmp qword ptr [rdx]
0x000000000044760c : xchg byte ptr [rdx], al ; or eax, 0x70c5706 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x000000000044a884 : xchg byte ptr [rdx], al ; or eax, 0x70c5b06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add al, 0x50 ; add byte ptr [rax], al ; jle 0x44a881 ; std ; jmp qword ptr [rsi]
0x000000000044a7c4 : xchg byte ptr [rdx], al ; or eax, 0x70c5b06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [r8], r8b ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rsi]
0x0000000000447e1c : xchg byte ptr [rdx], al ; or eax, 0x70c5b06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000044a804 : xchg byte ptr [rdx], al ; or eax, 0x70c5b06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdi], cl ; add byte ptr [rdx - 0x30], dh ; std ; jmp qword ptr [rsi]
0x000000000044d48c : xchg byte ptr [rdx], al ; or eax, 0x70c5e06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; or al, 0x7c ; add byte ptr [rax], al ; mov dh, bh ; std ; jmp qword ptr [rbx]
0x000000000044d4ac : xchg byte ptr [rdx], al ; or eax, 0x70c5e06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x7c ; add byte ptr [rax], al ; mov esi, dr1 ; std ; jmp qword ptr [rbx]
0x0000000000447e5c : xchg byte ptr [rdx], al ; or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rip + 0x77780000] ; cld ; jmp qword ptr [rdx]
0x000000000044aaf4 : xchg byte ptr [rdx], al ; or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44ab8f ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044aaf4 : xchg byte ptr [rdx], al ; or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; je 0x44abaf ; add byte ptr [rax], al ; push rdx ; sar ebp, 1 ; jmp qword ptr [rip]
0x000000000044aad4 : xchg byte ptr [rdx], al ; or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; push rdx ; add byte ptr [rax], al ; sar rbp, 1 ; jmp qword ptr [rip]
0x000000000044c414 : xchg byte ptr [rdx], al ; or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000044ab14 : xchg byte ptr [rdx], al ; or eax, 0x70c6006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x000000000044a7e4 : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; jb 0x44a7e1 ; std ; jmp qword ptr [rax]
0x000000000044a7a4 : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sar ch, 1 ; jmp qword ptr [rax]
0x000000000044a8a4 : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x50 ; add byte ptr [rax], al ; test dl, al ; std ; jmp qword ptr [rax]
0x0000000000445a5c : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; fadd qword ptr [rcx] ; add byte ptr [rax], al ; loop 0x445a7e ; sti ; jmp qword ptr [rax]
0x000000000044a864 : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x4f ; add byte ptr [rax], al ; jle 0x44a861 ; std ; jmp qword ptr [rax]
0x000000000044bd64 : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x64 ; add byte ptr [rax], al ; ret 0xfdf4
0x000000000044a26c : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, dx ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x00000000004475ec : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sbb eax, 0x19540000 ; cld ; lcall ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; push rdi ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov word ptr [rip + 0x19500000], ds ; cld ; call qword ptr [rcx]
0x000000000044a22c : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; std ; jmp qword ptr [rax]
0x000000000044ab34 : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x52 ; add byte ptr [rax], al ; pop rsi ; sar ebp, 1 ; jmp qword ptr [rax]
0x000000000044a824 : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; js 0x44a821 ; std ; jmp qword ptr [rax]
0x000000000044b7e4 : xchg byte ptr [rdx], al ; or eax, 0x70c6106 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; ret 0xfdf1
0x00000000004481ec : xchg byte ptr [rdx], al ; or eax, 0x70c6906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test byte ptr [rax], ch ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x448216 ; call rdx
0x000000000044c8a4 : xchg byte ptr [rdx], al ; or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x000000000044637c : xchg byte ptr [rdx], al ; or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x00000000004492e4 : xchg byte ptr [rdx], al ; or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x000000000044c474 : xchg byte ptr [rdx], al ; or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x00000000004485ec : xchg byte ptr [rdx], al ; or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5c4 : xchg byte ptr [rdx], al ; or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x000000000044c734 : xchg byte ptr [rdx], al ; or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x000000000044c024 : xchg byte ptr [rdx], al ; or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044c304 : xchg byte ptr [rdx], al ; or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044beb4 : xchg byte ptr [rdx], al ; or eax, 0x70c6d06 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000044b9a4 : xchg byte ptr [rdx], al ; or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x61 ; add byte ptr [rax], al ; xor esi, edx ; std ; jmp qword ptr [rsi]
0x00000000004461a4 : xchg byte ptr [rdx], al ; or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 9 ; add byte ptr [rax], al ; std ; or esp, edi ; jmp qword ptr [rsi]
0x000000000044ba64 : xchg byte ptr [rdx], al ; or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; in al, 0x61 ; add byte ptr [rax], al ; movsxd rsi, edx ; std ; jmp qword ptr [rsi]
0x0000000000446224 : xchg byte ptr [rdx], al ; or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or dword ptr [rax], eax ; add byte ptr [rbx], dh ; or bh, ah ; jmp qword ptr [rsi]
0x000000000044b824 : xchg byte ptr [rdx], al ; or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; sal ecx, cl ; std ; jmp qword ptr [rsi]
0x000000000044ba04 : xchg byte ptr [rdx], al ; or eax, 0x70c7006 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx], ah ; add byte ptr [rbx - 0xe], cl ; std ; jmp qword ptr [rsi]
0x0000000000448d24 : xchg byte ptr [rdx], al ; or eax, 0x70c7906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0 ; add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x0000000000445a9c : xchg byte ptr [rdx], al ; or eax, 0x70c7906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sbb al, 2 ; add byte ptr [rax], al ; cmc ; sti ; call qword ptr [rip]
0x000000000044eeac : xchg byte ptr [rdx], al ; or eax, 0x70c7906 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; sub al, 0x96 ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x000000000042ccbc : xchg byte ptr [rdx], cl ; add byte ptr [rax], al ; leave ; ret
0x0000000000444335 : xchg ch, bh ; inc dword ptr [rax - 0x17ffff9c] ; mov bh, ch ; jmp qword ptr [rax - 0x4effff9c]
0x0000000000424536 : xchg cl, dh ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000444d2d : xchg dh, bh ; call qword ptr [rax]
0x000000000041b530 : xchg dh, bh ; dec dword ptr [rbx - 0x74b71bbb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x000000000041dea3 : xchg dword ptr [rax + 2], ebx ; add byte ptr [rax], al ; mov eax, dword ptr [rbp - 0x1c] ; mov rax, qword ptr [rax*8 + 0x43bfe8] ; jmp rax
0x000000000044f75d : xchg dword ptr [rax + rax], ecx ; ret 0x508
0x0000000000444bb1 : xchg dword ptr [rax], eax ; add byte ptr [rbx + rdi*2 - 2], bl ; jmp rax
0x0000000000444b81 : xchg dword ptr [rax], eax ; add byte ptr [rdx], cl ; jp 0x444b8b ; jmp qword ptr [rax]
0x000000000042e960 : xchg dword ptr [rcx], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000408946 : xchg dword ptr [rcx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000041ef32 : xchg dword ptr [rdx + rax], ecx ; add byte ptr [rax], al ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43db50] ; jmp rax
0x00000000004112d1 : xchg dword ptr [rdx], eax ; add bl, dh ; divps xmm0, xmm1 ; pop rbp ; ret
0x000000000041127f : xchg dword ptr [rdx], eax ; add bl, dh ; subps xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm0, dword ptr [rbp - 8] ; mulss xmm0, dword ptr [rbp - 4] ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x28756] ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x00000000004112af : xchg dword ptr [rdx], eax ; add bl, dh ; subps xmm1, xmm0 ; movaps xmm0, xmm1 ; movss xmm1, dword ptr [rbp - 8] ; mulss xmm0, xmm1 ; movss dword ptr [rbp - 8], xmm0 ; movss xmm1, dword ptr [rbp - 8] ; movss xmm0, dword ptr [rip + 0x28738] ; divss xmm0, xmm1 ; pop rbp ; ret
0x0000000000422935 : xchg dword ptr [rip - 0x76b70002], ecx ; ret
0x0000000000412627 : xchg eax, ebp ; adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000443bed : xchg eax, ebp ; cld ; inc eax ; add byte ptr [rax], r8b ; mov dl, byte ptr [rsi + 0x46e0fffc] ; add byte ptr [rax], al ; pop rsp ; xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x00000000004387ae : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4387da ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x438830 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043962e : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43965a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4396b0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a34e : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43a37a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43a3d0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b00e : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43b03a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43b090 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcce : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43bcfa ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43bd50 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9ae : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43c9da ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43ca30 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d76e : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43d79a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43d7f0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e4ee : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43e51a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43e570 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f92e : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x43f95a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x43f9b0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044074e : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x44077a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4407d0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413ce : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x4413fa ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x441450 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044204e : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x44207a ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x4420d0 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fae : xchg eax, ebp ; insd dword ptr [rdi], dx ; and byte ptr [rbp - 0x7b7bf1c2], cl ; mov edx, 0x59d13e77 ; loop 0x442fda ; push rsp ; mov dl, 0x63 ; or edx, ecx ; xor dword ptr [rsi], edi ; jg 0x443030 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000404e6d : xchg eax, ebp ; jmp 0x404e77
0x000000000041d6ae : xchg eax, ebp ; mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d545 : xchg eax, ebp ; mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d619 : xchg eax, ebp ; mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d462 : xchg eax, ebp ; mov edx, 0x8b480043 ; push rbp ; clc ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43b480] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x00000000004100c1 : xchg eax, ebp ; or byte ptr [rax], al ; add byte ptr [rax + 0x4855c3c9], dl ; mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x0000000000431637 : xchg eax, ebp ; or byte ptr [rbx], 0x44 ; add bl, dh ; divps xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000431667 : xchg eax, ebp ; or byte ptr [rbx], 0x44 ; add bl, dh ; movups xmm0, xmmword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x0000000000405824 : xchg eax, ebp ; pop rax ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4850
0x000000000040429c : xchg eax, ebp ; rol byte ptr [rax + rax*8 + 0x1ad840f], 0 ; add byte ptr [rdi], cl ; mov dh, 0x45 ; ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; cmp eax, 0x10 ; ja 0x4042ad ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x438ae8] ; jmp rax
0x000000000040f586 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004375e7 : xchg eax, ebp ; sar esp, -1 ; mov edi, 0x1700 ; call 0x40386b
0x000000000041d4a7 : xchg eax, ebp ; xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5d7 : xchg eax, ebp ; xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d587 : xchg eax, ebp ; xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d669 : xchg eax, ebp ; xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000403cac : xchg eax, ebx ; nop dword ptr [rax] ; mov eax, 0 ; test rax, rax ; je 0x403cbd ; push rbp ; mov rbp, rsp ; call rax
0x00000000004475b2 : xchg eax, ebx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; sub al, 0x1d ; add byte ptr [rax], al ; ficom dword ptr [rdi] ; cld ; call qword ptr [rbx + 1]
0x0000000000407049 : xchg eax, ebx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004443ad : xchg eax, ebx ; std ; call qword ptr [rax]
0x000000000042a56f : xchg eax, ebx ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004151e7 : xchg eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042eb16 : xchg eax, ecx ; add al, byte ptr [rax] ; add cl, cl ; ret
0x0000000000414327 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000410d86 : xchg eax, ecx ; add dword ptr [rax], eax ; add cl, cl ; ret
0x0000000000432829 : xchg eax, ecx ; and edi, esi ; dec dword ptr [rax + 0x39] ; ret
0x0000000000412325 : xchg eax, edi ; adc edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000443bfd : xchg eax, edi ; cld ; inc dword ptr [rax] ; add byte ptr [r8], r8b ; push rsp ; wait ; cld ; jmp qword ptr [rax]
0x0000000000434715 : xchg eax, edi ; hlt ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000417725 : xchg eax, edi ; mov edi, 0x8948fffe ; ret
0x000000000042cced : xchg eax, edi ; or al, byte ptr [rax] ; add cl, cl ; ret
0x000000000042a191 : xchg eax, edi ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000042c496 : xchg eax, edx ; mov edi, ebp ; dec dword ptr [rax + 0x29] ; ret
0x000000000042cbbc : xchg eax, edx ; or al, byte ptr [rax] ; add cl, cl ; ret
0x0000000000443d2c : xchg eax, edx ; ret 0xfffc
0x0000000000419019 : xchg eax, edx ; rol byte ptr [rax + rax*8 + 0x107840f], 0 ; add byte ptr [rbx - 0x74b71bbb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x0000000000412b33 : xchg eax, edx ; rol byte ptr [rax + rax*8 + 0x12c840f], 0 ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000418eb5 : xchg eax, edx ; rol byte ptr [rax + rax*8 + 0x12c840f], 0 ; add byte ptr [rbx - 0x74b717bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000414321 : xchg eax, edx ; rol byte ptr [rax + rax*8 + 0x191840f], 0 ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041b424 : xchg eax, edx ; rol byte ptr [rax + rax*8 + 0x31b840f], 0 ; add byte ptr [rbx - 0x74b71bbb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x00000000004135e0 : xchg eax, edx ; rol byte ptr [rax + rax*8 + 0x423840f], 0 ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041afd9 : xchg eax, edx ; rol byte ptr [rax + rax*8 + 0x423840f], 0 ; add byte ptr [rbx - 0x74b717bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4840
0x0000000000413cb1 : xchg eax, edx ; rol byte ptr [rax + rax*8 + 0x623840f], 0 ; add byte ptr [rbx - 0x74b713bb], cl ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000044437d : xchg eax, edx ; std ; dec dword ptr [rax + 0x65] ; add byte ptr [rax], al ; sub al, 0x92 ; std ; ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044438d : xchg eax, edx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x000000000044439d : xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444385 : xchg eax, edx ; std ; ljmp ptr [rax + 0x65] ; add byte ptr [rax], al ; xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000444395 : xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x00000000004443a5 : xchg eax, edx ; std ; push rax ; add byte ptr gs:[rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x0000000000447268 : xchg eax, esi ; adc al, 0xfc ; jmp qword ptr [rsi]
0x000000000044eebd : xchg eax, esi ; add byte ptr [rax], al ; mov byte ptr [rcx - 2], dh ; call qword ptr [rip]
0x000000000044ef2d : xchg eax, esi ; add byte ptr [rax], al ; salc ; jge 0x44ef37 ; call qword ptr [rdx]
0x0000000000421126 : xchg eax, esi ; and eax, 0x8948fffe ; ret
0x0000000000443bf5 : xchg eax, esi ; cld ; jmp rax
0x0000000000415e26 : xchg eax, esi ; fdivr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x000000000042e569 : xchg eax, esi ; out -1, eax ; dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x000000000044d0e0 : xchg eax, esi ; std ; std ; jmp qword ptr [rdx]
0x0000000000446a24 : xchg eax, esp ; adc dword ptr [rax], eax ; add dl, dl ; adc ah, bh ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x2000011 ; adc esp, edi ; jmp qword ptr [rdx]
0x0000000000405852 : xchg eax, esp ; add al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040b729 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbp + 0x483575c0], al ; mov eax, dword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7a5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b745 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rip + 0x48000000], al ; mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041ffd1 : xchg eax, esp ; add eax, 0xfffffde0 ; cmp rax, rax ; je 0x41ffe9 ; jmp rsp
0x000000000041e52c : xchg eax, esp ; cmp eax, 4 ; ja 0x41e7f0 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e857 : xchg eax, esp ; cmp eax, 4 ; ja 0x41ea05 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cdb0] ; jmp rax
0x000000000044c424 : xchg eax, esp ; imul eax, dword ptr [rax], 0 ; ret
0x000000000044cf24 : xchg eax, esp ; jbe 0x44cf56 ; add ch, dh ; cld ; std ; lcall ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [r11], es ; add dword ptr [rdx + rax], 0x4c ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x26000076 ; std ; std ; jmp qword ptr [rdx]
0x0000000000448200 : xchg eax, esp ; jp 0x448202 ; call rdx
0x000000000041e526 : xchg eax, esp ; mov dword ptr [rax + 0x18], edx ; mov eax, dword ptr [rbp - 0x6c] ; cmp eax, 4 ; ja 0x41e7f6 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000040e547 : xchg eax, esp ; nop ; leave ; ret
0x000000000042cb92 : xchg eax, esp ; or al, byte ptr [rax] ; add cl, cl ; ret
0x000000000044ab24 : xchg eax, esp ; push rdx ; add byte ptr [rax], al ; pop rax ; sar ebp, 1 ; jmp qword ptr [rsi]
0x0000000000435b6e : xchg eax, esp ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x000000000041e52b : xchg eax, r12d ; cmp eax, 4 ; ja 0x41e7f1 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cd88] ; jmp rax
0x000000000041e856 : xchg eax, r12d ; cmp eax, 4 ; ja 0x41ea06 ; mov eax, eax ; mov rax, qword ptr [rax*8 + 0x43cdb0] ; jmp rax
0x0000000000434925 : xchg edx, esi ; cld ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x000000000041b4ac : xchg esi, edi ; dec dword ptr [rbx - 0x74b71bbb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4858
0x0000000000444d65 : xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x0000000000444d55 : xchg esi, edi ; inc eax ; mov es, word ptr [rax] ; add byte ptr [rsi - 0x1f000179], bh ; mov es, word ptr [rax] ; add cl, dh ; xchg esi, edi ; inc dword ptr [rax] ; pop qword ptr [rax] ; add byte ptr [rbx], ah ; mov dh, bh ; jmp qword ptr [rax]
0x0000000000444d5d : xchg esi, edi ; jmp rax
0x000000000042a56e : xchg rax, rbx ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044438c : xchg rax, rdx ; std ; dec dword ptr [rax + 0x68000065] ; xchg eax, edx ; std ; ljmp ptr [rax - 0x7bffff9b] ; xchg eax, edx ; std ; dec eax ; add byte ptr gs:[rax], al ; not byte ptr [rdx + 0x65f0fffd] ; add byte ptr [rax], al ; add al, 0x93 ; std ; call qword ptr [rax]
0x00000000004123e5 : xlatb ; adc bh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000450122 : xlatb ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x00000000004104f7 : xlatb ; add eax, 0x8b480000 ; ror byte ptr [r8 - 0x75], 1 ; push rbp ; fmul st(1) ; ret
0x0000000000409b1f : xlatb ; call 0x405d5d
0x0000000000443f5d : xlatb ; cld ; call rax
0x0000000000435b67 : xlatb ; cld ; inc dword ptr [rbx - 0x6bf00008] ; rol byte ptr [rax + rax*8 + 0x2cbf0a74], 0x25 ; add al, r13b ; ret 0xfcdd
0x0000000000443f55 : xlatb ; cld ; push qword ptr [rax + 0x66000053] ; xlatb ; cld ; call rax
0x00000000004353d5 : xlatb ; out -4, eax ; dec dword ptr [rbx - 0x74b713bb] ; push rbp ; fmul dword ptr [rax - 0x7d] ; ret 0x4828
0x00000000004099c9 : xlatb ; ret 0xffff
0x0000000000428802 : xor ah, byte ptr [rsi] ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000443799 : xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004437c9 : xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000448dfd : xor al, 0 ; add al, bh ; xchg ah, bh ; call rbx
0x00000000004437a1 : xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004437a9 : xor al, 0 ; add bl, bh ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004437c1 : xor al, 0 ; add byte ptr [rbx + 0x45], bh ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004437b9 : xor al, 0 ; add byte ptr [rcx + 0x45], ah ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000448d35 : xor al, 0 ; add byte ptr [rcx], al ; push rsi ; cld ; call qword ptr [rip]
0x00000000004437b1 : xor al, 0 ; add byte ptr [rcx], ch ; cld ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004437d1 : xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x00000000004470e0 : xor al, 0x13 ; cld ; jmp qword ptr [rsi]
0x000000000044423c : xor al, 0x20 ; std ; jmp rax
0x0000000000443904 : xor al, 0x4c ; cld ; inc dword ptr [rax] ; cmp al, byte ptr [rax] ; add byte ptr [rsi + 0x4c], cl ; cld ; jmp qword ptr [rax]
0x000000000044a548 : xor al, 0x5b ; std ; jmp rsp
0x000000000044bec4 : xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000042498d : xor al, 0x8b ; test dword ptr [rdi + rdi*8 - 1], edi ; dec dword ptr [rax - 0x68] ; movss xmm0, dword ptr [rax*4 + 0x43dc50] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x84] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x84], 1 ; jmp 0x4249b9
0x0000000000424a41 : xor al, 0x8b ; test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x68] ; movss xmm0, dword ptr [rax*4 + 0x43dc30] ; mov rax, qword ptr [rbp - 0x4f8] ; mov edx, dword ptr [rbp - 0x8c] ; movsxd rdx, edx ; add rdx, 0x6c ; movss dword ptr [rax + rdx*4 + 8], xmm0 ; add dword ptr [rbp - 0x8c], 1 ; jmp 0x424a6d
0x000000000041dc55 : xor al, 0x90 ; pop rbp ; ret
0x000000000041dc42 : xor al, 0xeb ; adc dword ptr [rax - 0x75], ecx ; clc ; movss xmm0, dword ptr [rip + 0x1e3e3] ; movss dword ptr [rax + 0x34], xmm0 ; nop ; pop rbp ; ret
0x000000000044a079 : xor al, 0xfd ; jmp rdx
0x000000000040e083 : xor al, 3 ; add byte ptr [rax], al ; addss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x2b8f8] ; divss xmm0, xmm1 ; mov rax, qword ptr [rbp - 0x68] ; movss dword ptr [rax + 0x3d8], xmm0 ; nop ; pop rbp ; ret
0x000000000040e12f : xor al, 3 ; add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x10] ; movss dword ptr [rax], xmm0 ; nop ; pop rbp ; ret
0x0000000000407bc9 : xor al, 6 ; add byte ptr [rax], al ; leave ; ret
0x000000000042d826 : xor al, 8 ; add byte ptr [rax], al ; leave ; ret
0x000000000042e153 : xor al, byte ptr [rax + rax] ; add cl, cl ; ret
0x000000000044c89c : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0x70 ; add byte ptr [rax], al ; std ; std ; jmp qword ptr [rsi]
0x0000000000446374 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; or al, byte ptr [rax] ; add byte ptr [rbp + 0xb], dl ; cld ; jmp qword ptr [rsi]
0x00000000004492dc : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cmp al, byte ptr fs:[rax] ; add byte ptr [rcx - 0x40], ch ; cld ; jmp qword ptr [rsi]
0x000000000044c46c : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; imul eax, dword ptr [rax], 0 ; or edi, edx ; std ; jmp qword ptr [rsi]
0x00000000004485e4 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, 0x83170000 ; cld ; jmp qword ptr [rsi]
0x000000000044c5bc : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sub ebx, edi ; std ; jmp qword ptr [rsi]
0x000000000044c72c : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov ah, 0x6e ; add byte ptr [rax], al ; cmp esp, edi ; std ; jmp qword ptr [rsi]
0x000000000044c01c : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [eax], al ; fcomi st(6) ; std ; jmp qword ptr [rsi]
0x000000000044c2fc : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx], ch ; add bl, bh ; clc ; std ; jmp qword ptr [rsi]
0x000000000044beac : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; insd dword ptr [rdi], dx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x66 ; add byte ptr [rax], al ; retf ; cmc ; std ; jmp qword ptr [rsi]
0x000000000044974d : xor al, byte ptr [rax] ; add byte ptr [rdi + rax*2], al ; hlt ; add byte ptr [rcx + 0xe], r8b ; adc byte ptr [rsi + 0x60d4302], al ; mov word ptr [rbx], es ; add dword ptr [rbx + rax], -0x3f ; xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x0000000000410936 : xor al, byte ptr [rbx] ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000410bbb : xor al, byte ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000443e74 : xor bh, cl ; cld ; call qword ptr [rax]
0x0000000000420436 : xor bh, dh ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000042198a : xor bl, byte ptr [rip - 0x76b70002] ; ret
0x000000000041de6f : xor bl, dh ; cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x000000000041de6e : xor bl, sil ; cvttps2pi mm2, xmm0 ; mov rsi, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rsi + 0x20] ; add rsi, 4 ; mov rdi, rax ; call rcx
0x0000000000414a91 : xor byte ptr [rax + 0x38c48348], dl ; pop rbx ; pop rbp ; ret
0x00000000004099bc : xor byte ptr [rax - 0x75], cl ; enter -0x7cb8, -0x40 ; push rax ; mov rdi, rax ; call 0x405cb2
0x0000000000411020 : xor byte ptr [rax - 0x77], cl ; xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000044488c : xor byte ptr [rax - 2], dl ; call rax
0x00000000004387cd : xor byte ptr [rax], ah ; movabs eax, dword ptr ds:[0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000435f7d : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov byte ptr [rax + 0x41], 0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x42], 0 ; nop ; leave ; ret
0x0000000000435937 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; mov qword ptr [rax + 0x38], 0 ; nop ; leave ; ret
0x000000000044393c : xor byte ptr [rbp - 4], cl ; jmp rax
0x0000000000444198 : xor byte ptr [rbp], bl ; add byte ptr [rax + 0x50fffd1c], al ; pop rbp ; add byte ptr [rax], al ; mov esi, 0x70fffd1c ; pop rbp ; add byte ptr [rax], al ; ficomp dword ptr [rdi*8 + 0x5d90ff] ; add byte ptr [rdi], cl ; sbb eax, 0x5db0fffd ; add byte ptr [rax], al ; sbb eax, 0x5dd0fffd ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; sbb eax, 0x5df0fffd ; add byte ptr [rax], al ; jl 0x444222 ; std ; call qword ptr [rax]
0x0000000000411024 : xor byte ptr [rbx + 0x50893852], cl ; cmp byte ptr [rax - 0x7d], cl ; insd dword ptr [rdi], dx ; clc ; add ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rax, qword ptr [rbp - 0x28] ; pop rbp ; ret
0x000000000040bb81 : xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040bbbb : xor byte ptr [rbx + 0x6348fc55], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000041d4a8 : xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d5d8 : xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d588 : xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x000000000041d66a : xor byte ptr [rbx + rax*2 + 0x558b4800], 0xf8 ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; subss xmm1, xmm0 ; movaps xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 0xc] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm2, dword ptr [rdx*4 + 0x43ba40] ; mov rdx, qword ptr [rbp - 8] ; movss xmm0, dword ptr [rdx + 0x44] ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 0xc], xmm0 ; nop ; pop rbp ; ret
0x0000000000443574 : xor byte ptr [rbx], ch ; cld ; inc dword ptr [rax] ; sub eax, dword ptr [rax] ; add byte ptr [rsi], bh ; sub edi, esp ; jmp qword ptr [rax]
0x0000000000409822 : xor byte ptr [rcx - 0x7d], cl ; in al, dx ; add ebx, ebp ; call 0x68c623b7
0x0000000000447e30 : xor byte ptr [rdi - 4], 0xff ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; mov esp, 0x72000025 ; ja 0x447e92 ; jmp qword ptr [rip]
0x0000000000447e10 : xor byte ptr [rdi - 4], 0xff ; and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rsi + 0x60d4302], al ; pop rbx ; or al, 7 ; or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pushfq ; and eax, 0x77800000 ; cld ; call qword ptr [rcx]
0x000000000040783a : xor byte ptr [rdi], al ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000443678 : xor byte ptr [rdi], ch ; add byte ptr [rax], al ; nop ; cmp bh, ah ; lcall ptr [rax + 0x2f] ; add byte ptr [rax], al ; ret
0x000000000040f6ec : xor byte ptr [rip - 0x36700000], al ; ret
0x000000000042128c : xor byte ptr [rsi + rdi*8], ah ; dec dword ptr [rax - 0x77] ; ret
0x0000000000449b99 : xor ch, bh ; call qword ptr [rcx]
0x0000000000449b11 : xor ch, bh ; jmp qword ptr [rsi]
0x0000000000443524 : xor ch, byte ptr [rcx] ; cld ; push qword ptr [rax + 0x6a000029] ; sub esp, edi ; call rax
0x0000000000449764 : xor cl, byte ptr [rdi + rax] ; or byte ptr [rax + rax], ah ; add byte ptr [rax], al ; hlt ; cmp eax, 0xf57a0000 ; cld ; call rcx
0x0000000000405ea6 : xor cl, byte ptr [rip - 0x36700000] ; ret
0x0000000000405640 : xor dh, 0xff ; dec dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0x6dbe
0x0000000000444b04 : xor dh, byte ptr [rdi - 2] ; jmp qword ptr [rax]
0x00000000004263c8 : xor dl, byte ptr [rax + rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000427d3a : xor dl, byte ptr [rcx] ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000042b98d : xor dword ptr [rax + rax], edx ; add cl, cl ; ret
0x0000000000443709 : xor dword ptr [rax], eax ; add byte ptr [rdx + 0x3e], ch ; cld ; push qword ptr [rax - 0x77ffffcf] ; cld ; call rax
0x000000000042be8d : xor dword ptr [rcx], edx ; add byte ptr [rax], al ; leave ; ret
0x0000000000411a8b : xor dword ptr [rdi + rdi*8], ebx ; dec dword ptr [rax - 0x77] ; ret
0x000000000042b48d : xor dword ptr [rdi], edx ; add byte ptr [rax], al ; leave ; ret
0x000000000040871d : xor dword ptr [rdx], eax ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000427fe7 : xor dword ptr [rdx], esp ; add byte ptr [rax], al ; leave ; ret
0x0000000000438372 : xor dword ptr [rsi - 0x41dfcf81], edi ; movabs eax, dword ptr [0x4dbdf996fbbe0e83] ; adc edx, esi ; mov ebp, 0xbdb27f5f ; ret 0x8edc
0x00000000004387ca : xor dword ptr [rsi], edi ; jg 0x438814 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043964a : xor dword ptr [rsi], edi ; jg 0x439694 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043a36a : xor dword ptr [rsi], edi ; jg 0x43a3b4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043b02a : xor dword ptr [rsi], edi ; jg 0x43b074 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043bcea : xor dword ptr [rsi], edi ; jg 0x43bd34 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043c9ca : xor dword ptr [rsi], edi ; jg 0x43ca14 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043d78a : xor dword ptr [rsi], edi ; jg 0x43d7d4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043e50a : xor dword ptr [rsi], edi ; jg 0x43e554 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043f94a : xor dword ptr [rsi], edi ; jg 0x43f994 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044076a : xor dword ptr [rsi], edi ; jg 0x4407b4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x00000000004413ea : xor dword ptr [rsi], edi ; jg 0x441434 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000044206a : xor dword ptr [rsi], edi ; jg 0x4420b4 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x0000000000442fca : xor dword ptr [rsi], edi ; jg 0x443014 ; and byte ptr [rsi], bh ; movabs eax, dword ptr [0x4d3df996fb3e0e83] ; adc edx, esi ; cmp eax, 0x3db27ed8 ; ret 0x8edc
0x000000000043208b : xor dword ptr [rsi], edx ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000419012 : xor eax, 0x39480000 ; ret
0x00000000004437f9 : xor eax, 0x46a80000 ; cld ; push qword ptr [rax - 0x4cffffcb] ; cld ; call rax
0x0000000000443801 : xor eax, 0x46b30000 ; cld ; call rax
0x0000000000443809 : xor eax, 0x46e10000 ; cld ; push rax ; xor eax, 0x46f00000 ; cld ; call qword ptr [rax]
0x0000000000443811 : xor eax, 0x46f00000 ; cld ; call qword ptr [rax]
0x0000000000424747 : xor eax, 0x89480000 ; ret 0x8d48
0x00000000004354e7 : xor eax, 0x90fffce3 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000450118 : xor eax, 0xc80011f0 ; add al, 5 ; fcom qword ptr [rcx] ; add bh, dl ; add al, 0x61 ; lock adc dword ptr [rax], eax ; ret 0x505
0x0000000000420431 : xor eax, 0xf7e8fffe ; xor bh, dh ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000040b730 : xor eax, 0xf8458b48 ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b79e ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000041bed3 : xor eax, 1 ; leave ; ret
0x000000000040b6b7 : xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8b], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8b] ; test al, al ; je 0x40b727 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x90] ; test eax, eax ; jne 0x40b727 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8c], 1 ; nop ; pop rbp ; ret
0x000000000040b705 : xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8d], dl ; mov rax, qword ptr [rbp - 8] ; movzx eax, byte ptr [rax + 0x8d] ; test al, al ; je 0x40b7c9 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x94] ; test eax, eax ; jne 0x40b7c9 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 0x98] ; test eax, eax ; jne 0x40b7c9 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x94], 5 ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 0x98], 0x19 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8e], 0 ; nop ; pop rbp ; ret
0x000000000040b77d : xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 0x8f], dl ; nop ; pop rbp ; ret
0x00000000004308b8 : xor eax, 1 ; mov edx, eax ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 4], dl ; nop ; pop rbp ; ret
0x000000000041d982 : xor eax, 1 ; test al, al ; je 0x41d9e4 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; test eax, eax ; jne 0x41d9e4 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; movss xmm0, dword ptr [rax + 8] ; mov rax, qword ptr [rbp - 8] ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov byte ptr [rax + 1], 1 ; nop ; pop rbp ; ret
0x000000000041db00 : xor eax, 1 ; test al, al ; je 0x41dba6 ; mov rax, qword ptr [rbp - 8] ; mov eax, dword ptr [rax + 8] ; lea edx, dword ptr [rax + 2] ; mov rax, qword ptr [rbp - 8] ; mov dword ptr [rax + 8], edx ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov rdx, qword ptr [rdx + 0x20] ; movss xmm1, dword ptr [rdx + 8] ; mov rdx, qword ptr [rbp - 8] ; movss xmm2, dword ptr [rdx + 0x50] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 8] ; pxor xmm0, xmm0 ; cvtsi2ss xmm0, edx ; mulss xmm0, xmm2 ; addss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000041917c : xor eax, dword ptr [rax] ; add bl, ch ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000443779 : xor eax, dword ptr [rax] ; add byte ptr [rax + 0x44], dh ; cld ; ljmp ptr [rax - 0x73ffffcd] ; cld ; dec eax ; xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000443789 : xor eax, dword ptr [rax] ; add byte ptr [rdi - 0x170003bc], dl ; xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x0000000000443791 : xor eax, dword ptr [rax] ; add ch, al ; cld ; dec dword ptr [rax] ; xor al, 0 ; add ah, dl ; cld ; ljmp ptr [rax] ; xor al, 0 ; add al, dh ; cld ; dec dword ptr [rax + 0x34] ; add byte ptr [rax], al ; sti ; cld ; ljmp ptr [rax + 0x34] ; add byte ptr [rax], al ; sub dword ptr [rbp - 4], eax ; dec dword ptr [rax + 0x61000034] ; cld ; ljmp ptr [rax + 0x7b000034] ; cld ; dec eax ; xor al, 0 ; add ah, dl ; cld ; push rax ; xor al, 0 ; add dh, dh ; cld ; call qword ptr [rax]
0x000000000041120c : xor eax, dword ptr [rbx] ; pop rbp ; ret
0x000000000042e57e : xor eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000449e09 : xor ebp, edi ; jmp qword ptr [rbx]
0x0000000000449d69 : xor ebp, edi ; jmp qword ptr [rdx]
0x0000000000449c61 : xor ebp, edi ; jmp qword ptr [rsi]
0x0000000000449e08 : xor ebp, r15d ; jmp qword ptr [rbx]
0x0000000000437dd6 : xor ebx, ebx ; nop dword ptr [rax + rax] ; mov rdx, r13 ; mov rsi, r14 ; mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000431847 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000446238 : xor ecx, dword ptr [rdx] ; cld ; jmp qword ptr [rsi]
0x000000000042eb99 : xor ecx, dword ptr [rsi - 3] ; dec dword ptr [rax - 0x75] ; clc ; lea rdx, qword ptr [rax*8] ; mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004202b1 : xor edi, esi ; dec dword ptr [rax - 0x77] ; ret 0x858b
0x0000000000420376 : xor edi, esi ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000431f89 : xor edx, dword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000041120a : xor esi, dword ptr [rbx] ; xor eax, dword ptr [rbx] ; pop rbp ; ret
0x0000000000411208 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor eax, dword ptr [rbx] ; pop rbp ; ret
0x0000000000411206 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor eax, dword ptr [rbx] ; pop rbp ; ret
0x000000000044b9b8 : xor esi, edx ; std ; jmp qword ptr [rsi]
0x00000000004458c9 : xor esp, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add dh, ch ; jrcxz 0x4458e8 ; jmp rcx
0x0000000000421189 : xor esp, dword ptr [rip - 0x76b70002] ; ret
0x0000000000449d68 : xor rbp, r15 ; jmp qword ptr [rdx]
0x0000000000431626 : xorps xmm0, xmm1 ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x10] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; divss xmm0, xmm1 ; movss xmm1, dword ptr [rip + 0x100a0] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 4], xmm0 ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax + 0x20] ; mov rdx, qword ptr [rbp - 8] ; mov edx, dword ptr [rdx + 0x14] ; movsxd rdx, edx ; movss xmm1, dword ptr [rdx*4 + 0x440b80] ; movss xmm0, dword ptr [rip + 0x10074] ; mulss xmm0, xmm1 ; movss dword ptr [rax + 8], xmm0 ; nop ; pop rbp ; ret
0x000000000040c987 : xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x40395f
0x000000000040c956 : xorps xmm2, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e8] ; movss xmm0, dword ptr [rip + 0x2d003] ; movaps xmm3, xmm1 ; xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403990
0x000000000040c970 : xorps xmm3, xmm0 ; mov rax, qword ptr [rbp - 0x18] ; movss xmm1, dword ptr [rax + 0x3e0] ; movss xmm0, dword ptr [rip + 0x2cfe9] ; xorps xmm0, xmm1 ; movaps xmm1, xmm3 ; call 0x403976

Unique gadgets found: 12262
