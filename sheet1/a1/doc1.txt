Usage: 
$ python checkPort.py <target IP>

Finding out the  HTTP daemons and ports:
To find out the HTTP ports, we need to scan each port at the host, check if it's open, and check if it's HTTP. To do it, we create a socket and try to connect to it. If we are successful, we then send a request to the server, as follows: 
"HEAD / HTTP/1.0\r\n\r\n"
If a HTTP daemon is litening to the port, the response to this request contains it's header. Here we can find the information we need. We first try to find the substring "HTTP" at what we recieved. If we are able to, we can be sure to a certain degree that we are dealing with a HTTP daemon. Next, try to find out wich is the daemon. In the header, it is easy to find: there's a section "Server". After finding the daemon, we check for it in a list where we put all the daemons that we already found. If it's there, we append the port we're in to it's ports list. If it isn't, we append it in the daemons list and create a list for the ports it's listening to. In the end, we print all daemons and the respective port.


Finding out the FTP daemons:

As it has been told, the ports which the FTPds are listening to are 210, 2100, 2121 and 21000. So we only open sockets to those ports (for simplicity). For each port, the procedure is the following:
We try to open a socket with the host and port. If we are successful, we firstly crate a counting list "ftpServer". This list is just an extra measure to increase the chances of finding out the right FTP daemon. We then get the welcome banner from the server. Then, we send 3 commands:
WHOAREYOU
HELP
QUIT
After using nmap and finding out each daemon, we can find out what each one send after recieveng those commands (I'm calling the answer to those commands the daemon's "signature"). The expected answers are saved in a text file "ftpSignatures.txt". Now, we compare the answers we got with the ones in the file. If we get a match, we increase the counter in the position of the daemon we found out, as follows:
Position 0 - the answer was a match to an ProFTPD answer.
Position 1 - match to Pure-FTPd
Position 2 - match to vsftpd
Position 3 - match to pyftpd
Position 4 - no match was found
After all 3 commands are tested, we then find which position has the higher value, and this will be the daemon.

The HTTP daemons and ports are, as the writing of this documentation:

mini_httpd/1.19 19dec2003
Ports:
777 1408 4739 11901 14673 18254 22012 28975 31331 40305 42037 44113 48915 50525 50844 52028 56617 61210 61299 64947 

Apache/2.4.7 (Ubuntu)
Ports:
2589 8223 9813 10423 15302 17773 18824 20545 23439 23955 31711 36798 37707 39207 40074 40642 40671 52381 56662 64065 

micro_httpd
Ports:
3890 6966 12346 15047 18948 24542 28072 29058 38603 41347 46382 49241 51250 51359 53999 57311 58689 61556 64220 64442 

webfs/1.21
Ports:
5533 12080 16663 18769 27890 38090 40110 47963 48870 50187 50318 50356 50775 52347 53559 53968 59480 60284 60346 60835 

lighttpd/1.4.33
Ports:
6371 8486 10388 13967 20863 21241 22461 23255 24584 25797 26378 33210 33922 36424 38591 40126 42715 52867 55159 56900 


FTP daemons and respective ports:

Port 210 daemon: ProFTPD
Port 2100 daemon: Pure-FTPd
Port 2121 daemon: pyftpd
Port 21000 daemon: vsftpd
